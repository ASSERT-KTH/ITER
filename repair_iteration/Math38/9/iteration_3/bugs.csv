bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  nfxm,  -rhosq);	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rcip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	35	1	replace
2	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  -rhosq);	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rcip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	35	1	replace
3	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  jpt,  ih);  [CE]  cannot  find  symbol  ih  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  jpt,  ih);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  jpt,  ih);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    ih);    	non-compiled	[CE]  cannot  find  symbol  ih	141	None	replace
4	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  jpt,  nfm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  jpt,  nfm);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    ih);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	141	1	replace
5	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  jpt,  nfm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  jpt,  nfm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  jpt,  nfm);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    ih);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	141	1	replace
6	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  jpt,  rhs);  [CE]  cannot  find  symbol  rhs  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  jpt,  rhs);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  jpt,  rhs);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    ih);    	non-compiled	[CE]  cannot  find  symbol  rhs	141	None	replace
7	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,    nfm,    nfxm);    zMatrix.setEntry(jpt,  nfm,  nfxm);	  	compilable	  [FE]  OutOfRangeException  	114	1	add
8	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  nfxm);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    nfxm);    zMatrix.setEntry(jpt,  nfm,  nfxm);	  	compilable	  [FE]  OutOfRangeException  	114	1	add
9	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  nfxm));  [CE]  ';'  expected  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  nfxm));  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    nfxm);    zMatrix.setEntry(jpt,  nfm,  nfxm));	  	non-compiled	[CE]  ';'  expected	114	None	add
10	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  ZMatrix.setEntry(jpt,  nfm,  nfxm);  [CE]  cannot  find  symbol  ZMatrix  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  ZMatrix.setEntry(jpt,  nfm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    nfxm);    ZMatrix.setEntry(jpt,  nfm,  nfxm);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	114	None	add
11	[BUG]  [BUGGY]  ZMatrix.setEntry(jpt,  jpt,  nfm);  [CE]  cannot  find  symbol  ZMatrix  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(jpt,  jpt,  nfm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(jpt,  jpt,  nfm);	          zMatrix.setEntry(jpt,    jpt,    jpt);    ZMatrix.setEntry(jpt,    jpt,    jpt);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	57	None	replace
12	[BUG]  [BUGGY]  ZMatrix.setEntry(jpt,  jpt,  jpt);  [CE]  cannot  find  symbol  ZMatrix  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(jpt,  jpt,  jpt);	          zMatrix.setEntry(jpt,    jpt,    jpt);    ZMatrix.setEntry(jpt,    jpt,    jpt);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	57	None	replace
13	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfm,  nfxm,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int)  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfm,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfm,  nfxm,  nfxm);	          zMatrix.setEntry(jpt,    jpt,    jpt);    ZMatrix.setEntry(jpt,    jpt,    jpt);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int)	57	None	replace
14	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,  nfm,  nfxm);	          zMatrix.setEntry(jpt,    jpt,    jpt);    ZMatrix.setEntry(jpt,    jpt,    jpt);    	compilable	  [FE]  OutOfRangeException  	57	1	replace
15	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfm,  nfxm);  [FE]  OutOfRangeException  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfm,  nfxm);	          zMatrix.setEntry(jpt,    jpt,    jpt);    ZMatrix.setEntry(jpt,    jpt,    jpt);    	compilable	  [FE]  OutOfRangeException  	57	1	replace
16	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfxm,        recip);        zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	39	1	add
17	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        recip);        zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	39	1	add
18	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  re  [CE]  ')'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  re  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        recip);        zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  re	  	non-compiled	[CE]  ')'  expected	39	None	add
19	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  ZMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  ZMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        recip);        zMatrix.setEntry(jpt,    nfxm,    recip);    ZMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	39	None	add
20	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  rcip);  zMatrix.setEntry(jpt,  nfxm,  recip);  [CE]  cannot  find  symbol  rcip  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  rcip);  zMatrix.setEntry(jpt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        recip);        zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  rcip);  zMatrix.setEntry(jpt,  nfxm,  recip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	39	None	add
21	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(int,int)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm);	  zMatrix.setEntry(nfm,    jpt,    nfxm);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int)	113	None	replace
22	[BUG]  [BUGGY]  ZMatrix.setEntry(nfm,  nfxm,  recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(nfm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(nfm,  nfxm,  recip);	          zMatrix.setEntry(nfm,    nfxm,    recip);    ZMatrix.setEntry(nfm,    nfxm,    recip);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	10	None	replace
23	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  ZMatrix.setEntry(nfm,  nfxm,  recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  ZMatrix.setEntry(nfm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  rhosq);  ZMatrix.setEntry(nfm,  nfxm,  recip);	          zMatrix.setEntry(nfm,    nfxm,    recip);    ZMatrix.setEntry(nfm,    nfxm,    recip);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	10	None	replace
24	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,  nfxm,  -rhosq);	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -rcip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	107	1	replace
25	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  -rhosq);	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -rcip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	107	1	replace
26	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -rhs);  [CE]  cannot  find  symbol  rhs  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -rhs);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  -rhs);	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -rcip);    	non-compiled	[CE]  cannot  find  symbol  rhs	107	None	replace
27	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfm,    nfxm);    zMatrix.setEntry(0,  nfm,  nfxm);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
28	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  nfxm);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    nfxm);    zMatrix.setEntry(0,  nfm,  nfxm);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
29	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  nfxm));  [CE]  ';'  expected  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  nfxm));  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    nfxm);    zMatrix.setEntry(0,  nfm,  nfxm));	  	non-compiled	[CE]  ';'  expected	62	None	add
30	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  nfx);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfm,    nfxm);    zMatrix.setEntry(0,  nfm,  nfx);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
31	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  nfx);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  nfx);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    nfxm);    zMatrix.setEntry(0,  nfm,  nfx);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
32	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfm,    nfxm);    zMatrix.setEntry(0,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
33	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    nfxm);    zMatrix.setEntry(0,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
34	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	55	1	add
35	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	55	1	add
36	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  ZMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  ZMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    ZMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	55	None	add
37	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	55	1	add
38	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	55	1	add
39	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(ipt,  nfxm,  -rhosq);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -rcip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	83	1	replace
40	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,  nfxm,  -rhosq);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -rcip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	83	1	replace
41	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -rhs);  [CE]  cannot  find  symbol  rhs  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -rhs);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,  nfxm,  -rhs);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -rcip);    	non-compiled	[CE]  cannot  find  symbol  rhs	83	None	replace
42	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	48	1	add
43	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	48	1	add
44	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	48	1	add
45	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	48	1	add
46	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ih);  zMatrix.setEntry(0,  nfxm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ih);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ih);  zMatrix.setEntry(0,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ih	48	None	add
47	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	48	1	add
48	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	48	1	add
49	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
50	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
51	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  ZMatrix.setEntry(ipt,  nfxm,  -1);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  ZMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,    nfxm,    -1);    ZMatrix.setEntry(ipt,  nfxm,  -1);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	105	None	add
52	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,  nfm,  rhosq);	  zMatrix.setEntry(0,    nfm,    nfxm);    	compilable	  [FE]  OutOfRangeException  	63	1	replace
53	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  rhosq);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfm,  rhosq);	  zMatrix.setEntry(0,    nfm,    nfxm);    	compilable	  [FE]  OutOfRangeException  	63	1	replace
54	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	79	1	add
55	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	79	1	add
56	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	79	1	add
57	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	79	1	add
58	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    ZMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	79	None	add
59	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	79	1	add
60	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	79	1	add
61	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfxm,        rhosq);        zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	74	1	add
62	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        rhosq);        zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	74	1	add
63	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  r  [CE]  ')'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  r  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        rhosq);        zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  r	  	non-compiled	[CE]  ')'  expected	74	None	add
64	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhsq);  zMatrix.setEntry(jpt,  nfxm,  rhsq);  [CE]  cannot  find  symbol  rhsq  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhsq);  zMatrix.setEntry(jpt,  nfxm,  rhsq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        rhosq);        zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhsq);  zMatrix.setEntry(jpt,  nfxm,  rhsq);	  	non-compiled	[CE]  cannot  find  symbol  rhsq	74	None	add
65	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rsq);  zMatrix.setEntry(jpt,  nfxm,  rsq);  [CE]  cannot  find  symbol  rsq  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rsq);  zMatrix.setEntry(jpt,  nfxm,  rsq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        rhosq);        zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rsq);  zMatrix.setEntry(jpt,  nfxm,  rsq);	  	non-compiled	[CE]  cannot  find  symbol  rsq	74	None	add
66	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhs);  zMatrix.setEntry(jpt,  nfxm,  rhs);  [CE]  cannot  find  symbol  rhs  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhs);  zMatrix.setEntry(jpt,  nfxm,  rhs);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        rhosq);        zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhs);  zMatrix.setEntry(jpt,  nfxm,  rhs);	  	non-compiled	[CE]  cannot  find  symbol  rhs	74	None	add
67	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	add
68	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	add
69	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	add
70	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	add
71	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  ZMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  ZMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -1);    ZMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	30	None	add
72	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	add
73	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	add
74	[BUG]  [BUGGY]  if(recip  <  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  [CE]  ')'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  <  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  <  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip;    	non-compiled	[CE]  ')'  expected	100	None	replace
75	[BUG]  [BUGGY]  if(recip  <  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  <  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  <  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip;    	non-compiled	[CE]  	100	None	replace
76	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip));  }  [CE]  ';'  expected  [FE]          OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip));  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    recip));    	non-compiled	[CE]  ';'  expected	146	None	replace
77	[BUG]  [BUGGY]  if(recip  <  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip));  }  [CE]  ';'  expected  [FE]            OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  <  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  <  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip));  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    recip));    	non-compiled	[CE]  ';'  expected	146	None	replace
78	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  recip));  [CE]  ';'  expected  [FE]              OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  recip));  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfm,  recip));	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    recip));    	non-compiled	[CE]  ';'  expected	146	None	replace
79	[BUG]  [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(jpt,  nfxm,  -recip);	          zMatrix.setEntry(jpt,    nfxm,    -recip);    ZMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	38	None	replace
80	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,  nfxm,  jpt);	  zMatrix.setEntry(jpt,    nfxm,    jpt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	29	1	replace
81	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  jpt);	  zMatrix.setEntry(jpt,    nfxm,    jpt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	29	1	replace
82	[BUG]  [BUGGY]  ZMatrix.setEntry(nfm,  nfxm,  -1);  [CE]  cannot  find  symbol  ZMatrix  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(nfm,  nfxm,  -1);	          zMatrix.setEntry(nfm,    nfxm,    -1);    ZMatrix.setEntry(nfm,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	32	None	replace
83	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	137	1	add
84	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	137	1	add
85	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  ZMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  ZMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    ZMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	137	None	add
86	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	137	1	add
87	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	137	1	add
88	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	137	1	add
89	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	137	1	add
90	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	89	1	add
91	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	89	1	add
92	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	89	1	add
93	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	89	1	add
94	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	89	1	add
95	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	89	1	add
96	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	89	1	add
97	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	89	1	add
98	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ih);  [CE]  cannot  find  symbol  ih  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ih);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  -ih);	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -id);    	non-compiled	[CE]  cannot  find  symbol  ih	108	None	replace
99	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  0,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  0,  0);	  zMatrix.setEntry(jpt,    -1,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	152	1	replace
100	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  0,  0);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  0,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  0,  0);	  zMatrix.setEntry(jpt,    -1,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	152	1	replace
101	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  0,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  0,  -1);	  zMatrix.setEntry(jpt,    -1,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	152	1	replace
102	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  0,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  0,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  0,  -1);	  zMatrix.setEntry(jpt,    -1,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	152	1	replace
103	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  -1,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,  -1,  -1);	  zMatrix.setEntry(jpt,    -1,    -1);    	compilable	  [FE]  OutOfRangeException  	152	1	replace
104	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  -1,  -1);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  -1,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  -1,  -1);	  zMatrix.setEntry(jpt,    -1,    -1);    	compilable	  [FE]  OutOfRangeException  	152	1	replace
105	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  recip);	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	8	1	replace
106	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  recip);	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	8	1	replace
107	[BUG]  [BUGGY]  ZMatrix.setEntry(ipt,  nfxm,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(ipt,  nfxm,  -recip);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    ZMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	84	None	replace
108	[BUG]  [BUGGY]  zMatrix.setEntry(fm,  nfxm,  recip);  [CE]  cannot  find  symbol  fm  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(fm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(fm,  nfxm,  recip);	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(fm,    nfxm,    recip);    	non-compiled	[CE]  cannot  find  symbol  fm	128	None	replace
109	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhs);  [CE]  cannot  find  symbol  rhs  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhs);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfxm,  rhs);	  zMatrix.setEntry(0,    nfxm,    rhosq);    	non-compiled	[CE]  cannot  find  symbol  rhs	65	None	replace
110	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(jpt,    jpt,    jpt);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
111	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(jpt,    jpt,    jpt);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
112	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  nfxm,  1);	  zMatrix.setEntry(nfm,    nfxm,    1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	86	1	replace
113	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  1);	  zMatrix.setEntry(nfm,    nfxm,    1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	86	1	replace
114	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	add
115	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	add
116	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	add
117	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	add
118	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	add
119	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	add
120	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ih);  [CE]  cannot  find  symbol  ih  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ih);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ih);	  	non-compiled	[CE]  cannot  find  symbol  ih	71	None	add
121	[BUG]  [BUGGY]  ZMatrix.setEntry(jpt,  nfm,  recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]            OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(jpt,  nfm,  recip);	          zMatrix.setEntry(jpt,    nfm,    recip);    ZMatrix.setEntry(jpt,    nfm,    recip);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	14	None	replace
122	[BUG]  [BUGGY]  if(jpt  ==  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  [CE]  ';'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  ==  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  ==  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt));    	non-compiled	[CE]  ';'  expected	58	None	replace
123	[BUG]  [BUGGY]  if(jpt  ==  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  ==  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  ==  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt));    	non-compiled	[CE]  	58	None	replace
124	[BUG]  [BUGGY]  if(jpt  ==  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  else  {  throw  new  PathIsExploredException( " ")  [CE]  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  ==  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  else  {  throw  new  PathIsExploredException( " ")  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  ==  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  else  {  throw  new  PathIsExploredException( " ")	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt));    	non-compiled	[CE]  	58	None	replace
125	[BUG]  [BUGGY]  if(jpt  ==  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  else  {  throw  new  PathIsExploredException( "  [CE]  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  ==  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  else  {  throw  new  PathIsExploredException( "  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  ==  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  else  {  throw  new  PathIsExploredException( "	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt));    	non-compiled	[CE]  	58	None	replace
126	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,    -1,    -1);    zMatrix.setEntry(jpt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	151	1	add
127	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    -1,    -1);    zMatrix.setEntry(jpt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	151	1	add
128	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -1,  -1);  ZMatrix.setEntry(jpt,  -1,  -1);  [CE]  cannot  find  symbol  ZMatrix  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  -1,  -1);  ZMatrix.setEntry(jpt,  -1,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    -1,    -1);    ZMatrix.setEntry(jpt,  -1,  -1);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	151	None	add
129	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  nfxm,  nfxm);	          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,    nfxm,    rhsq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	77	1	replace
130	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  nfxm);	          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,    nfxm,    rhsq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	77	1	replace
131	[BUG]  [BUGGY]  zMatrix.setEntry(ih,  jpt,  -recip);  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ih,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ih,  jpt,  -recip);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	138	None	replace
132	[BUG]  [BUGGY]  ZMatrix.setEntry(0,  nfxm,  nfxm);  [CE]  cannot  find  symbol  ZMatrix  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(0,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(0,  nfxm,  nfxm);	  zMatrix.setEntry(0,    nfxm,    nfxm);    ZMatrix.setEntry(0,    nfxm,    nfxm);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	18	None	replace
133	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  ZMatrix.setEntry(0,  nfxm,  nfxm);  [CE]  cannot  find  symbol  ZMatrix  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  ZMatrix.setEntry(0,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfm,  nfxm);  ZMatrix.setEntry(0,  nfxm,  nfxm);	  zMatrix.setEntry(0,    nfxm,    nfxm);    ZMatrix.setEntry(0,    nfxm,    nfxm);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	18	None	replace
134	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfxm,  jpt,  nfxm);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    nfxm);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	140	1	replace
135	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfxm,  jpt,  nfxm);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    nfxm);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	140	1	replace
136	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,  jpt,  -1);	  zMatrix.setEntry(nfm,    jpt,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	117	1	replace
137	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  jpt,  -1);	  zMatrix.setEntry(nfm,    jpt,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	117	1	replace
138	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	67	1	replace
139	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	67	1	replace
140	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  nfxm));  [CE]  ';'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  nfxm));  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfxm,  nfxm));	  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,    nfxm,    nfxm));    	non-compiled	[CE]  ';'  expected	17	None	replace
141	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm));  [CE]  ';'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm));  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfm,  nfxm));	  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,    nfxm,    nfxm));    	non-compiled	[CE]  ';'  expected	17	None	replace
142	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	144	1	add
143	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	144	1	add
144	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  ZMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  ZMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    ZMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	144	None	add
145	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  rcip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [CE]  cannot  find  symbol  rcip  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  rcip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  rcip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	144	None	add
146	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  recip);	  	compilable	  [FE]  OutOfRangeException  	144	1	add
147	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  recip);	  	compilable	  [FE]  OutOfRangeException  	144	1	add
148	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	132	1	add
149	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	132	1	add
150	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhsq);  [CE]  cannot  find  symbol  rhsq  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhsq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -rhsq);	  	non-compiled	[CE]  cannot  find  symbol  rhsq	132	None	add
151	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhound);  [CE]  cannot  find  symbol  rhound  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhound);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -rhound);	  	non-compiled	[CE]  cannot  find  symbol  rhound	132	None	add
152	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhod);  [CE]  cannot  find  symbol  rhod  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhod);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -rhod);	  	non-compiled	[CE]  cannot  find  symbol  rhod	132	None	add
153	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhs);  [CE]  cannot  find  symbol  rhs  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhs);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -rhs);	  	non-compiled	[CE]  cannot  find  symbol  rhs	132	None	add
154	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm);  zMatrix.setEntry(nfm,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    jpt,    nfxm);    zMatrix.setEntry(nfm,  jpt,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	112	1	add
155	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm);  zMatrix.setEntry(nfm,  jpt,  nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm);  zMatrix.setEntry(nfm,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    nfxm);    zMatrix.setEntry(nfm,  jpt,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	112	1	add
156	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm);  ZMatrix.setEntry(nfm,  jpt,  nfxm);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm);  ZMatrix.setEntry(nfm,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    nfxm);    ZMatrix.setEntry(nfm,  jpt,  nfxm);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	112	None	add
157	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm);  zMatrix.setEntry(nfm,  jpt,  nfxm));  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm);  zMatrix.setEntry(nfm,  jpt,  nfxm));  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    nfxm);    zMatrix.setEntry(nfm,  jpt,  nfxm));	  	non-compiled	[CE]  ';'  expected	112	None	add
158	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();	          zMatrix.setEntry(jpt,    jpt,    jpt);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
159	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();	          zMatrix.setEntry(jpt,    jpt,    jpt);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
160	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  rhs);  [CE]  cannot  find  symbol  rhs  [FE]          OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  rhs);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfm,  rhs);	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    rcip);    	non-compiled	[CE]  cannot  find  symbol  rhs	13	None	replace
161	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  rh);  [CE]  cannot  find  symbol  rh  [FE]            OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  rh);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfm,  rh);	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    rcip);    	non-compiled	[CE]  cannot  find  symbol  rh	13	None	replace
162	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  2);  zMatrix.setEntry(0,  nfxm,  2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    2);    zMatrix.setEntry(0,  nfxm,  2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	87	1	add
163	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  2);  zMatrix.setEntry(0,  nfxm,  2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  2);  zMatrix.setEntry(0,  nfxm,  2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    2);    zMatrix.setEntry(0,  nfxm,  2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	87	1	add
164	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  2);  zMatrix.setEntry(0,  nfxm,  2));  [CE]  ';'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  2);  zMatrix.setEntry(0,  nfxm,  2));  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    2);    zMatrix.setEntry(0,  nfxm,  2));	  	non-compiled	[CE]  ';'  expected	87	None	add
165	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  2);  ZMatrix.setEntry(0,  nfxm,  2);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  2);  ZMatrix.setEntry(0,  nfxm,  2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    2);    ZMatrix.setEntry(0,  nfxm,  2);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	87	None	add
166	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	3	1	add
167	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	3	1	add
168	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  ZMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  ZMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -1);    ZMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	3	None	add
169	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	3	1	add
170	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	3	1	add
171	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	81	1	add
172	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	81	1	add
173	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhsq);  [CE]  cannot  find  symbol  rhsq  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhsq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhsq);	  	non-compiled	[CE]  cannot  find  symbol  rhsq	81	None	add
174	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -r  [CE]  ')'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -r  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -r	  	non-compiled	[CE]  ')'  expected	81	None	add
175	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhod);  [CE]  cannot  find  symbol  rhod  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhod);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhod);	  	non-compiled	[CE]  cannot  find  symbol  rhod	81	None	add
176	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -r  [CE]  ')'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -r  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -r	  	non-compiled	[CE]  ')'  expected	81	None	add
177	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	125	1	add
178	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	125	1	add
179	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ih);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ih);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ih);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ih	125	None	add
180	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	125	1	add
181	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	125	1	add
182	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	125	1	add
183	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	125	1	add
184	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	125	1	add
185	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	125	1	add
186	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  nfxm,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,    nfxm,    jpt);    zMatrix.setEntry(jpt,  nfxm,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	28	1	add
187	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  nfxm,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  nfxm,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfxm,    jpt);    zMatrix.setEntry(jpt,  nfxm,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	28	1	add
188	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix  =  jpt;  zMatrix.setEntry(jpt,  nfxm,  jpt);  [CE]  incompatible  types  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix  =  jpt;  zMatrix.setEntry(jpt,  nfxm,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfxm,    jpt);    zMatrix  =  jpt;  zMatrix.setEntry(jpt,  nfxm,  jpt);	  	non-compiled	[CE]  incompatible  types	28	None	add
189	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  ZMatrix.setEntry(jpt,  nfxm,  jpt);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  ZMatrix.setEntry(jpt,  nfxm,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfxm,    jpt);    ZMatrix.setEntry(jpt,  nfxm,  jpt);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	28	None	add
190	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    nfxm);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	139	1	add
191	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    nfxm);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	139	1	add
192	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  ZMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  ZMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    nfxm);    ZMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	139	None	add
193	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,  nfm,  -1);	  zMatrix.setEntry(0,    nfm,    -recip);    	compilable	  [FE]  OutOfRangeException  	136	1	replace
194	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -1);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfm,  -1);	  zMatrix.setEntry(0,    nfm,    -recip);    	compilable	  [FE]  OutOfRangeException  	136	1	replace
195	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    rhosq);    zMatrix.setEntry(0,  nfxm,  rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	64	1	add
196	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    rhosq);    zMatrix.setEntry(0,  nfxm,  rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	64	1	add
197	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  rhs);  [CE]  cannot  find  symbol  rhs  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  rhs);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    rhosq);    zMatrix.setEntry(0,  nfxm,  rhs);	  	non-compiled	[CE]  cannot  find  symbol  rhs	64	None	add
198	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  rhsq);  [CE]  cannot  find  symbol  rhsq  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  rhsq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    rhosq);    zMatrix.setEntry(0,  nfxm,  rhsq);	  	non-compiled	[CE]  cannot  find  symbol  rhsq	64	None	add
199	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  rhod);  [CE]  cannot  find  symbol  rhod  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  rhod);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    rhosq);    zMatrix.setEntry(0,  nfxm,  rhod);	  	non-compiled	[CE]  cannot  find  symbol  rhod	64	None	add
200	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  rhound);  [CE]  cannot  find  symbol  rhound  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  rhound);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    rhosq);    zMatrix.setEntry(0,  nfxm,  rhound);	  	non-compiled	[CE]  cannot  find  symbol  rhound	64	None	add
201	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        nfxm);        zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	add
202	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        nfxm);        zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	add
203	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  ZMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  ZMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        nfxm);        zMatrix.setEntry(0,    nfxm,    nfxm);    ZMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	15	None	add
204	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix  =  zMatrix.getEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  [CE]  no  suitable  method  found  for  getEntry(int,int,int)  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix  =  zMatrix.getEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        nfxm);        zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix  =  zMatrix.getEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);	  	non-compiled	[CE]  no  suitable  method  found  for  getEntry(int,int,int)	15	None	add
205	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    1);    zMatrix.setEntry(0,  nfxm,  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	44	1	add
206	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    1);    zMatrix.setEntry(0,  nfxm,  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	44	1	add
207	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  1));  [CE]  ';'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  1));  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    1);    zMatrix.setEntry(0,  nfxm,  1));	  	non-compiled	[CE]  ';'  expected	44	None	add
208	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  1,  1);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int)  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  1,  1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    1);    zMatrix.setEntry(0,  nfxm,  1,  1);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int)	44	None	add
209	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  ZMatrix.setEntry(0,  nfxm,  1);  [CE]  cannot  find  symbol  ZMatrix  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  ZMatrix.setEntry(0,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    1);    ZMatrix.setEntry(0,  nfxm,  1);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	44	None	add
210	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	66	1	add
211	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	66	1	add
212	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ih);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ih);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ih);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ih	66	None	add
213	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	66	1	add
214	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	66	1	add
215	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	66	1	add
216	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	66	1	add
217	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	66	1	add
218	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	66	1	add
219	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    nfxm,    1);    zMatrix.setEntry(nfm,  nfxm,  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
220	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    1);    zMatrix.setEntry(nfm,  nfxm,  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
221	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  1));  [CE]  ';'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  1));  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    1);    zMatrix.setEntry(nfm,  nfxm,  1));	  	non-compiled	[CE]  ';'  expected	85	None	add
222	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    nfxm,    0);    zMatrix.setEntry(nfm,  nfxm,  0);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	23	1	add
223	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    0);    zMatrix.setEntry(nfm,  nfxm,  0);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	23	1	add
224	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  ZMatrix.setEntry(nfm,  nfxm,  0);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  ZMatrix.setEntry(nfm,  nfxm,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    0);    ZMatrix.setEntry(nfm,  nfxm,  0);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	23	None	add
225	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0,  0);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int)  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    0);    zMatrix.setEntry(nfm,  nfxm,  0,  0);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int)	23	None	add
226	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  ih);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  ih);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  ih);	  zMatrix.setEntry(nfm,    nfxm);    	non-compiled	[CE]  cannot  find  symbol  ih	98	None	replace
227	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	50	1	add
228	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	50	1	add
229	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhsq);  [CE]  cannot  find  symbol  rhsq  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhsq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhsq);	  	non-compiled	[CE]  cannot  find  symbol  rhsq	50	None	add
230	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhod);  [CE]  cannot  find  symbol  rhod  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhod);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhod);	  	non-compiled	[CE]  cannot  find  symbol  rhod	50	None	add
231	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	50	1	add
232	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	50	1	add
233	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -r  [CE]  ')'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -r  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -r	  	non-compiled	[CE]  ')'  expected	50	None	add
234	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -1)  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -1)  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  -1)	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -1)    	non-compiled	[CE]  ';'  expected	121	None	replace
235	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
236	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
237	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  ZMatrix.setEntry(nfm,  nfxm,  -ipt);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  ZMatrix.setEntry(nfm,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    -ipt);    ZMatrix.setEntry(nfm,  nfxm,  -ipt);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	1	None	add
238	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
239	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
240	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	130	1	add
241	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	130	1	add
242	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -ipt);  ZMatrix.setEntry(0,  nfxm,  -ipt);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -ipt);  ZMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -ipt);    ZMatrix.setEntry(0,  nfxm,  -ipt);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	130	None	add
243	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt));  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt));  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -ipt));	  	non-compiled	[CE]  ';'  expected	130	None	add
244	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	33	1	add
245	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	33	1	add
246	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	33	1	add
247	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	33	1	add
248	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  ZMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  ZMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    ZMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	33	None	add
249	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	33	1	add
250	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	33	1	add
251	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,  nfm,  recip);	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    recip);    	compilable	  [FE]  OutOfRangeException  	12	1	replace
252	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfm,  recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfm,  recip);	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    recip);    	compilable	  [FE]  OutOfRangeException  	12	1	replace
253	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfm,    -recip);    zMatrix.setEntry(0,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	135	1	add
254	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    -recip);    zMatrix.setEntry(0,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	135	1	add
255	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -rcip);  [CE]  cannot  find  symbol  rcip  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -rcip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    -recip);    zMatrix.setEntry(0,  nfm,  -rcip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	135	None	add
256	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -ih);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -ih);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    -recip);    zMatrix.setEntry(0,  nfm,  -ih);	  	non-compiled	[CE]  cannot  find  symbol  ih	135	None	add
257	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfm,    -recip);    zMatrix.setEntry(0,  nfm,  -rhosq);	  	compilable	  [FE]  OutOfRangeException  	135	1	add
258	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -rhosq);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    -recip);    zMatrix.setEntry(0,  nfm,  -rhosq);	  	compilable	  [FE]  OutOfRangeException  	135	1	add
259	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -i);  [CE]  cannot  find  symbol  i  [FE]            OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -i);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    -recip);    zMatrix.setEntry(0,  nfm,  -i);	  	non-compiled	[CE]  cannot  find  symbol  i	135	None	add
260	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  nfxm,  0);	  zMatrix.setEntry(jpt,    nfxm,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	20	1	replace
261	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  0);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  0);	  zMatrix.setEntry(jpt,    nfxm,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	20	1	replace
262	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -rhosq);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	36	1	add
263	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -rhosq);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	36	1	add
264	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhsq);  [CE]  cannot  find  symbol  rhsq  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhsq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -rhosq);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhsq);	  	non-compiled	[CE]  cannot  find  symbol  rhsq	36	None	add
265	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -r  [CE]  ')'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -r  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -rhosq);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -r	  	non-compiled	[CE]  ')'  expected	36	None	add
266	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhod);  [CE]  cannot  find  symbol  rhod  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhod);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -rhosq);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhod);	  	non-compiled	[CE]  cannot  find  symbol  rhod	36	None	add
267	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -r  [CE]  ')'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -r  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -rhosq);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -r	  	non-compiled	[CE]  ')'  expected	36	None	add
268	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	34	1	replace
269	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	34	1	replace
270	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	34	1	replace
271	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	34	1	replace
272	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(ipt,    nfxm,    recip);    zMatrix.setEntry(ipt,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	101	1	add
273	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,    nfxm,    recip);    zMatrix.setEntry(ipt,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	101	1	add
274	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  rcip);  [CE]  cannot  find  symbol  rcip  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  rcip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,    nfxm,    recip);    zMatrix.setEntry(ipt,  nfxm,  rcip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	101	None	add
275	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  recip);  ZMatrix.setEntry(ipt,  nfxm,  recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  recip);  ZMatrix.setEntry(ipt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,    nfxm,    recip);    ZMatrix.setEntry(ipt,  nfxm,  recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	101	None	add
276	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	59	1	add
277	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	59	1	add
278	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -rcip);  [CE]  cannot  find  symbol  rcip  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -rcip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -rcip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	59	None	add
279	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -recip);  ZMatrix.setEntry(jpt,  nfm,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -recip);  ZMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    -recip);    ZMatrix.setEntry(jpt,  nfm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	59	None	add
280	[BUG]  [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(jpt,  nfxm,  recip);	          zMatrix.setEntry(jpt,    nfxm,    recip);    ZMatrix.setEntry(jpt,    nfxm,    recip);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	42	None	replace
281	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);	  	compilable	  [FE]  OutOfRangeException  	11	1	add
282	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);	  	compilable	  [FE]  OutOfRangeException  	11	1	add
283	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  ZMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  ZMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    recip);    ZMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	11	None	add
284	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    recip);    if(isMinimize)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }	  	compilable	  [FE]  OutOfRangeException  	11	1	add
285	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    recip);    if(isMinimize)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }	  	compilable	  [FE]  OutOfRangeException  	11	1	add
286	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);	  	compilable	  [FE]  OutOfRangeException  	11	1	add
287	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);	  	compilable	  [FE]  OutOfRangeException  	11	1	add
288	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  ih,  jpt);  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  ih,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  ih,  jpt);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt);    	non-compiled	[CE]  cannot  find  symbol  ih	56	None	replace
289	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  0);  [CE]  no  suitable  method  found  for  setEntry(int,int)  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  0);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int)	56	None	replace
290	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        recip);        zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	add
291	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        recip);        zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	add
292	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  ZMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  ZMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        recip);        zMatrix.setEntry(nfm,    nfxm,    recip);    ZMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	7	None	add
293	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  re  [CE]  ')'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  re  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        recip);        zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  re	  	non-compiled	[CE]  ')'  expected	7	None	add
294	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        recip);        zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	add
295	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        recip);        zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	add
296	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  zMatrix.setEntry(0,  nfxm,  0);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    0);    zMatrix.setEntry(0,  nfxm,  0);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	46	1	add
297	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  zMatrix.setEntry(0,  nfxm,  0);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  zMatrix.setEntry(0,  nfxm,  0);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    0);    zMatrix.setEntry(0,  nfxm,  0);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	46	1	add
298	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  ZMatrix.setEntry(0,  nfxm,  0);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  ZMatrix.setEntry(0,  nfxm,  0);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    0);    ZMatrix.setEntry(0,  nfxm,  0);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	46	None	add
299	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  zMatrix.setEntry(0,  nfxm,  0.0);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    0);    zMatrix.setEntry(0,  nfxm,  0.0);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	46	1	add
300	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  zMatrix.setEntry(0,  nfxm,  0.0);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  zMatrix.setEntry(0,  nfxm,  0.0);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    0);    zMatrix.setEntry(0,  nfxm,  0.0);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	46	1	add
301	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  rhod);  [CE]  cannot  find  symbol  rhod  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  rhod);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  rhod);	          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,    nfxm,    rhound);    	non-compiled	[CE]  cannot  find  symbol  rhod	120	None	replace
302	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    nfxm,    rhosq);    zMatrix.setEntry(nfm,  nfxm,  rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	21	1	add
303	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    rhosq);    zMatrix.setEntry(nfm,  nfxm,  rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	21	1	add
304	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhs);  [CE]  cannot  find  symbol  rhs  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhs);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    rhosq);    zMatrix.setEntry(nfm,  nfxm,  rhs);	  	non-compiled	[CE]  cannot  find  symbol  rhs	21	None	add
305	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhsq);  [CE]  cannot  find  symbol  rhsq  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhsq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    rhosq);    zMatrix.setEntry(nfm,  nfxm,  rhsq);	  	non-compiled	[CE]  cannot  find  symbol  rhsq	21	None	add
306	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhod);  [CE]  cannot  find  symbol  rhod  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhod);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    rhosq);    zMatrix.setEntry(nfm,  nfxm,  rhod);	  	non-compiled	[CE]  cannot  find  symbol  rhod	21	None	add
307	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	compilable	  [FE]  OutOfRangeException  	145	1	replace
308	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	compilable	  [FE]  OutOfRangeException  	145	1	replace
309	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	compilable	  [FE]  OutOfRangeException  	145	1	replace
310	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	compilable	  [FE]  OutOfRangeException  	145	1	replace
311	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  RuntimeException( " ");  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	compilable	  [FE]  OutOfRangeException  	145	1	replace
312	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  RuntimeException( " ");  }  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  RuntimeException( " ");  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	compilable	  [FE]  OutOfRangeException  	145	1	replace
313	[BUG]  [BUGGY]  if(rhosq!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  incomparable  types:  double  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(rhosq!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(rhosq!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	126	None	replace
314	[BUG]  [BUGGY]  if(rhosq  ==  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  incomparable  types:  double  and  <null>  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(rhosq  ==  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(rhosq  ==  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	126	None	replace
315	[BUG]  [BUGGY]  if(rhosq!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [CE]  incomparable  types:  double  and  <null>  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(rhosq!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(rhosq!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	126	None	replace
316	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -rhosq);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	68	1	add
317	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -rhosq);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	68	1	add
318	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhsq);  [CE]  cannot  find  symbol  rhsq  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhsq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -rhosq);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhsq);	  	non-compiled	[CE]  cannot  find  symbol  rhsq	68	None	add
319	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -r  [CE]  ')'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -r  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -rhosq);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -r	  	non-compiled	[CE]  ')'  expected	68	None	add
320	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhod);  [CE]  cannot  find  symbol  rhod  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhod);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -rhosq);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhod);	  	non-compiled	[CE]  cannot  find  symbol  rhod	68	None	add
321	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -r  [CE]  ')'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -r  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -rhosq);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -r	  	non-compiled	[CE]  ')'  expected	68	None	add
322	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfm,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,  nfm,  jpt);	  zMatrix.setEntry(jpt,    nfm,    jpt);    	compilable	  [FE]  OutOfRangeException  	150	1	replace
323	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfm,  jpt);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfm,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfm,  jpt);	  zMatrix.setEntry(jpt,    nfm,    jpt);    	compilable	  [FE]  OutOfRangeException  	150	1	replace
324	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  nfm,  rhosq);	  zMatrix.setEntry(jpt,    nfm,    jpt);    	compilable	  [FE]  OutOfRangeException  	150	1	replace
325	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  rhosq);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfm,  rhosq);	  zMatrix.setEntry(jpt,    nfm,    jpt);    	compilable	  [FE]  OutOfRangeException  	150	1	replace
326	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -2);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
327	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -2);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
328	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -2);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
329	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -2);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
330	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  ZMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -2);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  ZMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -2);    ZMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -2);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	123	None	add
331	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -2);    zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
332	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  -2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -2);    zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
333	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix.setEntry(jpt,  nfm,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,    nfm,    jpt);    zMatrix.setEntry(jpt,  nfm,  jpt);	  	compilable	  [FE]  OutOfRangeException  	149	1	add
334	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix.setEntry(jpt,  nfm,  jpt);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix.setEntry(jpt,  nfm,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    jpt);    zMatrix.setEntry(jpt,  nfm,  jpt);	  	compilable	  [FE]  OutOfRangeException  	149	1	add
335	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  ZMatrix.setEntry(jpt,  nfm,  jpt);  [CE]  cannot  find  symbol  ZMatrix  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  ZMatrix.setEntry(jpt,  nfm,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    jpt);    ZMatrix.setEntry(jpt,  nfm,  jpt);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	149	None	add
336	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix.setEntry(jpt,  nfm,  jpt));  [CE]  ';'  expected  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix.setEntry(jpt,  nfm,  jpt));  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    jpt);    zMatrix.setEntry(jpt,  nfm,  jpt));	  	non-compiled	[CE]  ';'  expected	149	None	add
337	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm);  [CE]  no  suitable  method  found  for  setEntry(int,int)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfm);	  zMatrix.setEntry(nfm,    jpt,    jpt);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int)	148	None	replace
338	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  ih);  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  ih);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  jpt,  ih);	  zMatrix.setEntry(nfm,    jpt,    jpt);    	non-compiled	[CE]  cannot  find  symbol  ih	148	None	replace
339	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  jpt,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,  jpt,  -ipt);	  zMatrix.setEntry(0,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	131	1	replace
340	[BUG]  [BUGGY]  zMatrix.setEntry(0,  jpt,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  jpt,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  jpt,  -ipt);	  zMatrix.setEntry(0,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	131	1	replace
341	[BUG]  [BUGGY]  zMatrix.setEntry(m,  nfxm,  recip);  [CE]  cannot  find  symbol  m  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(m,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(m,  nfxm,  recip);	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(m,    nfxm,    recip);    	non-compiled	[CE]  cannot  find  symbol  m	129	None	replace
342	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  nfxm,  -ipt);	  zMatrix.setEntry(nfm,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	2	1	replace
343	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  -ipt);	  zMatrix.setEntry(nfm,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	2	1	replace
344	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rh);  [CE]  cannot  find  symbol  rh  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rh);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfxm,  -rh);	  zMatrix.setEntry(0,    nfxm,    -ih);    	non-compiled	[CE]  cannot  find  symbol  rh	54	None	replace
345	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	116	1	add
346	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	116	1	add
347	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -rcip);  [CE]  cannot  find  symbol  rcip  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -rcip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -rcip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	116	None	add
348	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  ZMatrix.setEntry(nfm,  jpt,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  ZMatrix.setEntry(nfm,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    -recip);    ZMatrix.setEntry(nfm,  jpt,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	116	None	add
349	[BUG]  [BUGGY]  ZMatrix.setEntry(0,  nfxm,  -1);  [CE]  cannot  find  symbol  ZMatrix  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(0,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(0,  nfxm,  -1);	  zMatrix.setEntry(0,    nfxm,    -1);    ZMatrix.setEntry(0,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	5	None	replace
350	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  ZMatrix.setEntry(jpt,  nfxm,  -1);  [CE]  cannot  find  symbol  ZMatrix  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  ZMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfxm,    -1);    ZMatrix.setEntry(jpt,  nfxm,  -1);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	19	None	add
351	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	142	1	add
352	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	142	1	add
353	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	142	1	add
354	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	142	1	add
355	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  ZMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  ZMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    ZMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	142	None	add
356	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	142	1	add
357	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  -2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	142	1	add
358	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  jpt);  [CE]  no  suitable  method  found  for  setEntry(int,int)  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  jpt);	  zMatrix.setEntry(ih,    jpt,    jpt);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int)	25	None	replace
359	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(ipt,  jpt,  jpt);	  zMatrix.setEntry(ih,    jpt,    jpt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	25	1	replace
360	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  jpt,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,  jpt,  jpt);	  zMatrix.setEntry(ih,    jpt,    jpt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	25	1	replace
361	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(nfm,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    jpt,    jpt);    zMatrix.setEntry(nfm,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	147	1	add
362	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(nfm,  jpt,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(nfm,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    jpt);    zMatrix.setEntry(nfm,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	147	1	add
363	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  ZMatrix.setEntry(nfm,  jpt,  jpt);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  ZMatrix.setEntry(nfm,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    jpt);    ZMatrix.setEntry(nfm,  jpt,  jpt);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	147	None	add
364	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(nfm,  jpt,  jpt));  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(nfm,  jpt,  jpt));  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    jpt);    zMatrix.setEntry(nfm,  jpt,  jpt));	  	non-compiled	[CE]  ';'  expected	147	None	add
365	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  recip);  zMatrix.setEntry(nfm,  jpt,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    jpt,    recip);    zMatrix.setEntry(nfm,  jpt,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	95	1	add
366	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  recip);  zMatrix.setEntry(nfm,  jpt,  recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  recip);  zMatrix.setEntry(nfm,  jpt,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    recip);    zMatrix.setEntry(nfm,  jpt,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	95	1	add
367	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  recip);  zMatrix.setEntry(nfm,  jpt,  rcip);  [CE]  cannot  find  symbol  rcip  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  recip);  zMatrix.setEntry(nfm,  jpt,  rcip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    recip);    zMatrix.setEntry(nfm,  jpt,  rcip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	95	None	add
368	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  recip);  ZMatrix.setEntry(nfm,  jpt,  recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  recip);  ZMatrix.setEntry(nfm,  jpt,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    recip);    ZMatrix.setEntry(nfm,  jpt,  recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	95	None	add
369	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip));    	non-compiled	[CE]  ';'  expected	122	None	replace
370	[BUG]  [BUGGY]  if(recip  <  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }  [CE]  ';'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  <  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  <  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip));    	non-compiled	[CE]  ';'  expected	122	None	replace
371	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -recip));  [CE]  ';'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -recip));  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  -recip));	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip));    	non-compiled	[CE]  ';'  expected	122	None	replace
372	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  zMatrix.setEntry(nfm,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    nfxm,    nfxm);    zMatrix.setEntry(nfm,  nfxm,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	26	1	add
373	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  zMatrix.setEntry(nfm,  nfxm,  nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  zMatrix.setEntry(nfm,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    nfxm);    zMatrix.setEntry(nfm,  nfxm,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	26	1	add
374	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  zMatrix.setEntry(nfm,  nfxm,  nfxm));  [CE]  ';'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  zMatrix.setEntry(nfm,  nfxm,  nfxm));  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    nfxm);    zMatrix.setEntry(nfm,  nfxm,  nfxm));	  	non-compiled	[CE]  ';'  expected	26	None	add
375	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  ZMatrix.setEntry(nfm,  nfxm,  nfxm);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  ZMatrix.setEntry(nfm,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    nfxm);    ZMatrix.setEntry(nfm,  nfxm,  nfxm);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	26	None	add
376	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  zMatrix.setEntry(nfm,  nfxm,  nfxm  +  1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    nfxm,    nfxm);    zMatrix.setEntry(nfm,  nfxm,  nfxm  +  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	26	1	add
377	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  zMatrix.setEntry(nfm,  nfxm,  nfxm  +  1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  zMatrix.setEntry(nfm,  nfxm,  nfxm  +  1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    nfxm);    zMatrix.setEntry(nfm,  nfxm,  nfxm  +  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	26	1	add
378	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  0,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfxm,  0,  nfxm);	  zMatrix.setEntry(0,    nfxm,    0);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int)	47	None	replace
379	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	138	1	replace
380	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	138	1	replace
381	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -recip);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	138	1	replace
382	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -recip);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	138	1	replace
383	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	138	1	replace
384	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	138	1	replace
385	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,  nfxm,  -2);	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -2);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	143	1	replace
386	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  -2);	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -2);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	143	1	replace
387	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,  nfxm,  2);	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -2);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	143	1	replace
388	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  2);	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -2);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	143	1	replace
389	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix  =  zMatrix.getEntry(jpt,  nfm,  jpt);  [CE]  no  suitable  method  found  for  getEntry(int,int,int)  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix  =  zMatrix.getEntry(jpt,  nfm,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    jpt);    zMatrix  =  zMatrix.getEntry(jpt,  nfm,  jpt);	  	non-compiled	[CE]  no  suitable  method  found  for  getEntry(int,int,int)	149	None	add
390	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  jpt,  f);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  jpt,  f);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    ih);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	141	1	replace
391	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  jpt,  f);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  jpt,  f);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  jpt,  f);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    ih);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	141	1	replace
392	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  jpt,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  jpt,  0);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    ih);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	141	1	replace
393	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  jpt,  0);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  jpt,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  jpt,  0);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    ih);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	141	1	replace
394	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -1ipt);  [CE]  ')'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -1ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -1ipt);	  	non-compiled	[CE]  ')'  expected	130	None	add
395	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    jpt);    BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	  	non-compiled	[CE]  cannot  find  symbol	147	None	add
396	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    jpt);    BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();	  	non-compiled	[CE]  cannot  find  symbol	147	None	add
397	[BUG]  [BUGGY]  zMatrix  =  new  BOBYQAOptimizer();  [CE]  no  suitable  constructor  found  for  BOBYQAOptimizer()  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(ipt,    nfxm,    -recip);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  no  suitable  constructor  found  for  BOBYQAOptimizer()	92	None	replace
398	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(ipt,    nfxm,    -recip);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
399	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	replace
400	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	replace
401	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	replace
402	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	replace
403	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  2);  BOBYQAOptimizer$PathIsExploredException  zMatrix.setEntry(0,  nfxm,  2);  [CE]  ';'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  2);  BOBYQAOptimizer$PathIsExploredException  zMatrix.setEntry(0,  nfxm,  2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    2);    BOBYQAOptimizer$PathIsExploredException  zMatrix.setEntry(0,  nfxm,  2);	  	non-compiled	[CE]  ';'  expected	87	None	add
404	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  2);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  2);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    2);    BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	  	non-compiled	[CE]  cannot  find  symbol	87	None	add
405	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  rhsq);  [CE]  cannot  find  symbol  rhsq  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  rhsq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  rhsq);	          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,    nfxm,    rhosq);    	non-compiled	[CE]  cannot  find  symbol  rhsq	75	None	replace
406	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhs);  [CE]  cannot  find  symbol  rhs  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhs);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfxm,  -rhs);	  zMatrix.setEntry(0,    nfxm,    -rhosq);    	non-compiled	[CE]  cannot  find  symbol  rhs	133	None	replace
407	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,  nfxm,  -2);	  zMatrix.setEntry(0,    nfxm,    -rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	133	1	replace
408	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfxm,  -2);	  zMatrix.setEntry(0,    nfxm,    -rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	133	1	replace
409	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	replace
410	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	replace
411	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhsq);  }  [CE]  cannot  find  symbol  rhsq  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhsq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhsq);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -rhosq);    	non-compiled	[CE]  cannot  find  symbol  rhsq	82	None	replace
412	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	67	1	replace
413	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	67	1	replace
414	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	67	1	replace
415	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	67	1	replace
416	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -i);  [CE]  cannot  find  symbol  i  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -i);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -i);	  	non-compiled	[CE]  cannot  find  symbol  i	116	None	add
417	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -ih);  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -ih);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -ih);	  	non-compiled	[CE]  cannot  find  symbol  ih	116	None	add
418	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	56	None	replace
419	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  0);  zMatrix.setEntry(jpt,  jpt,  0);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  0);  zMatrix.setEntry(jpt,  jpt,  0);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  0);  zMatrix.setEntry(jpt,  jpt,  0);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	56	None	replace
420	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    recip);    	compilable	  [FE]  OutOfRangeException  	12	1	replace
421	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    recip);    	compilable	  [FE]  OutOfRangeException  	12	1	replace
422	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	12	None	replace
423	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfxm,        recip);        zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	39	1	add
424	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        recip);        zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	39	1	add
425	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  r  [CE]  ')'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  r  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        recip);        zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  r	  	non-compiled	[CE]  ')'  expected	39	None	add
426	[BUG]  [BUGGY]  ZMatrix.setEntry(nfm,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(nfm,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(nfm,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(nfm,    nfxm,    recip);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	103	None	replace
427	[BUG]  [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(jpt,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(jpt,    nfxm,    recip);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	110	None	replace
428	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfxm,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(jpt,    nfxm,    recip);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
429	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhsq);  [CE]  cannot  find  symbol  rhsq  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhsq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        rhosq);        zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhsq);	  	non-compiled	[CE]  cannot  find  symbol  rhsq	74	None	add
430	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rsq);  [CE]  cannot  find  symbol  rsq  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rsq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        rhosq);        zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rsq);	  	non-compiled	[CE]  cannot  find  symbol  rsq	74	None	add
431	[BUG]  [BUGGY]  zMatrix.setEntry(fxm,  nfxm,  -1);  [CE]  cannot  find  symbol  fxm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(fxm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(fxm,  nfxm,  -1);	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  fxm	31	None	replace
432	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  rcip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]          OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  rcip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  rcip);  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    rcip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	13	None	replace
433	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  nfxm);  }  [CE]  incomparable  types:  int  and  <null>  [FE]            OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  nfxm);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  nfxm);  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    rcip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	13	None	replace
434	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  rhs);  }  [CE]  incomparable  types:  int  and  <null>  [FE]              OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  rhs);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  rhs);  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    rcip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	13	None	replace
435	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();	          zMatrix.setEntry(jpt,    jpt,    jpt);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
436	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -rhs);  [CE]  cannot  find  symbol  rhs  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -rhs);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  -rhs);	          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,    nfxm,    rhound);    	non-compiled	[CE]  cannot  find  symbol  rhs	120	None	replace
437	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  nMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [CE]  cannot  find  symbol  nMatrix  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  nMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    recip);    nMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);	  	non-compiled	[CE]  cannot  find  symbol  nMatrix	11	None	add
438	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  rcip);  [CE]  cannot  find  symbol  rcip  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  rcip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  rcip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	11	None	add
439	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rcip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [CE]  cannot  find  symbol  rcip  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rcip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rcip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	79	None	add
440	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	79	1	add
441	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	79	1	add
442	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0.0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    nfxm,    0);    zMatrix.setEntry(nfm,  nfxm,  0.0);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	23	1	add
443	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0.0);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  0.0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    0);    zMatrix.setEntry(nfm,  nfxm,  0.0);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	23	1	add
444	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip));  }  [CE]  ';'  expected  [FE]          OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip));  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    recip));    	non-compiled	[CE]  ';'  expected	146	None	replace
445	[BUG]  [BUGGY]  if(!modelSecondDerivativesValues.isEmpty())  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip));  }  [CE]  ';'  expected  [FE]            OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(!modelSecondDerivativesValues.isEmpty())  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(!modelSecondDerivativesValues.isEmpty())  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip));  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    recip));    	non-compiled	[CE]  ';'  expected	146	None	replace
446	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	145	None	replace
447	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.  [CE]  while  expected  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  while  expected	145	None	replace
448	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  [CE]  ')'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip;    	non-compiled	[CE]  ')'  expected	100	None	replace
449	[BUG]  [BUGGY]  if(recip  >=  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  [CE]  ')'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >=  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >=  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip;    	non-compiled	[CE]  ')'  expected	100	None	replace
450	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	100	1	replace
451	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	100	1	replace
452	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip;  [CE]  ')'  expected  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip;  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip;	  	non-compiled	[CE]  ')'  expected	59	None	add
453	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        recip);        zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	add
454	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        recip);        zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	add
455	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(fm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  [CE]  cannot  find  symbol  fm  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(fm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        recip);        zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(fm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);	  	non-compiled	[CE]  cannot  find  symbol  fm	7	None	add
456	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  nMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [CE]  cannot  find  symbol  nMatrix  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  nMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    nMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  nMatrix	144	None	add
457	[BUG]  [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(jpt,  nfxm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(jpt,    jpt,    jpt);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	118	None	replace
458	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	137	None	add
459	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	137	1	add
460	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	137	1	add
461	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt;  zMatrix.setEntry(jpt,  jpt,  -recip);  [CE]  ')'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt;  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  jpt;  zMatrix.setEntry(jpt,  jpt,  -recip);	  	non-compiled	[CE]  ')'  expected	137	None	add
462	[BUG]  [BUGGY]  ZMatrix.setEntry(0,  nfxm,  nfxm);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(0,  nfxm,  nfxm);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(0,  nfxm,  nfxm);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	  zMatrix.setEntry(0,    nfxm,    nfxm);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	93	None	replace
463	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	81	1	add
464	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	81	1	add
465	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  0,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,  0,  0);	  zMatrix.setEntry(jpt,    -1,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	152	1	replace
466	[BUG]  [BUGGY]  zMatrix.setEntry(0,  0,  0);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  0,  0);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  0,  0);	  zMatrix.setEntry(jpt,    -1,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	152	1	replace
467	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1)  [CE]  ';'  expected  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1)  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    -1,    -1);    zMatrix.setEntry(jpt,  -1,  -1)	  	non-compiled	[CE]  ';'  expected	151	None	add
468	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	37	1	replace
469	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	37	1	replace
470	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhsq);  }  [CE]  cannot  find  symbol  rhsq  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhsq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhsq);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rhosq);    	non-compiled	[CE]  cannot  find  symbol  rhsq	37	None	replace
471	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  }  else  {  [CE]  while  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  }  else  {  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  }  else  {	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rhosq);    	non-compiled	[CE]  while  expected	37	None	replace
472	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	132	1	add
473	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	132	1	add
474	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -lhs);  [CE]  cannot  find  symbol  lhs  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -lhs);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -lhs);	  	non-compiled	[CE]  cannot  find  symbol  lhs	132	None	add
475	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  [CE]  ';'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt));    	non-compiled	[CE]  ';'  expected	58	None	replace
476	[BUG]  [BUGGY]  if(nfm  ==  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  [CE]  ';'  expected  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm  ==  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm  ==  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt));    	non-compiled	[CE]  ';'  expected	58	None	replace
477	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  0);  zMatrix.setEntry(jpt,  jpt,  0));  }  [CE]  ';'  expected  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  0);  zMatrix.setEntry(jpt,  jpt,  0));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  0);  zMatrix.setEntry(jpt,  jpt,  0));  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt));    	non-compiled	[CE]  ';'  expected	58	None	replace
478	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  ih);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  [CE]  ';'  expected  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  ih);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  ih);  zMatrix.setEntry(jpt,  jpt,  jpt));  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt));    	non-compiled	[CE]  ';'  expected	58	None	replace
479	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  HLF);  [CE]  cannot  find  symbol  HLF  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  HLF);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfxm,  HLF);	  zMatrix.setEntry(0,    nfxm,    rhosq);    	non-compiled	[CE]  cannot  find  symbol  HLF	65	None	replace
480	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  }	  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,    nfxm,    -recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	49	None	replace
481	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  }	  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,    nfxm,    -recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	49	None	replace
482	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfxm,  nfxm,  recip);	          zMatrix.setEntry(jpt,    nfxm,    recip);    ZMatrix.setEntry(jpt,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	42	1	replace
483	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfxm,  nfxm,  recip);	          zMatrix.setEntry(jpt,    nfxm,    recip);    ZMatrix.setEntry(jpt,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	42	1	replace
484	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  zMatrix.setEntry(nfm,  nfxm,  nfxm;  [CE]  ')'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  zMatrix.setEntry(nfm,  nfxm,  nfxm;  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    nfxm);    zMatrix.setEntry(nfm,  nfxm,  nfxm;	  	non-compiled	[CE]  ')'  expected	26	None	add
485	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhound);  [CE]  cannot  find  symbol  rhound  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhound);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    rhosq);    zMatrix.setEntry(nfm,  nfxm,  rhound);	  	non-compiled	[CE]  cannot  find  symbol  rhound	21	None	add
486	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    nfxm);    BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	  	non-compiled	[CE]  cannot  find  symbol	112	None	add
487	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    nfxm);    BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();	  	non-compiled	[CE]  cannot  find  symbol	112	None	add
488	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	48	1	add
489	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	48	1	add
490	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rcip);  zMatrix.setEntry(0,  nfxm,  -recip);  [CE]  cannot  find  symbol  rcip  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rcip);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rcip);  zMatrix.setEntry(0,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	48	None	add
491	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	48	1	add
492	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	48	1	add
493	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	3	1	add
494	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	3	1	add
495	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfm,    -recip);    zMatrix.setEntry(0,  nfm,  -ipt);	  	compilable	  [FE]  OutOfRangeException  	135	1	add
496	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -ipt);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    -recip);    zMatrix.setEntry(0,  nfm,  -ipt);	  	compilable	  [FE]  OutOfRangeException  	135	1	add
497	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -ip);  [CE]  cannot  find  symbol  ip  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -ip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    -recip);    zMatrix.setEntry(0,  nfm,  -ip);	  	non-compiled	[CE]  cannot  find  symbol  ip	135	None	add
498	[BUG]  [BUGGY]  zMatrix.setEntry(fm,  jpt,  nfxm);  [CE]  cannot  find  symbol  fm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(fm,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(fm,  jpt,  nfxm);	  zMatrix.setEntry(nfm,    jpt,    nfxm);    	non-compiled	[CE]  cannot  find  symbol  fm	113	None	replace
499	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	66	1	add
500	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	66	1	add
501	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rcip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [CE]  cannot  find  symbol  rcip  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rcip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rcip);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	66	None	add
502	[BUG]  [BUGGY]  ZMatrix.setEntry(jpt,  jpt,  ih);  [CE]  cannot  find  symbol  ih  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(jpt,  jpt,  ih);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(jpt,  jpt,  ih);	          zMatrix.setEntry(jpt,    jpt,    jpt);    ZMatrix.setEntry(jpt,    jpt,    jpt);    	non-compiled	[CE]  cannot  find  symbol  ih	57	None	replace
503	[BUG]  [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  ZMatrix  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(jpt,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();	          zMatrix.setEntry(jpt,    nfxm,    recip);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	111	None	replace
504	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -2);    zMatrix.setEntry(0,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
505	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -2);    zMatrix.setEntry(0,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
506	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -3);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -2);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -3);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
507	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -3);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -3);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -2);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -3);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
508	[BUG]  [BUGGY]  zMatrix.setEntry(fm,  nfxm,  rhosq);  [CE]  cannot  find  symbol  fm  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(fm,  nfxm,  rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(fm,  nfxm,  rhosq);	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(fm,    nfxm,    recip);    	non-compiled	[CE]  cannot  find  symbol  fm	128	None	replace
509	[BUG]  [BUGGY]  nfxm.setEntry(fm,  nfxm,  recip);  [CE]  cannot  find  symbol  fm  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  nfxm.setEntry(fm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	nfxm.setEntry(fm,  nfxm,  recip);	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(fm,    nfxm,    recip);    	non-compiled	[CE]  cannot  find  symbol  fm	128	None	replace
510	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    nfxm);    zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	139	1	add
511	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    nfxm);    zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	139	1	add
512	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    nfxm);    zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	139	1	add
513	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    nfxm);    zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	139	1	add
514	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt)  zMatrix.setEntry(jpt,  jpt,  nfxm);  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt)  zMatrix.setEntry(jpt,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    nfxm);    zMatrix.setEntry(jpt,  jpt,  jpt)  zMatrix.setEntry(jpt,  jpt,  nfxm);	  	non-compiled	[CE]  ';'  expected	139	None	add
515	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	89	1	add
516	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	89	1	add
517	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	replace
518	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	replace
519	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	126	None	replace
520	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	replace
521	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	replace
522	[BUG]  [BUGGY]  if(recip  >=  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >=  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >=  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip));    	non-compiled	[CE]  ';'  expected	122	None	replace
523	[BUG]  [BUGGY]  if(!modelSecondDerivativesValues.isEmpty())  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -re  [CE]  ')'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(!modelSecondDerivativesValues.isEmpty())  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -re  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(!modelSecondDerivativesValues.isEmpty())  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -re	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip));    	non-compiled	[CE]  ')'  expected	122	None	replace
524	[BUG]  [BUGGY]  zMatrix.setEntry(i,  nfxm,  -ipt);  [CE]  cannot  find  symbol  i  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(i,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(i,  nfxm,  -ipt);	  zMatrix.setEntry(nfm,    nfxm,    -ipt);    	non-compiled	[CE]  cannot  find  symbol  i	2	None	replace
525	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,    nfxm,    recip);    BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
526	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,    nfxm,    recip);    BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
527	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  }	          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	40	1	replace
528	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  }	          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	40	1	replace
529	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	40	1	replace
530	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	40	1	replace
531	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  0,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfxm,  0,  -1);	  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,    nfxm,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int)	4	None	replace
532	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	add
533	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	add
534	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	add
535	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	add
536	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	add
537	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	add
538	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	72	1	replace
539	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	72	1	replace
540	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -);  [CE]  illegal  start  of  expression  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfxm,  -);	  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,    nfxm,    -);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
541	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1)  [CE]  ';'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1)  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -1)	  	non-compiled	[CE]  ';'  expected	19	None	add
542	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -);  [CE]  illegal  start  of  expression  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
543	[BUG]  [BUGGY]  nfxm.setEntry(jpt,  nfxm,  -recip);  [CE]  int  cannot  be  dereferenced  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  nfxm.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	nfxm.setEntry(jpt,  nfxm,  -recip);	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -ih);    	non-compiled	[CE]  int  cannot  be  dereferenced	99	None	replace
544	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1));  [CE]  ';'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1));  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -1));	  	non-compiled	[CE]  ';'  expected	105	None	add
545	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -);  [CE]  illegal  start  of  expression  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -);	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
546	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -1ipt);  [CE]  ')'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(nfm,  nfxm,  -1ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(nfm,  nfxm,  -1ipt);	  	non-compiled	[CE]  ')'  expected	1	None	add
547	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhound);  [CE]  cannot  find  symbol  rhound  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhound);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhound);	  	non-compiled	[CE]  cannot  find  symbol  rhound	50	None	add
548	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	8	1	replace
549	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	8	1	replace
550	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rhosq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rhosq);  }	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	8	1	replace
551	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rhosq);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rhosq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rhosq);  }	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	8	1	replace
552	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }  else  {  zMatrix  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }  else  {  zMatrix  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }  else  {  zMatrix	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,    nfxm,    recip);    	non-compiled	[CE]  ';'  expected	8	None	replace
553	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  ZMatrix.setEntry(0,  nfm,  nfxm);  [CE]  cannot  find  symbol  ZMatrix  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  ZMatrix.setEntry(0,  nfm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    nfxm);    ZMatrix.setEntry(0,  nfm,  nfxm);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	62	None	add
554	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  rfm,  nfxm);  [CE]  cannot  find  symbol  rfm  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  rfm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    nfxm);    zMatrix.setEntry(0,  rfm,  nfxm);	  	non-compiled	[CE]  cannot  find  symbol  rfm	62	None	add
555	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -1));  [CE]  ';'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -1));  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfxm,  -1));	  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,    nfxm,    -1));    	non-compiled	[CE]  ';'  expected	6	None	replace
556	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  recip);  ZMatrix.setEntry(nfm,  nfxm,  nfxm);  [CE]  cannot  find  symbol  ZMatrix  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  recip);  ZMatrix.setEntry(nfm,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  recip);  ZMatrix.setEntry(nfm,  nfxm,  nfxm);	          zMatrix.setEntry(nfm,    nfxm,    recip);    ZMatrix.setEntry(nfm,    nfxm,    recip);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	10	None	replace
557	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  BOBYQAOptimizer$PathIsExploredException  zMatrix.setEntry(0,  nfxm,  0);  [CE]  ';'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  BOBYQAOptimizer$PathIsExploredException  zMatrix.setEntry(0,  nfxm,  0);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    0);    BOBYQAOptimizer$PathIsExploredException  zMatrix.setEntry(0,  nfxm,  0);	  	non-compiled	[CE]  ';'  expected	46	None	add
558	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    0);    BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
559	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    0);    BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
560	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rcip);  }  [CE]  cannot  find  symbol  rcip  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rcip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rcip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rcip);    	non-compiled	[CE]  cannot  find  symbol  rcip	35	None	replace
561	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zM  [CE]  ';'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zM  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zM	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rcip);    	non-compiled	[CE]  ';'  expected	35	None	replace
562	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rcip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  cannot  find  symbol  rcip  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rcip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rcip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	125	None	add
563	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    nfxm);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	140	None	replace
564	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }  else  {  zM  [CE]  ';'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }  else  {  zM  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }  else  {  zM	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    nfxm);    	non-compiled	[CE]  ';'  expected	140	None	replace
565	[BUG]  [BUGGY]  ZMatrix.setEntry(0,  nfxm,  nfxm);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  ZMatrix  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(0,  nfxm,  nfxm);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(0,  nfxm,  nfxm);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();	  zMatrix.setEntry(0,    nfxm,    nfxm);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	94	None	replace
566	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  HLF);  [CE]  cannot  find  symbol  HLF  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  HLF);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  HLF);	          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,    nfxm,    rhod);    	non-compiled	[CE]  cannot  find  symbol  HLF	78	None	replace
567	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  [CE]  while  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  while  expected	34	None	replace
568	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhound);  [CE]  cannot  find  symbol  rhound  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhound);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -rhosq);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhound);	  	non-compiled	[CE]  cannot  find  symbol  rhound	68	None	add
569	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm));  }  [CE]  ';'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm));  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm));  }	  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,    nfxm,    nfxm));    	non-compiled	[CE]  ';'  expected	17	None	replace
570	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm));  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm));  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm));  }  else  {  throw  new  PathIsExploredException( " ");  }	  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,    nfxm,    nfxm));    	non-compiled	[CE]  	17	None	replace
571	[BUG]  [BUGGY]  nfxm.setEntry(ipt,  nfxm,  -recip);  [CE]  int  cannot  be  dereferenced  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  nfxm.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	nfxm.setEntry(ipt,  nfxm,  -recip);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -rcip);    	non-compiled	[CE]  int  cannot  be  dereferenced	83	None	replace
572	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -rcip);  [CE]  cannot  find  symbol  rcip  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -rcip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,  nfxm,  -rcip);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -rcip);    	non-compiled	[CE]  cannot  find  symbol  rcip	83	None	replace
573	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	55	1	add
574	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	55	1	add
575	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    1);    zMatrix.setEntry(0,  nfxm,  2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	44	1	add
576	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    1);    zMatrix.setEntry(0,  nfxm,  2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	44	1	add
577	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -id);  [CE]  cannot  find  symbol  id  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -id);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  -id);	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -id);    	non-compiled	[CE]  cannot  find  symbol  id	108	None	replace
578	[BUG]  [BUGGY]  nfxm.setEntry(jpt,  nfxm,  recip);  [CE]  int  cannot  be  dereferenced  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  nfxm.setEntry(jpt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	nfxm.setEntry(jpt,  nfxm,  recip);	          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,    nfxm,    rcip);    	non-compiled	[CE]  int  cannot  be  dereferenced	41	None	replace
579	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    zMatrix.setEntry(nfm,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	142	1	add
580	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    zMatrix.setEntry(nfm,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	142	1	add
581	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	142	1	add
582	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	142	1	add
583	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  HLF);  [CE]  cannot  find  symbol  HLF  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  HLF);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  HLF);	  zMatrix.setEntry(nfm,    nfxm,    rhosq);    	non-compiled	[CE]  cannot  find  symbol  HLF	22	None	replace
584	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  1);  ZMatrix.setEntry(nfm,  nfxm,  1);  [CE]  cannot  find  symbol  ZMatrix  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  1);  ZMatrix.setEntry(nfm,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    1);    ZMatrix.setEntry(nfm,  nfxm,  1);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	85	None	add
585	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	33	1	add
586	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	33	1	add
587	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rcip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  cannot  find  symbol  rcip  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rcip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rcip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	33	None	add
588	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip  [CE]  ')'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip	  	non-compiled	[CE]  ')'  expected	33	None	add
589	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        nfxm);        zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	add
590	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        nfxm);        zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	add
591	[BUG]  [BUGGY]  ZMatrix.setEntry(nfm,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  ZMatrix  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(nfm,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(nfm,  nfxm,  recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();	          zMatrix.setEntry(nfm,    nfxm,    recip);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	104	None	replace
592	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix  =  zMatrix.getEntry(jpt,  nfm,  nfxm);  [CE]  no  suitable  method  found  for  getEntry(int,int,int)  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix  =  zMatrix.getEntry(jpt,  nfm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    nfxm);    zMatrix  =  zMatrix.getEntry(jpt,  nfm,  nfxm);	  	non-compiled	[CE]  no  suitable  method  found  for  getEntry(int,int,int)	114	None	add
593	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	add
594	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	add
595	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	add
596	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	30	1	add
597	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	67	None	replace
598	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(jpt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	67	1	replace
599	[BUG]  [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	67	1	replace
600	[BUG]  [BUGGY]  zMatrix.setEntry(f,  nfxm,  recip);  [CE]  no  suitable  method  found  for  setEntry(double,int,double)  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(f,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(f,  nfxm,  recip);	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(m,    nfxm,    recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,int,double)	129	None	replace
601	[BUG]  [BUGGY]  if(nfm  ==  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm  ==  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm  ==  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	145	None	replace
602	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip));  [CE]  ';'  expected  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip));  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip));	  	non-compiled	[CE]  ';'  expected	59	None	add
603	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  [CE]  ')'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip;    	non-compiled	[CE]  ')'  expected	100	None	replace
604	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  [CE]  ')'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip;  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip;    	non-compiled	[CE]  ')'  expected	100	None	replace
605	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(jpt,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(jpt,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
606	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(jpt,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(jpt,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(jpt,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
607	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(m,  nfxm,  -ipt);  [CE]  cannot  find  symbol  m  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(m,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(m,  nfxm,  -ipt);	  	non-compiled	[CE]  cannot  find  symbol  m	1	None	add
608	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    nfxm,    0);    zMatrix.setEntry(nfm,  nfxm,  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	23	1	add
609	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0);  zMatrix.setEntry(nfm,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    0);    zMatrix.setEntry(nfm,  nfxm,  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	23	1	add
610	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(fm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [CE]  cannot  find  symbol  fm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(fm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(fm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);	  	non-compiled	[CE]  cannot  find  symbol  fm	30	None	add
611	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	55	1	add
612	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	55	1	add
613	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  -1,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  -1,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  OutOfRangeException  	55	1	add
614	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  -1,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  -1,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  -1,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  OutOfRangeException  	55	1	add
615	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	55	1	add
616	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	55	1	add
617	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -rhosq);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	68	1	add
618	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -rhosq);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	68	1	add
619	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhs);  [CE]  cannot  find  symbol  rhs  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhs);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -rhosq);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhs);	  	non-compiled	[CE]  cannot  find  symbol  rhs	68	None	add
620	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -rhosq);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	68	1	add
621	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -rhosq);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -rhosq);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	68	1	add
622	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  }  else  {  zMatrix  [CE]  ';'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  }  else  {  zMatrix  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  }  else  {  zMatrix	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt);    	non-compiled	[CE]  ';'  expected	56	None	replace
623	[BUG]  [BUGGY]  ZMatrix.setEntry(ipt,  nfxm,  -recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(ipt,  nfxm,  -recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(ipt,  nfxm,  -recip);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(ipt,    nfxm,    -recip);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	92	None	replace
624	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -recip);  }	  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,    nfxm,    -recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	49	None	replace
625	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  jpt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,  nfxm,  jpt);	  zMatrix.setEntry(0,    nfxm,    rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	65	1	replace
626	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  jpt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfxm,  jpt);	  zMatrix.setEntry(0,    nfxm,    rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	65	1	replace
627	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	33	1	add
628	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	33	1	add
629	[BUG]  [BUGGY]  zMatrix  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix  =  new  BOBYQOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix  =  new  BOBYQOptimizer();	          zMatrix.setEntry(jpt,    nfxm,    recip);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
630	[BUG]  [BUGGY]  if(nfm  ==  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip));  }  [CE]  ';'  expected  [FE]          OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm  ==  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm  ==  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip));  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    recip));    	non-compiled	[CE]  ';'  expected	146	None	replace
631	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [CE]  cannot  find  symbol  fm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  fm	66	None	add
632	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -2);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	143	1	replace
633	[BUG]  [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -2);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	143	1	replace
634	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);  }	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -2);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	143	1	replace
635	[BUG]  [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -2);  }	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -2);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	143	1	replace
636	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  jpt,  -recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	137	None	add
637	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	137	1	add
638	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	137	1	add
639	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int)  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int)	137	None	add
640	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	81	1	add
641	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	81	1	add
642	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhs);  [CE]  cannot  find  symbol  rhs  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhs);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhs);	  	non-compiled	[CE]  cannot  find  symbol  rhs	81	None	add
643	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	81	1	add
644	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -rhosq);    zMatrix.setEntry(ipt,  nfxm,  -rhosq);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	81	1	add
645	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	3	1	add
646	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	3	1	add
647	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    nfxm);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	140	1	replace
648	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    nfxm);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	140	1	replace
649	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }  else  {  zMatrix  [CE]  ';'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }  else  {  zMatrix  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  }  else  {  zMatrix	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    nfxm);    	non-compiled	[CE]  ';'  expected	140	None	replace
650	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    nfxm);    zMatrix.setEntry(jpt,  jpt,  jpt,  nfxm);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int)	139	None	add
651	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int)  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    nfxm);    zMatrix.setEntry(jpt,  jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int)	139	None	add
652	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    nfxm);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	139	1	add
653	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        jpt,        jpt);        zMatrix.setEntry(jpt,    jpt,    nfxm);    zMatrix.setEntry(jpt,  jpt,  nfxm);  zMatrix.setEntry(jpt,  jpt,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	139	1	add
654	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	8	1	replace
655	[BUG]  [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,    nfxm,    recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	8	1	replace
656	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  }	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,    nfxm,    recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	8	None	replace
657	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);	  	compilable	  [FE]  OutOfRangeException  	11	1	add
658	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);	  	compilable	  [FE]  OutOfRangeException  	11	1	add
659	[BUG]  [BUGGY]  zMatrix.setEntry(0,  -recip,  -ipt);  [CE]  no  suitable  method  found  for  setEntry(int,double,int)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  -recip,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  -recip,  -ipt);	  zMatrix.setEntry(0,    nfxm,    -ipt);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double,int)	131	None	replace
660	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  -1,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,  -1,  -1);	  zMatrix.setEntry(0,    nfxm,    -ipt);    	compilable	  [FE]  OutOfRangeException  	131	1	replace
661	[BUG]  [BUGGY]  zMatrix.setEntry(0,  -1,  -1);  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  -1,  -1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  -1,  -1);	  zMatrix.setEntry(0,    nfxm,    -ipt);    	compilable	  [FE]  OutOfRangeException  	131	1	replace
662	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0)  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  0)  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  nfxm,  0)	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -1)    	non-compiled	[CE]  ';'  expected	121	None	replace
663	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rcip);  [CE]  cannot  find  symbol  rcip  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rcip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        recip);        zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  rcip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	7	None	add
664	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm,  recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,  jpt,  nfxm,  recip);	  zMatrix.setEntry(nfm,    jpt,    recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	96	None	replace
665	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	126	None	replace
666	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  ==  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(jpt  ==  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	replace
667	[BUG]  [BUGGY]  if(jpt  ==  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  ==  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  ==  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	replace
668	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	144	1	add
669	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	144	1	add
670	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    if(isMinimize)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	  	compilable	  [FE]  OutOfRangeException  	144	1	add
671	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfm,        recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    if(isMinimize)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	  	compilable	  [FE]  OutOfRangeException  	144	1	add
672	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	125	1	add
673	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	125	1	add
674	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  cannot  find  symbol  fm  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  fm	125	None	add
675	[BUG]  [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(fm,  nfxm,  recip);  zMatrix.setEntry(fm,  nfxm,  recip);  }  [CE]  cannot  find  symbol  fm  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(fm,  nfxm,  recip);  zMatrix.setEntry(fm,  nfxm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(zMatrix!=  null)  {  zMatrix.setEntry(fm,  nfxm,  recip);  zMatrix.setEntry(fm,  nfxm,  recip);  }	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(fm,    nfxm,    recip);    	non-compiled	[CE]  cannot  find  symbol  fm	128	None	replace
676	[BUG]  [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(fm,  nfxm,  recip);  }  [CE]  cannot  find  symbol  fm  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(fm,  nfxm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(zMatrix!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(fm,  nfxm,  recip);  }	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(fm,    nfxm,    recip);    	non-compiled	[CE]  cannot  find  symbol  fm	128	None	replace
677	[BUG]  [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(fm,  nfxm,  recip);  }  else  {  zMatrix.setEntry(fm,  nfxm,  recip);  }  [CE]  cannot  find  symbol  fm  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(fm,  nfxm,  recip);  }  else  {  zMatrix.setEntry(fm,  nfxm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(zMatrix!=  null)  {  zMatrix.setEntry(fm,  nfxm,  recip);  }  else  {  zMatrix.setEntry(fm,  nfxm,  recip);  }	          zMatrix.setEntry(nfm,    nfxm,    recip);    zMatrix.setEntry(fm,    nfxm,    recip);    	non-compiled	[CE]  cannot  find  symbol  fm	128	None	replace
678	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(ipt  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(ipt  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  }	  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	90	1	replace
679	[BUG]  [BUGGY]  if(ipt  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(ipt  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(ipt  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  }	  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	90	1	replace
680	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(jpt  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  }	  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	90	1	replace
681	[BUG]  [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -ipt);  }	  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	90	1	replace
682	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  nfxm,  jpt));  [CE]  ';'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  jpt);  zMatrix.setEntry(jpt,  nfxm,  jpt));  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfxm,    jpt);    zMatrix.setEntry(jpt,  nfxm,  jpt));	  	non-compiled	[CE]  ';'  expected	28	None	add
683	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  rfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  [CE]  cannot  find  symbol  rfxm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  rfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        recip);        zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,  rfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);	  	non-compiled	[CE]  cannot  find  symbol  rfxm	39	None	add
684	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,    nfm,    jpt);    zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	149	1	add
685	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    jpt);    zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	149	1	add
686	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix.setEntry(jpt,  nfm,  dsqCrvmin);  [CE]  cannot  find  symbol  dsqCrvmin  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix.setEntry(jpt,  nfm,  dsqCrvmin);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    jpt);    zMatrix.setEntry(jpt,  nfm,  dsqCrvmin);	  	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	149	None	add
687	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix.setEntry(jpt,  nfm,  ih);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  jpt);  zMatrix.setEntry(jpt,  nfm,  ih);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    jpt);    zMatrix.setEntry(jpt,  nfm,  ih);	  	non-compiled	[CE]  cannot  find  symbol  ih	149	None	add
688	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  hs);  [CE]  cannot  find  symbol  hs  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  hs);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  hs);	          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,    nfxm,    rhs);    	non-compiled	[CE]  cannot  find  symbol  hs	76	None	replace
689	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  ih);  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  ih);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfm,  ih);	  zMatrix.setEntry(jpt,    nfm,    jpt);    	non-compiled	[CE]  cannot  find  symbol  ih	150	None	replace
690	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  recip);  zMatrix.setEntry(jpt,  recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  recip);  zMatrix.setEntry(jpt,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    recip);    zMatrix.setEntry(jpt,  recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	95	None	add
691	[BUG]  [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm));  }  [CE]  ';'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm));  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(zMatrix!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm));  }	  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,    nfxm,    nfxm));    	non-compiled	[CE]  ';'  expected	17	None	replace
692	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  }  else  {  zMatrix.setEntry(0,  nfxm,  nfxm));  }  [CE]  ';'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  }  else  {  zMatrix.setEntry(0,  nfxm,  nfxm));  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  }  else  {  zMatrix.setEntry(0,  nfxm,  nfxm));  }	  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,    nfxm,    nfxm));    	non-compiled	[CE]  ';'  expected	17	None	replace
693	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -3);  zMatrix.setEntry(nfm,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    zMatrix.setEntry(nfm,  nfxm,  -3);  zMatrix.setEntry(nfm,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	142	1	add
694	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -3);  zMatrix.setEntry(nfm,  nfxm,  -2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,  nfxm,  -2);  zMatrix.setEntry(nfm,  nfxm,  -3);  zMatrix.setEntry(nfm,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -1);        zMatrix.setEntry(nfm,    nfxm,    -2);    zMatrix.setEntry(nfm,  nfxm,  -3);  zMatrix.setEntry(nfm,  nfxm,  -2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	142	1	add
695	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	50	1	add
696	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	50	1	add
697	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhs);  [CE]  cannot  find  symbol  rhs  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhs);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhs);	  	non-compiled	[CE]  cannot  find  symbol  rhs	50	None	add
698	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,  jpt,  nfxm);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    ih);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	141	1	replace
699	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  jpt,  nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  jpt,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  jpt,  nfxm);	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    ih);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	141	1	replace
700	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -jpt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfm,    -recip);    zMatrix.setEntry(0,  nfm,  -jpt);	  	compilable	  [FE]  OutOfRangeException  	135	1	add
701	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -jpt);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(0,  nfm,  -jpt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    -recip);    zMatrix.setEntry(0,  nfm,  -jpt);	  	compilable	  [FE]  OutOfRangeException  	135	1	add
702	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  rcip);  [CE]  cannot  find  symbol  rcip  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  rcip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  rcip);	          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,    nfxm,    rcip);    	non-compiled	[CE]  cannot  find  symbol  rcip	41	None	replace
703	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rehosq);  [CE]  cannot  find  symbol  rehosq  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -rehosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -rehosq);	  	non-compiled	[CE]  cannot  find  symbol  rehosq	132	None	add
704	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -lhosq);  [CE]  cannot  find  symbol  lhosq  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -rhosq);  zMatrix.setEntry(0,  nfxm,  -lhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -rhosq);    zMatrix.setEntry(0,  nfxm,  -lhosq);	  	non-compiled	[CE]  cannot  find  symbol  lhosq	132	None	add
705	[BUG]  [BUGGY]  if(rhs!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  rhs);  zMatrix.setEntry(jpt,  nfxm,  rhs);  }  [CE]  cannot  find  symbol  rhs  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(rhs!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  rhs);  zMatrix.setEntry(jpt,  nfxm,  rhs);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(rhs!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  rhs);  zMatrix.setEntry(jpt,  nfxm,  rhs);  }	          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,    nfxm,    rhosq);    	non-compiled	[CE]  cannot  find  symbol  rhs	75	None	replace
706	[BUG]  [BUGGY]  if(rhs  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  rhs);  zMatrix.setEntry(jpt,  nfxm,  rhs);  }  [CE]  cannot  find  symbol  rhs  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(rhs  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  rhs);  zMatrix.setEntry(jpt,  nfxm,  rhs);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(rhs  >  0)  {  zMatrix.setEntry(jpt,  nfxm,  rhs);  zMatrix.setEntry(jpt,  nfxm,  rhs);  }	          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,    nfxm,    rhosq);    	non-compiled	[CE]  cannot  find  symbol  rhs	75	None	replace
707	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -ih);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	99	None	replace
708	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -ih);  }  [CE]  incomparable  types:  int  and  <null>  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -ih);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -ih);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -ih);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	99	None	replace
709	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  }  [CE]  incomparable  types:  int  and  <null>  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -ih);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	99	None	replace
710	[BUG]  [BUGGY]  if(rh  <  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhsq);  }  [CE]  cannot  find  symbol  rh  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(rh  <  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhsq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(rh  <  0)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhsq);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rhosq);    	non-compiled	[CE]  cannot  find  symbol  rh	37	None	replace
711	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -1);  zMatrix.setEntry(nfm,  nfxm,  -1);  }	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -1);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	31	None	replace
712	[BUG]  [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(fm,  nfxm,  -1);  zMatrix.setEntry(fm,  nfxm,  -1);  }  [CE]  cannot  find  symbol  fm  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(fm,  nfxm,  -1);  zMatrix.setEntry(fm,  nfxm,  -1);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(zMatrix!=  null)  {  zMatrix.setEntry(fm,  nfxm,  -1);  zMatrix.setEntry(fm,  nfxm,  -1);  }	          zMatrix.setEntry(nfm,    nfxm,    -1);    zMatrix.setEntry(nfm,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  fm	31	None	replace
713	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(jpt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	replace
714	[BUG]  [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	replace
715	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	80	None	replace
716	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  ==  1)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(jpt  ==  1)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	replace
717	[BUG]  [BUGGY]  if(jpt  ==  1)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  ==  1)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  ==  1)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	replace
718	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    rhosq);    zMatrix.setEntry(0,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	64	1	add
719	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    rhosq);    zMatrix.setEntry(0,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	64	1	add
720	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  hsq);  [CE]  cannot  find  symbol  hsq  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  rhosq);  zMatrix.setEntry(0,  nfxm,  hsq);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    rhosq);    zMatrix.setEntry(0,  nfxm,  hsq);	  	non-compiled	[CE]  cannot  find  symbol  hsq	64	None	add
721	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	89	1	add
722	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -recip);        zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -1);  zMatrix.setEntry(0,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	89	1	add
723	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  1,);  [CE]  illegal  start  of  expression  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  1);  zMatrix.setEntry(0,  nfxm,  1,);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    1);    zMatrix.setEntry(0,  nfxm,  1,);	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
724	[BUG]  [BUGGY]  if(jpt  ==  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  [CE]  ';'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  ==  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  ==  null)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt));    	non-compiled	[CE]  ';'  expected	58	None	replace
725	[BUG]  [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  [CE]  ';'  expected  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  >  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt));    	non-compiled	[CE]  ';'  expected	58	None	replace
726	[BUG]  [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  >  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt));  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    jpt));    	non-compiled	[CE]  	58	None	replace
727	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	138	1	replace
728	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(jpt,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  -recip);  }	          zMatrix.setEntry(jpt,    jpt,    jpt);    zMatrix.setEntry(jpt,    jpt,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	138	1	replace
729	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip));    	non-compiled	[CE]  ';'  expected	122	None	replace
730	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }  [CE]  ';'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip));  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip));    	non-compiled	[CE]  ';'  expected	122	None	replace
731	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(jpt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	72	1	replace
732	[BUG]  [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	72	1	replace
733	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -ipt);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	72	None	replace
734	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(ipt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(ipt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	72	1	replace
735	[BUG]  [BUGGY]  if(ipt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(ipt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(ipt  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -ipt);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	72	1	replace
736	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  }	  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,    nfxm,    nfxm);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	16	None	replace
737	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(zMatrix!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  }	  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,    nfxm,    nfxm);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	16	1	replace
738	[BUG]  [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(zMatrix!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(zMatrix!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  }	  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,    nfxm,    nfxm);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	16	1	replace
739	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  }  else  {  zMatrix  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  }  else  {  zMatrix  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  }  else  {  zMatrix	  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,    nfxm,    nfxm);    	non-compiled	[CE]  ';'  expected	16	None	replace
740	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	130	1	add
741	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -ipt);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    -ipt);    zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	130	1	add
742	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(jpt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	replace
743	[BUG]  [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(jpt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(jpt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	replace
744	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -rhosq);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	82	None	replace
745	[BUG]  [BUGGY]  if(rh  <  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }  [CE]  cannot  find  symbol  rh  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(rh  <  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(rh  <  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -rhosq);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -rhosq);    	non-compiled	[CE]  cannot  find  symbol  rh	82	None	replace
746	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  rcip);  [CE]  cannot  find  symbol  rcip  [FE]          OutOfRangeException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  rcip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfm,  rcip);	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    rcip);    	non-compiled	[CE]  cannot  find  symbol  rcip	13	None	replace
747	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,    nfm,    nfxm);    zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	114	1	add
748	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    nfxm);    zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	114	1	add
749	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,    nfm,    nfxm);    zMatrix.setEntry(jpt,  nfm,  recip);	  	compilable	  [FE]  OutOfRangeException  	114	1	add
750	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    nfxm);    zMatrix.setEntry(jpt,  nfm,  recip);	  	compilable	  [FE]  OutOfRangeException  	114	1	add
751	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  nfxm)  [CE]  ';'  expected  [FE]        OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  nfxm);  zMatrix.setEntry(jpt,  nfm,  nfxm)  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    nfm,    nfxm);    zMatrix.setEntry(jpt,  nfm,  nfxm)	  	non-compiled	[CE]  ';'  expected	114	None	add
752	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhsq);  zMatrix.setEntry(jpt,  nfxm,  rhsq  [CE]  ')'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhosq);  zMatrix.setEntry(jpt,  nfxm,  rhsq);  zMatrix.setEntry(jpt,  nfxm,  rhsq  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        rhosq);        zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,  nfxm,  rhsq);  zMatrix.setEntry(jpt,  nfxm,  rhsq	  	non-compiled	[CE]  ')'  expected	74	None	add
753	[BUG]  [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  ZMatrix  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(jpt,  nfxm,  jpt);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQOptimizer();	          zMatrix.setEntry(jpt,    jpt,    jpt);    BOBYQAOptimizer$PathIsExploredException    zMatrix    =    new    BOBYQOptimizer();    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	119	None	replace
754	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  }	  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,    nfxm,    -rhosq);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	51	None	replace
755	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  }	  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,    nfxm,    -rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	51	1	replace
756	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  -rhosq);  }	  zMatrix.setEntry(0,    nfxm,    -recip);    zMatrix.setEntry(0,    nfxm,    -rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	51	1	replace
757	[BUG]  [BUGGY]  if(nfm  ==  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm  ==  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm  ==  null)  {  zMatrix.setEntry(jpt,  nfm,  recip);  zMatrix.setEntry(jpt,  nfm,  recip);  }	          zMatrix.setEntry(jpt,    nfm,    recip);    zMatrix.setEntry(jpt,    nfm,    recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	12	None	replace
758	[BUG]  [BUGGY]  ZMatrix.setEntry(nfm,  nfxm,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  ZMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	ZMatrix.setEntry(nfm,  nfxm,  -recip);	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -i);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	73	None	replace
759	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    0);    zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	46	1	add
760	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  zMatrix.setEntry(0,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    0);    zMatrix.setEntry(0,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	46	1	add
761	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  zMatrix.setEntry(0,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,    nfxm,    0);    zMatrix.setEntry(0,  nfxm,  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	46	1	add
762	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  zMatrix.setEntry(0,  nfxm,  1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0);  zMatrix.setEntry(0,  nfxm,  1);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfxm,    0);    zMatrix.setEntry(0,  nfxm,  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	46	1	add
763	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [CE]  cannot  find  symbol  fm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -ipt);    zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);	  	non-compiled	[CE]  cannot  find  symbol  fm	71	None	add
764	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  zMatrix.setEntry(fm,  nfxm,  nfxm);  [CE]  cannot  find  symbol  fm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  nfxm);  zMatrix.setEntry(fm,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    nfxm);    zMatrix.setEntry(fm,  nfxm,  nfxm);	  	non-compiled	[CE]  cannot  find  symbol  fm	26	None	add
765	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	147	1	add
766	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(jpt,  jpt,  jpt);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    jpt);    zMatrix.setEntry(jpt,  jpt,  jpt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	147	1	add
767	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(nfm,  jpt,  jpt  +  1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    jpt,    jpt);    zMatrix.setEntry(nfm,  jpt,  jpt  +  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	147	1	add
768	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(nfm,  jpt,  jpt  +  1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  jpt);  zMatrix.setEntry(nfm,  jpt,  jpt  +  1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    jpt);    zMatrix.setEntry(nfm,  jpt,  jpt  +  1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	147	1	add
769	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  recip);	  zMatrix.setEntry(0,    nfm,    nfxm);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	63	None	replace
770	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	34	None	replace
771	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(jpt,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(jpt,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(jpt,  -recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	116	None	add
772	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  rh));  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  rh));  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,  nfxm,  rh));	          zMatrix.setEntry(jpt,    nfxm,    rhosq);    zMatrix.setEntry(jpt,    nfxm,    rhound);    	non-compiled	[CE]  ';'  expected	120	None	replace
773	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  1));  zMatrix.setEntry(0,  nfxm,  -2);  [CE]  ';'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,  nfxm,  -2);  zMatrix.setEntry(0,  nfxm,  1));  zMatrix.setEntry(0,  nfxm,  -2);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        -1);        zMatrix.setEntry(0,    nfxm,    -2);    zMatrix.setEntry(0,  nfxm,  1));  zMatrix.setEntry(0,  nfxm,  -2);	  	non-compiled	[CE]  ';'  expected	123	None	add
774	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	69	1	replace
775	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -rhosq);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	69	1	replace
776	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  }  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  }	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -rhosq);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	69	None	replace
777	[BUG]  [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  }  else  {  zM  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  }  else  {  zM  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(recip  >  0)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -rhosq);  }  else  {  zM	  zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -rhosq);    	non-compiled	[CE]  ';'  expected	69	None	replace
778	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rehosq);  [CE]  cannot  find  symbol  rehosq  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rehosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    rhosq);    zMatrix.setEntry(nfm,  nfxm,  rehosq);	  	non-compiled	[CE]  cannot  find  symbol  rehosq	21	None	add
779	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhosquery);  [CE]  cannot  find  symbol  rhosquery  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  rhosq);  zMatrix.setEntry(nfm,  nfxm,  rhosquery);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    rhosq);    zMatrix.setEntry(nfm,  nfxm,  rhosquery);	  	non-compiled	[CE]  cannot  find  symbol  rhosquery	21	None	add
780	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  nfxm)-  zMatrix.getEntry(0,  nfxm,  nfxm);  [CE]  not  a  statement  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  nfxm)-  zMatrix.getEntry(0,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    nfxm);    zMatrix.setEntry(0,  nfm,  nfxm)-  zMatrix.getEntry(0,  nfxm,  nfxm);	  	non-compiled	[CE]  not  a  statement	62	None	add
781	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  nfxm)-  zMatrix.getEntry(0,  nfxm,  recip);  [CE]  not  a  statement  [FE]      OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm);  zMatrix.setEntry(0,  nfm,  nfxm)-  zMatrix.getEntry(0,  nfxm,  recip);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,    nfm,    nfxm);    zMatrix.setEntry(0,  nfm,  nfxm)-  zMatrix.getEntry(0,  nfxm,  recip);	  	non-compiled	[CE]  not  a  statement	62	None	add
782	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  }	          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,    nfxm,    recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	40	None	replace
783	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  recip);  zMatrix.setEntry(jpt,  nfxm,  recip);  }	          zMatrix.setEntry(jpt,    nfxm,    recip);    zMatrix.setEntry(jpt,    nfxm,    recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	40	None	replace
784	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	79	1	add
785	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	79	1	add
786	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	79	None	add
787	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1)  [CE]  ';'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1)  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -1)	  	non-compiled	[CE]  ';'  expected	105	None	add
788	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  0));  [CE]  ';'  expected  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,  nfxm,  0));  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,  nfxm,  0));	  zMatrix.setEntry(0,    nfxm,    -1);    zMatrix.setEntry(0,    nfxm,    -1));    	non-compiled	[CE]  ';'  expected	6	None	replace
789	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhs);  [CE]  cannot  find  symbol  rhs  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhs);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -rhosq);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rhs);	  	non-compiled	[CE]  cannot  find  symbol  rhs	36	None	add
790	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -rhosq);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	36	1	add
791	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -rhosq);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	36	1	add
792	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -rhosq);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	36	1	add
793	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);  zMatrix.setEntry(jpt,  nfxm,  -rhosq);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -rhosq);    zMatrix.setEntry(jpt,  nfxm,  -rhosq);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	36	1	add
794	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(jpt,  -2,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(jpt,    -1,    -1);    zMatrix.setEntry(jpt,  -2,  -1);	  	compilable	  [FE]  OutOfRangeException  	151	1	add
795	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(jpt,  -2,  -1);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(jpt,  -2,  -1);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(jpt,    -1,    -1);    zMatrix.setEntry(jpt,  -2,  -1);	  	compilable	  [FE]  OutOfRangeException  	151	1	add
796	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(0,        nfxm,        nfxm);        zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	add
797	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        nfxm);        zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(0,  nfxm,  nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	15	1	add
798	[BUG]  [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  fxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  [CE]  cannot  find  symbol  fxm  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  nfxm,  nfxm);  zMatrix.setEntry(0,  fxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(0,        nfxm,        nfxm);        zMatrix.setEntry(0,    nfxm,    nfxm);    zMatrix.setEntry(0,  fxm,  nfxm);  zMatrix.setEntry(0,  nfxm,  nfxm);	  	non-compiled	[CE]  cannot  find  symbol  fxm	15	None	add
799	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rcip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rcip);  }  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rcip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rcip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	35	None	replace
800	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	zMatrix.setEntry(nfm,    nfxm,    1);    zMatrix.setEntry(nfm,  nfxm,  2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
801	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  2);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      zMatrix.setEntry(nfm,  nfxm,  Math.sqrt(HALF)  /  rhosq);  zMatrix.setEntry(nfm  -  n,  nfxm,  -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  1);  zMatrix.setEntry(nfm,  nfxm,  2);  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	zMatrix.setEntry(nfm,    nfxm,    1);    zMatrix.setEntry(nfm,  nfxm,  2);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
