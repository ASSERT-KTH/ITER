bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,    upperBound,    minDiff);    initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
2	[BUG]  [BUGGY]  initBound(dimension,  upperBound,  minDiff);  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initBound(dimension,  upperBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initBound(dimension,  upperBound,  minDiff);	  initialTrustRegionRadius    =    minDiff    /    2;    initBound(dimension,    upperBound,    minDiff);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
3	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initBound(dimension,  upperBound,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initBound(dimension,  upperBound,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  2;  initBound(dimension,  upperBound,  requiredMinDiff);	  initialTrustRegionRadius    =    minDiff    /    2;    initBound(dimension,    upperBound,    minDiff);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
4	[BUG]  [BUGGY]  initBound(dimension,  lowerBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initBound(dimension,  lowerBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initBound(dimension,  lowerBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initBound(dimension,    lowerBound,    minDiff);    initialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
5	[BUG]  [BUGGY]  initBound(dimension,  lowerBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initBound(dimension,  lowerBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initBound(dimension,  lowerBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initBound(dimension,    lowerBound,    minDiff);    initialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
6	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	add
7	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	add
8	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [CE]  cannot  find  symbol  initRegionRadius  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    initRegionRadius  =  minDiff  /  2  *  requiredMinDiff;	  	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	27	None	add
9	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initRadius  =  minDiff  /  2  *  requiredMinDiff;  [CE]  cannot  find  symbol  initRadius  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initRadius  =  minDiff  /  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    initRadius  =  minDiff  /  2  *  requiredMinDiff;	  	non-compiled	[CE]  cannot  find  symbol  initRadius	27	None	add
10	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initialTrustRegionRadius  =  minDiff  /  2  *  neededMinDiff;  [CE]  cannot  find  symbol  neededMinDiff  [FE]          AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initialTrustRegionRadius  =  minDiff  /  2  *  neededMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    initialTrustRegionRadius  =  minDiff  /  2  *  neededMinDiff;	  	non-compiled	[CE]  cannot  find  symbol  neededMinDiff	27	None	add
11	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initInterpolationPoints();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initInterpolationPoints();  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    initInterpolationPoints();	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
12	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initialTrustRegionRadius  =  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    requiredMinDiff    /    2;    initialTrustRegionRadius  =  requiredMinDiff  /  2;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	25	1	add
13	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initialTrustRegionRadius  =  requiredMinDiff  /  2;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initialTrustRegionRadius  =  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2;    initialTrustRegionRadius  =  requiredMinDiff  /  2;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	25	1	add
14	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initRegionRadius  =  requiredMinDiff  /  2;  [CE]  cannot  find  symbol  initRegionRadius  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initRegionRadius  =  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2;    initRegionRadius  =  requiredMinDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	25	None	add
15	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initRadius  =  requiredMinDiff  /  2;  [CE]  cannot  find  symbol  initRadius  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initRadius  =  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2;    initRadius  =  requiredMinDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  initRadius	25	None	add
16	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  InitialTrustRegionRadius  =  requiredMinDiff  /  2;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]          AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  InitialTrustRegionRadius  =  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2;    InitialTrustRegionRadius  =  requiredMinDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	25	None	add
17	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initBoundRegionRadius  =  requiredMinDiff  /  2;  [CE]  cannot  find  symbol  initBoundRegionRadius  [FE]            AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initBoundRegionRadius  =  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2;    initBoundRegionRadius  =  requiredMinDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  initBoundRegionRadius	25	None	add
18	[BUG]  [BUGGY]  double  minDiff  =  Math.max(lengthDifference,  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(lengthDifference,  boundDifference[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(lengthDifference,  boundDifference[i]);	  double    minDiff    =    Math.max(minDiff,    boundDifference[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	15	None	replace
19	[BUG]  [BUGGY]  initRadius(minDiff  /  2.0);  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius(minDiff  /  2.0);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius(minDiff  /  2.0);	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius(minDiff    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
20	[BUG]  [BUGGY]  initialTrustRegius  =  requiredMinDiff  /  2.0;  initRadius(minDiff  /  2.0);  [CE]  cannot  find  symbol  initialTrustRegius  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegius  =  requiredMinDiff  /  2.0;  initRadius(minDiff  /  2.0);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegius  =  requiredMinDiff  /  2.0;  initRadius(minDiff  /  2.0);	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius(minDiff    /    2.0);    	non-compiled	[CE]  cannot  find  symbol  initialTrustRegius	63	None	replace
21	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius(minDiff  /  2.0);  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius(minDiff  /  2.0);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius(minDiff  /  2.0);	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius(minDiff    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
22	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	34	1	add
23	[BUG]  [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	34	1	add
24	[BUG]  [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  InitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  InitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    InitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	34	None	add
25	[BUG]  [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  initRegionRadius  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	34	None	add
26	[BUG]  [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initRadius(initialTrustRegionRadius,  requiredMinDiff  /  3.0);  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initRadius(initialTrustRegionRadius,  requiredMinDiff  /  3.0);  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius(initialTrustRegionRadius,  requiredMinDiff  /  3.0);  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
27	[BUG]  [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initRadius(initialTrustRegionRadius);  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initRadius(initialTrustRegionRadius);  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius(initialTrustRegionRadius);  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
28	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  requiredMinDiff);	  double    minDiff    =    Math.min(requiredMinDiff,    initialTrustRegionRadius);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	18	None	replace
29	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(minDiff,  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  requiredMinDiff);	  double    minDiff    =    Math.min(requiredMinDiff,    initialTrustRegionRadius);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	18	None	replace
30	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  requiredMinDiff  /  3.0);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  requiredMinDiff  /  3.0);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  requiredMinDiff  /  3.0);	  double    minDiff    =    Math.min(requiredMinDiff,    initialTrustRegionRadius);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	18	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  requiredMinDiff  *  2;	  initialTrustRegionRadius    =    requiredMinDiff    /    2;    	compilable	  [FE]  AssertionError  	26	3	replace
32	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  *  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  *  2;	  initialTrustRegionRadius    =    requiredMinDiff    /    2;    	compilable	  [FE]  AssertionError  	26	3	replace
33	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2  *  boundDifference;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2  *  boundDifference;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2  *  boundDifference;	  initialTrustRegionRadius    =    requiredMinDiff    /    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	26	None	replace
34	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minDiff  /  2;	  initialTrustRegionRadius    =    requiredMinDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	26	None	replace
35	[BUG]  [BUGGY]  initRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  initRadius  [FE]            AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  initRadius	37	None	replace
36	[BUG]  [BUGGY]  initialTrustRegius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  initialTrustRegius  [FE]              AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  initialTrustRegius	37	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  minDiff  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	minDiff  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius    =    requiredMinDiff    /    3.0;    	compilable	  [FE]  AssertionError  	37	3	replace
38	[BUG]  [BUGGY]  minDiff  =  requiredMinDiff  /  3.0;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  minDiff  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	minDiff  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius    =    requiredMinDiff    /    3.0;    	compilable	  [FE]  AssertionError  	37	3	replace
39	[BUG]  [BUGGY]  InitialTrustRegius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  InitialTrustRegius  [FE]                  AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegius	37	None	replace
40	[BUG]  [BUGGY]  initBound(dimension,  upperBound,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initBound(dimension,  upperBound,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initBound(dimension,  upperBound,  requiredMinDiff);	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,    upperBound,    minDiff);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
41	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  initBound(dimension,  upperBound,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  initBound(dimension,  upperBound,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  3.0;  initBound(dimension,  upperBound,  requiredMinDiff);	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,    upperBound,    minDiff);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
42	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initBound(dimension,  upperBound,  minDiff);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initBound(dimension,  upperBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initBound(dimension,  upperBound,  minDiff);	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,    upperBound,    minDiff);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
43	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initBound(dimension,  lowerBound,  minDiff);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initBound(dimension,  lowerBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initBound(dimension,  lowerBound,  minDiff);	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,    upperBound,    minDiff);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2  *  minDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  requiredMinDiff  /  2  *  minDiff;	  initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	28	3	replace
45	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2  *  minDiff;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2  *  minDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2  *  minDiff;	  initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	28	3	replace
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  minDiff  *  2  *  requiredMinDiff;	  initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	28	3	replace
47	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2  *  requiredMinDiff;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  *  2  *  requiredMinDiff;	  initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	28	3	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff  +  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff  +  1;	  initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	28	3	replace
49	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff  +  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff  +  1;	  initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	28	3	replace
50	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  minDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  minDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  minDiff);	  double    minDiff    =    Math.min(minDiff,    initialTrustRegionRadius);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	51	None	replace
51	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minimumTrustRegionRadius,  initialTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(minimumTrustRegionRadius,  initialTrustRegionRadius);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minimumTrustRegionRadius,  initialTrustRegionRadius);	  double    minDiff    =    Math.min(minDiff,    initialTrustRegionRadius);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	51	None	replace
52	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  minDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  minDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  minDiff);	  double    minDiff    =    Math.max(minDiff,    initialTrustRegionRadius);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	24	None	replace
53	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	add
54	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	add
55	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  InitialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  InitialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    InitialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	43	None	add
56	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [CE]  cannot  find  symbol  initRegionRadius  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    initRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	43	None	add
57	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [CE]  cannot  find  symbol  initRadius  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    initRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  initRadius	43	None	add
58	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initRadius(minDiff  /  2);  initialTrustRegionRadius  =  minDiff  /  2;  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initRadius(minDiff  /  2);  initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    initRadius(minDiff  /  2);  initialTrustRegionRadius  =  minDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol	43	None	add
59	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  *  2.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  *  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  requiredMinDiff  *  2.0;	  InitialTrustRegionRadius    =    neededMinDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	11	None	replace
60	[BUG]  [BUGGY]  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,    upperBound,    minDiff,    requiredMinDiff);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
61	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  3.0;  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,    upperBound,    minDiff,    requiredMinDiff);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
62	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,    upperBound,    minDiff,    requiredMinDiff);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
63	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  3;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]          AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  3;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  requiredMinDiff  /  3;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    InitialTrustRegionRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	72	None	replace
64	[BUG]  [BUGGY]  initRegionRadius  =  minDiff  /  2;  [CE]  cannot  find  symbol  initRegionRadius  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRegionRadius  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRegionRadius    =    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	45	None	replace
65	[BUG]  [BUGGY]  initialTrustRegius  =  minDiff  /  2;  [CE]  cannot  find  symbol  initialTrustRegius  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegius  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRegionRadius    =    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  initialTrustRegius	45	None	replace
66	[BUG]  [BUGGY]  this.initialTrustRegius  =  minDiff  /  2;  [CE]  cannot  find  symbol  initialTrustRegius  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	this.initialTrustRegius  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRegionRadius    =    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  initialTrustRegius	45	None	replace
67	[BUG]  [BUGGY]  initRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  initRegionRadius  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRegionRadius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	3	None	replace
68	[BUG]  [BUGGY]  this.initialTrustRegius  =  minDiff  /  2.0;  this.initialTrustRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  initialTrustRegius  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegius  =  minDiff  /  2.0;  this.initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	this.initialTrustRegius  =  minDiff  /  2.0;  this.initialTrustRegionRadius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  initialTrustRegius	3	None	replace
69	[BUG]  [BUGGY]  initialTrustRegius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  initialTrustRegius  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  initialTrustRegius	3	None	replace
70	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    initialTrustRegionRadius  =  requiredMinDiff  /  2.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	32	1	add
71	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    initialTrustRegionRadius  =  requiredMinDiff  /  2.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	32	1	add
72	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRegionRadius  =  requiredMinDiff  /  2.0;  [CE]  cannot  find  symbol  initRegionRadius  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    initRegionRadius  =  requiredMinDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	32	None	add
73	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius  =  requiredMinDiff  /  2.0;  [CE]  cannot  find  symbol  initRadius  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    initRadius  =  requiredMinDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol  initRadius	32	None	add
74	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initBoundRegionRadius  =  requiredMinDiff  /  2.0;  [CE]  cannot  find  symbol  initBoundRegionRadius  [FE]          AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initBoundRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    initBoundRegionRadius  =  requiredMinDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol  initBoundRegionRadius	32	None	add
75	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius  /  2.0;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    initRadius  /  2.0;	  	non-compiled	[CE]  not  a  statement	32	None	add
76	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    *    2;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	64	None	replace
77	[BUG]  [BUGGY]  bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [CE]  incompatible  types  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    *    2;    	non-compiled	[CE]  incompatible  types	64	None	replace
78	[BUG]  [BUGGY]  bMatrix  =  minDiff  *  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [CE]  incompatible  types  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  *  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  *  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    *    2;    	non-compiled	[CE]  incompatible  types	64	None	replace
79	[BUG]  [BUGGY]  initRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  initRegionRadius  [FE]          AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRegionRadius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRegionRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	36	None	replace
80	[BUG]  [BUGGY]  initRadius  /  2;  [CE]  not  a  statement  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRadius    /    2;    	non-compiled	[CE]  not  a  statement	48	None	replace
81	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initRadius  /  2;  [CE]  not  a  statement  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initRadius  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  *  2;  initRadius  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRadius    /    2;    	non-compiled	[CE]  not  a  statement	48	None	replace
82	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  boundDifference,  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  boundDifference,  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  boundDifference,  requiredMinDiff);	  double    minDiff    =    Math.min(requiredMinDiff,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	53	None	replace
83	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  *  2;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  requiredMinDiff  *  2;	  initialTrustRegionRadius    =    minDiff    *    2;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	30	None	replace
84	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  maxDiff  /  2.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  maxDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  maxDiff  /  2.0;	  InitialTrustRegionRadius    =    boundDifference    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	57	None	replace
85	[BUG]  [BUGGY]  double  minDiff  =  Math.min(lengthDifference,  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(lengthDifference,  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(lengthDifference,  requiredMinDiff);	  double    minDiff    =    Math.min(lengthDifference,    initialTrustRegionRadius);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	54	None	replace
86	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  lengthDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  lengthDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  lengthDifference);	  double    minDiff    =    Math.min(lengthDifference,    initialTrustRegionRadius);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	54	None	replace
87	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  minimumTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  minimumTrustRegionRadius);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  minimumTrustRegionRadius);	  double    minDiff    =    Math.min(minimumTrustRegionRadius,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	50	None	replace
88	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  requiredTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  requiredTrustRegionRadius);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  requiredTrustRegionRadius);	  double    minDiff    =    Math.min(minimumTrustRegionRadius,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	50	None	replace
89	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  minimalTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  minimalTrustRegionRadius);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  minimalTrustRegionRadius);	  double    minDiff    =    Math.min(minimumTrustRegionRadius,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	50	None	replace
90	[BUG]  [BUGGY]  bMatrix  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [CE]  incompatible  types  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;	  initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    *    2;    	non-compiled	[CE]  incompatible  types	78	None	replace
91	[BUG]  [BUGGY]  bMatrix  =  minDiff  *  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [CE]  incompatible  types  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  *  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  *  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;	  initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    *    2;    	non-compiled	[CE]  incompatible  types	78	None	replace
92	[BUG]  [BUGGY]  initRadius(minDiff  /  2);  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius(minDiff  /  2);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius(minDiff  /  2);	  initialTrustRegionRadius    =    minDiff    /    2;    initRadius(    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
93	[BUG]  [BUGGY]  initRadius(minDiff  /  2;  [CE]  ')'  expected  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius(minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius(minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRadius(    minDiff    /    2;    	non-compiled	[CE]  ')'  expected	47	None	replace
94	[BUG]  [BUGGY]  initRadius(minDiff  /  2  *  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius(minDiff  /  2  *  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius(minDiff  /  2  *  requiredMinDiff);	  initialTrustRegionRadius    =    minDiff    /    2;    initRadius(    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
95	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
96	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
97	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  InitialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  InitialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    InitialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	1	None	add
98	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  initRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  initRegionRadius  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  initRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    initRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	1	None	add
99	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  double  minDiff  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  double  minDiff  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    double  minDiff  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;	  	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	1	None	add
100	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius(minDiff  /  2.0);  initialTrustRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius(minDiff  /  2.0);  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius(minDiff  /  2.0);  initialTrustRegionRadius  =  minDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
101	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  requiredMinDiff,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  requiredMinDiff,  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  requiredMinDiff,  boundDifference);	  double    minDiff    =    Math.max(minDiff,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	82	None	replace
102	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  boundDifference[i]  -  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  boundDifference[i]  -  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  boundDifference[i]  -  requiredMinDiff);	  double    minDiff    =    Math.max(minDiff,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	82	None	replace
103	[BUG]  [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  upperBound[i]  -  minDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  upperBound[i]  -  minDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(requiredMinDiff,  upperBound[i]  -  minDiff);	  double    minDiff    =    Math.max(minDiff,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	82	None	replace
104	[BUG]  [BUGGY]  initRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  initRadius  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  initRadius	4	None	replace
105	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2.0;  this.initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	this.initialTrustRegionRadius  =  minDiff  /  2.0;  this.initialTrustRegionRadius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius    =    minDiff    /    2.0;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	replace
106	[BUG]  [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2.0;  this.initialTrustRegionRadius  =  minDiff  /  2.0;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2.0;  this.initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	this.initialTrustRegionRadius  =  minDiff  /  2.0;  this.initialTrustRegionRadius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius    =    minDiff    /    2.0;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	replace
107	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	this.initialTrustRegionRadius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius    =    minDiff    /    2.0;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	replace
108	[BUG]  [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2.0;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	this.initialTrustRegionRadius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius    =    minDiff    /    2.0;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	replace
109	[BUG]  [BUGGY]  initInitialTrustRegionRadius(minDiff  /  2.0);  [CE]  cannot  find  symbol  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initInitialTrustRegionRadius(minDiff  /  2.0);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initInitialTrustRegionRadius(minDiff  /  2.0);	  initialTrustRegionRadius    =    minDiff    /    2.0;    initInitialTrustRegionRadius(    minDiff    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
110	[BUG]  [BUGGY]  initialTrustRegionRadius(minDiff  /  2.0);  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius(minDiff  /  2.0);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius(minDiff  /  2.0);	  initialTrustRegionRadius    =    minDiff    /    2.0;    initInitialTrustRegionRadius(    minDiff    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
111	[BUG]  [BUGGY]  initInitialTrustRegionRadius(minDiff,  requiredMinDiff  /  2.0);  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initInitialTrustRegionRadius(minDiff,  requiredMinDiff  /  2.0);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initInitialTrustRegionRadius(minDiff,  requiredMinDiff  /  2.0);	  initialTrustRegionRadius    =    minDiff    /    2.0;    initInitialTrustRegionRadius(    minDiff    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
112	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initialTrustRegionRadius  =  minDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    minDiff    *    2;    initialTrustRegionRadius  =  minDiff  *  2;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	29	1	add
113	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initialTrustRegionRadius  =  minDiff  *  2;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initialTrustRegionRadius  =  minDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    *    2;    initialTrustRegionRadius  =  minDiff  *  2;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	29	1	add
114	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initRegionRadius  =  minDiff  *  2;  [CE]  cannot  find  symbol  initRegionRadius  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initRegionRadius  =  minDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    *    2;    initRegionRadius  =  minDiff  *  2;	  	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	29	None	add
115	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initRadius  =  minDiff  *  2;  [CE]  cannot  find  symbol  initRadius  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initRadius  =  minDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    *    2;    initRadius  =  minDiff  *  2;	  	non-compiled	[CE]  cannot  find  symbol  initRadius	29	None	add
116	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBoundRegionRadius  =  minDiff  *  2;  [CE]  cannot  find  symbol  initBoundRegionRadius  [FE]          AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBoundRegionRadius  =  minDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    *    2;    initBoundRegionRadius  =  minDiff  *  2;	  	non-compiled	[CE]  cannot  find  symbol  initBoundRegionRadius	29	None	add
117	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBoundRegionRadius(  minDiff  *  2;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBoundRegionRadius(  minDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    *    2;    initBoundRegionRadius(  minDiff  *  2;	  	non-compiled	[CE]  ')'  expected	29	None	add
118	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i]  -  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i]  -  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i]  -  requiredMinDiff);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	69	None	replace
119	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]  -  requiredMinDiff,  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]  -  requiredMinDiff,  boundDifference[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]  -  requiredMinDiff,  boundDifference[i]);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	69	None	replace
120	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound[i]  -  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound[i]  -  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound[i]  -  requiredMinDiff);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	69	None	replace
121	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  boundDifference[i],  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  boundDifference[i],  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  boundDifference[i],  requiredMinDiff);	  double    minDiff    =    Math.min(requiredMinDiff,    boundDifference[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	20	None	replace
122	[BUG]  [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(requiredMinDiff,  requiredMinDiff);	  double    minDiff    =    Math.max(requiredMinDiff,    initialTrustRegionRadius);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	16	None	replace
123	[BUG]  [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  requiredMinDiff  /  3.0);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  requiredMinDiff  /  3.0);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(requiredMinDiff,  requiredMinDiff  /  3.0);	  double    minDiff    =    Math.max(requiredMinDiff,    initialTrustRegionRadius);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	16	None	replace
124	[BUG]  [BUGGY]  initRadius  /  3.0;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius    /    3.0;    	non-compiled	[CE]  not  a  statement	38	None	replace
125	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius  /  2.0;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius  /  2.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius    /    3.0;    	non-compiled	[CE]  not  a  statement	38	None	replace
126	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException    =    maxDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	77	None	replace
127	[BUG]  [BUGGY]  bMatrix  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2;  [CE]  incompatible  types  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException    =    maxDiff    /    2;    	non-compiled	[CE]  incompatible  types	77	None	replace
128	[BUG]  [BUGGY]  bMatrix  =  minDiff  *  2;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2;  [CE]  incompatible  types  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  *  2;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  *  2;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException    =    maxDiff    /    2;    	non-compiled	[CE]  incompatible  types	77	None	replace
129	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff  /  3.0);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff  /  3.0);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff  /  3.0);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	8	None	replace
130	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff,  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff,  boundDifference);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	8	None	replace
131	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    /    2;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	76	None	replace
132	[BUG]  [BUGGY]  bMatrix  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2;  [CE]  incompatible  types  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    /    2;    	non-compiled	[CE]  incompatible  types	76	None	replace
133	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minimumMinDiff  /  2.0  *  requiredMinDiff;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  minimumMinDiff  /  2.0  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minimumMinDiff  /  2.0  *  requiredMinDiff;	  InitialTrustRegionRadius    =    minimumMinDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	12	None	replace
134	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  lowerBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(minDiff,  lowerBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  lowerBound);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    lowerBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	60	None	replace
135	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  lowerBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  lowerBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  lowerBound);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    lowerBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	60	None	replace
136	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  lowerBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  lowerBound[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  lowerBound[i]);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    lowerBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	79	None	replace
137	[BUG]  [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  lowerBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  lowerBound[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(requiredMinDiff,  lowerBound[i]);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    lowerBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	79	None	replace
138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  +  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  2  *  requiredMinDiff  +  1;	  initialTrustRegionRadius    =    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	98	3	replace
139	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  +  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  requiredMinDiff  +  1;	  initialTrustRegionRadius    =    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	98	3	replace
140	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  boundDifference;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  boundDifference;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  boundDifference;	  initialTrustRegionRadius    =    2    *    requiredMinDiff;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	98	None	replace
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  +  minDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  2  *  requiredMinDiff  +  minDiff;	  initialTrustRegionRadius    =    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	98	3	replace
142	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  +  minDiff;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  +  minDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  requiredMinDiff  +  minDiff;	  initialTrustRegionRadius    =    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	98	3	replace
143	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minimumTrustRegionRadius,  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(minimumTrustRegionRadius,  upperBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minimumTrustRegionRadius,  upperBound);	  double    minDiff    =    Math.min(minDiff,    upperBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	70	None	replace
144	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2.0;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	61	None	replace
145	[BUG]  [BUGGY]  bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2.0;  [CE]  incompatible  types  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    /    2.0;    	non-compiled	[CE]  incompatible  types	61	None	replace
146	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	61	None	replace
147	[BUG]  [BUGGY]  initRadius(minDiff  /  2.0;  [CE]  ')'  expected  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius(minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius(minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius(    minDiff    /    2.0;    	non-compiled	[CE]  ')'  expected	5	None	replace
148	[BUG]  [BUGGY]  initRadius(minDiff  /  2.0,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius(minDiff  /  2.0,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius(minDiff  /  2.0,  requiredMinDiff);	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius(    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
149	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i],  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i],  upperBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i],  upperBound);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i],    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	68	None	replace
150	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i],  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i],  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i],  requiredMinDiff);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i],    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	68	None	replace
151	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound[i],  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound[i],  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound[i],  boundDifference);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i],    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	68	None	replace
152	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound[i],  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound[i],  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  upperBound[i],  boundDifference);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i],    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	68	None	replace
153	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;	  initialTrustRegionRadius    =    minDiff    /    2;    InitialTrustRegionRadius    =    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	87	None	replace
154	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2  +  requiredMinDiff;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2  +  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minDiff  /  2  +  requiredMinDiff;	  initialTrustRegionRadius    =    minDiff    /    2;    InitialTrustRegionRadius    =    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	87	None	replace
155	[BUG]  [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  minDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  minDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(requiredMinDiff,  minDiff);	  double    minDiff    =    Math.max(minDiff,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	74	None	replace
156	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  minDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  minDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  minDiff);	  double    minDiff    =    Math.max(minDiff,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	74	None	replace
157	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	95	1	add
158	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	95	1	add
159	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initRegionRadius  =  2  *  requiredMinDiff  /  2;  [CE]  cannot  find  symbol  initRegionRadius  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initRegionRadius  =  2  *  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    initRegionRadius  =  2  *  requiredMinDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	95	None	add
160	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initRadius  =  2  *  requiredMinDiff  /  2;  [CE]  cannot  find  symbol  initRadius  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initRadius  =  2  *  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    initRadius  =  2  *  requiredMinDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  initRadius	95	None	add
161	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  InitialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]          AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  InitialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    InitialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	95	None	add
162	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initBoundRegionRadius  =  2  *  requiredMinDiff  /  2;  [CE]  cannot  find  symbol  initBoundRegionRadius  [FE]            AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initBoundRegionRadius  =  2  *  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    initBoundRegionRadius  =  2  *  requiredMinDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  initBoundRegionRadius	95	None	add
163	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  boundDifference[i],  initialTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  boundDifference[i],  initialTrustRegionRadius);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  boundDifference[i],  initialTrustRegionRadius);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    boundDifference[i],    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	22	None	replace
164	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i],  requiredMinDiff  /  3.0);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i],  requiredMinDiff  /  3.0);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i],  requiredMinDiff  /  3.0);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    boundDifference[i],    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	22	None	replace
165	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff,  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff,  boundDifference[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff,  boundDifference[i]);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    boundDifference[i],    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	22	None	replace
166	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  lowerBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(minDiff,  lowerBound[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  lowerBound[i]);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    lowerBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	replace
167	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  lowerBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  lowerBound[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  lowerBound[i]);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    lowerBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	replace
168	[BUG]  [BUGGY]  double  minDiff  =  Math.min(length,  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(length,  boundDifference[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(length,  boundDifference[i]);	  double    minDiff    =    Math.min(minDiff,    boundDifference[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	21	None	replace
169	[BUG]  [BUGGY]  double  minDiff  =  Math.min(lengthDifference,  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(lengthDifference,  boundDifference[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(lengthDifference,  boundDifference[i]);	  double    minDiff    =    Math.min(minDiff,    boundDifference[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	21	None	replace
170	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initialTrustRegionRadius  =  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    2    *    requiredMinDiff;    initialTrustRegionRadius  =  2  *  requiredMinDiff;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	97	1	add
171	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initialTrustRegionRadius  =  2  *  requiredMinDiff;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initialTrustRegionRadius  =  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff;    initialTrustRegionRadius  =  2  *  requiredMinDiff;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	97	1	add
172	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initRegionRadius  =  2  *  requiredMinDiff;  [CE]  cannot  find  symbol  initRegionRadius  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initRegionRadius  =  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff;    initRegionRadius  =  2  *  requiredMinDiff;	  	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	97	None	add
173	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initRadius  =  2  *  requiredMinDiff;  [CE]  cannot  find  symbol  initRadius  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initRadius  =  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff;    initRadius  =  2  *  requiredMinDiff;	  	non-compiled	[CE]  cannot  find  symbol  initRadius	97	None	add
174	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initInterpolationPoints(dimension,  upperBound,  minDiff);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initInterpolationPoints(dimension,  upperBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff;    initInterpolationPoints(dimension,  upperBound,  minDiff);	  	non-compiled	[CE]  cannot  find  symbol	97	None	add
175	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initInterpolationPoints();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initInterpolationPoints();  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff;    initInterpolationPoints();	  	non-compiled	[CE]  cannot  find  symbol	97	None	add
176	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  initialTrustRegionRadius  /  2.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  initialTrustRegionRadius  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  initialTrustRegionRadius  /  2.0;	  InitialTrustRegionRadius    =    initialTrustRegionRadius    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	85	None	replace
177	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  maxDiff  /  3.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  maxDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  maxDiff  /  3.0;	  InitialTrustRegionRadius    =    initialTrustRegionRadius    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	85	None	replace
178	[BUG]  [BUGGY]  initInitialTrustRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  initInitialTrustRegionRadius  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initInitialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initInitialTrustRegionRadius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initInitialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  initInitialTrustRegionRadius	92	None	replace
179	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i],  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i],  boundDifference[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound[i],  boundDifference[i]);	  double    minDiff    =    Math.max(minDiff,    upperBound[i],    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	52	None	replace
180	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i],  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i],  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound[i],  boundDifference);	  double    minDiff    =    Math.max(minDiff,    upperBound[i],    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	52	None	replace
181	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  lowerBound[i],  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  lowerBound[i],  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  lowerBound[i],  requiredMinDiff);	  double    minDiff    =    Math.max(minDiff,    upperBound[i],    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	52	None	replace
182	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  requiredMinDiff[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  requiredMinDiff[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  requiredMinDiff[i]);	  double    minDiff    =    Math.max(requiredMinDiff,    boundDifference[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	14	None	replace
183	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  2  *  initialTrustRegionRadius;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  2  *  initialTrustRegionRadius;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  requiredMinDiff  /  2  *  initialTrustRegionRadius;	  InitialTrustRegionRadius    =    requiredMinDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	31	None	replace
184	[BUG]  [BUGGY]  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initBound(dimension,    upperBound,    minDiff);    initialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
185	[BUG]  [BUGGY]  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initBound(dimension,    upperBound,    minDiff);    initialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
186	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2  *  maxDiff;  [CE]  cannot  find  symbol  maxDiff  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2  *  maxDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2  *  maxDiff;	  initialTrustRegionRadius    =    maxDiff    /    2    *    requiredMinDiff;    	non-compiled	[CE]  cannot  find  symbol  maxDiff	67	None	replace
187	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  initialTrustRegionRadius  /  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  initialTrustRegionRadius  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	BOBYQAOptimizer$PathIsExploredException  =  initialTrustRegionRadius  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException    =    initialTrustRegionRadius    /    2;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	75	None	replace
188	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  minDiff  /  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	BOBYQAOptimizer$PathIsExploredException  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException    =    initialTrustRegionRadius    /    2;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	75	None	replace
189	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  initialTrustRegionRadius  *  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  initialTrustRegionRadius  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	BOBYQAOptimizer$PathIsExploredException  =  initialTrustRegionRadius  *  2;	  initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException    =    initialTrustRegionRadius    /    2;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	75	None	replace
190	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  2.0  +  minDiff;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  2.0  +  minDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  requiredMinDiff  /  2.0  +  minDiff;	  InitialTrustRegionRadius    =    minDiff    /    2.0    +    requiredMinDiff;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	58	None	replace
191	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2.0  *  requiredMinDiff;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2.0  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minDiff  /  2.0  *  requiredMinDiff;	  InitialTrustRegionRadius    =    minDiff    /    2.0    +    requiredMinDiff;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	58	None	replace
192	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minDiff  *  2.0  +  requiredMinDiff;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  minDiff  *  2.0  +  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minDiff  *  2.0  +  requiredMinDiff;	  InitialTrustRegionRadius    =    minDiff    /    2.0    +    requiredMinDiff;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	58	None	replace
193	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2.0;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    maxDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	62	None	replace
194	[BUG]  [BUGGY]  bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2.0;  [CE]  incompatible  types  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    maxDiff    /    2.0;    	non-compiled	[CE]  incompatible  types	62	None	replace
195	[BUG]  [BUGGY]  bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  *  2.0;  [CE]  incompatible  types  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  *  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  *  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    maxDiff    /    2.0;    	non-compiled	[CE]  incompatible  types	62	None	replace
196	[BUG]  [BUGGY]  double  minDiff  =  Math.max(lengthDifference,  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(lengthDifference,  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(lengthDifference,  requiredMinDiff);	  double    minDiff    =    Math.max(requiredMinDiff,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	7	None	replace
197	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  lengthDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  lengthDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  lengthDifference);	  double    minDiff    =    Math.max(lengthDifference,    initialTrustRegionRadius);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	84	None	replace
198	[BUG]  [BUGGY]  initBound(dimension,  lowerBound,  minDiff);  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initBound(dimension,  lowerBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initBound(dimension,  lowerBound,  minDiff);	  initialTrustRegionRadius    =    minDiff    /    2;    initBound(dimension,    lowerBound,    minDiff);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
199	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initBound(dimension,  lowerBound,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initBound(dimension,  lowerBound,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  2;  initBound(dimension,  lowerBound,  requiredMinDiff);	  initialTrustRegionRadius    =    minDiff    /    2;    initBound(dimension,    lowerBound,    minDiff);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
200	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBound(dimension,  lowerBound,  minDiff);  [CE]  cannot  find  symbol  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBound(dimension,  lowerBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  *  2;  initBound(dimension,  lowerBound,  minDiff);	  initialTrustRegionRadius    =    minDiff    /    2;    initBound(dimension,    lowerBound,    minDiff);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
201	[BUG]  [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  requiredMinDiff,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  requiredMinDiff,  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(requiredMinDiff,  requiredMinDiff,  boundDifference);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    requiredMinDiff,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	17	None	replace
202	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  requiredMinDiff,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  requiredMinDiff,  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  requiredMinDiff,  boundDifference);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    requiredMinDiff,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	17	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  2  *  requiredMinDiff  /  1;	  initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    	compilable	  [FE]  AssertionError  	96	3	replace
204	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  requiredMinDiff  /  1;	  initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    	compilable	  [FE]  AssertionError  	96	3	replace
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2  +  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2  +  1;	  initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    	compilable	  [FE]  AssertionError  	96	3	replace
206	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2  +  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2  +  1;	  initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    	compilable	  [FE]  AssertionError  	96	3	replace
207	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  3;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  2  *  requiredMinDiff  /  3;	  initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    	compilable	  [FE]  AssertionError  	96	3	replace
208	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  3;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  3;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  requiredMinDiff  /  3;	  initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    	compilable	  [FE]  AssertionError  	96	3	replace
209	[BUG]  [BUGGY]  double  minDiff  =  Math.min(lengthDifference,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(lengthDifference,  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(lengthDifference,  boundDifference);	  double    minDiff    =    Math.min(minDiff,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	55	None	replace
210	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff  /  2.0);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff  /  2.0);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff  /  2.0);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    requiredMinDiff    /    3.0);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	19	None	replace
211	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  requiredMinDiff  /  3.0);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  requiredMinDiff  /  3.0);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  requiredMinDiff  /  3.0);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    requiredMinDiff    /    3.0);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	19	None	replace
212	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  lowerBound[i],  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  lowerBound[i],  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  lowerBound[i],  requiredMinDiff);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound[i],    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	81	None	replace
213	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i],  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i],  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i],  boundDifference);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound[i],    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	81	None	replace
214	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  *  requiredMinDiff,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  *  requiredMinDiff,  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound[i]  *  requiredMinDiff,  boundDifference);	  double    minDiff    =    Math.max(minDiff,    upperBound[i]    *    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	83	None	replace
215	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  lowerBound[i]  *  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  lowerBound[i]  *  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  lowerBound[i]  *  requiredMinDiff);	  double    minDiff    =    Math.max(minDiff,    upperBound[i]    *    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	83	None	replace
216	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound[i]  *  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound[i]  *  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  upperBound[i]  *  requiredMinDiff);	  double    minDiff    =    Math.max(minDiff,    upperBound[i]    *    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	83	None	replace
217	[BUG]  [BUGGY]  bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;  [CE]  incompatible  types  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    *    2.0;    	non-compiled	[CE]  incompatible  types	65	None	replace
218	[BUG]  [BUGGY]  bMatrix  =  minDiff  *  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;  [CE]  incompatible  types  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  *  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  *  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    *    2.0;    	non-compiled	[CE]  incompatible  types	65	None	replace
219	[BUG]  [BUGGY]  initRadius  /  2.0;  [CE]  not  a  statement  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius    /    2.0;    	non-compiled	[CE]  not  a  statement	6	None	replace
220	[BUG]  [BUGGY]  initInitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  initInitialTrustRegionRadius  [FE]        AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initInitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initInitialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initInitialTrustRegionRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  initInitialTrustRegionRadius	71	None	replace
221	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  boundDifference[i]  -  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  boundDifference[i]  -  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  boundDifference[i]  -  requiredMinDiff);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	80	None	replace
222	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  lowerBound[i]  -  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  lowerBound[i]  -  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  lowerBound[i]  -  requiredMinDiff);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	80	None	replace
223	[BUG]  [BUGGY]  initRadius  =  minDiff  /  2;  [CE]  cannot  find  symbol  initRadius  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRadius    =    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  initRadius	46	None	replace
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  minDiff  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	minDiff  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	46	3	replace
225	[BUG]  [BUGGY]  minDiff  =  minDiff  /  2;  [FE]  AssertionError  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  minDiff  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	minDiff  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	46	3	replace
226	[BUG]  [BUGGY]  initBounds();  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initBounds();  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initBounds();	  initialTrustRegionRadius    =    minDiff    /    2;    initBounds();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
227	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2.0  +  initialTrustRegionRadius;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2.0  +  initialTrustRegionRadius;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minDiff  /  2.0  +  initialTrustRegionRadius;	  InitialTrustRegionRadius    =    minDiff    /    2.0    +    requiredMinDiff;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	58	None	replace
228	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2.0  +  upperBound;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2.0  +  upperBound;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minDiff  /  2.0  +  upperBound;	  InitialTrustRegionRadius    =    minDiff    /    2.0    +    requiredMinDiff;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	58	None	replace
229	[BUG]  [BUGGY]  initInitialTrustRegionRadius  =  maxDiff  /  2.0;  [CE]  cannot  find  symbol  initInitialTrustRegionRadius  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initInitialTrustRegionRadius  =  maxDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initInitialTrustRegionRadius  =  maxDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initInitialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  initInitialTrustRegionRadius	92	None	replace
230	[BUG]  [BUGGY]  dsqCrvmin  =  requiredMinDiff  /  3.0;  initRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  dsqCrvmin  [FE]            AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  dsqCrvmin  =  requiredMinDiff  /  3.0;  initRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	dsqCrvmin  =  requiredMinDiff  /  3.0;  initRadius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	37	None	replace
231	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  initRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  initRadius  [FE]              AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  initRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  3.0;  initRadius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  initRadius	37	None	replace
232	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2  +  1;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2  +  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minDiff  /  2  +  1;	  initialTrustRegionRadius    =    minDiff    /    2;    InitialTrustRegionRadius    =    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	87	None	replace
233	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  boundDifference,  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  boundDifference,  upperBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  boundDifference,  upperBound);	  double    minDiff    =    Math.min(requiredMinDiff,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	53	None	replace
234	[BUG]  [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2;  this.initialRegionRadius  =  minDiff  /  2;  [CE]  cannot  find  symbol  initialRegionRadius  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2;  this.initialRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	this.initialTrustRegionRadius  =  minDiff  /  2;  this.initialRegionRadius  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRegionRadius    =    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  initialRegionRadius	45	None	replace
235	[BUG]  [BUGGY]  bMatrix  =  minDiff  /  2;  bMatrix  =  minDiff  /  2;  [CE]  incompatible  types  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  /  2;  bMatrix  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  /  2;  bMatrix  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRegionRadius    =    minDiff    /    2;    	non-compiled	[CE]  incompatible  types	45	None	replace
236	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  if(initialTrustRegionRadius  >=  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    if(initialTrustRegionRadius  >=  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	add
237	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  if(initialTrustRegionRadius  >=  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  if(initialTrustRegionRadius  >=  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    if(initialTrustRegionRadius  >=  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	add
238	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  if(initialTrustRegionRadius  <  minDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    if(initialTrustRegionRadius  <  minDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	add
239	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  if(initialTrustRegionRadius  <  minDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  if(initialTrustRegionRadius  <  minDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    if(initialTrustRegionRadius  <  minDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	add
240	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	add
241	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	add
242	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  boundDifference;  initBound(dimension,  upperBound,  minDiff);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  boundDifference;  initBound(dimension,  upperBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  2  *  boundDifference;  initBound(dimension,  upperBound,  minDiff);	  initialTrustRegionRadius    =    minDiff    /    2;    initBound(dimension,    upperBound,    minDiff);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	88	None	replace
243	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i]  -  lowerBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i]  -  lowerBound[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i]  -  lowerBound[i]);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	80	None	replace
244	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound[i],  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound[i],  upperBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound[i],  upperBound);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i],    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	68	None	replace
245	[BUG]  [BUGGY]  initBound(dimension,  lowerBound,  minDiff);  initialTrustRegionRadius  =  maxDiff  /  2.0;  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initBound(dimension,  lowerBound,  minDiff);  initialTrustRegionRadius  =  maxDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initBound(dimension,  lowerBound,  minDiff);  initialTrustRegionRadius  =  maxDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initBound(dimension,    lowerBound,    minDiff);    initialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
246	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    *    2.0;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	65	None	replace
247	[BUG]  [BUGGY]  initialTrustRegionRadius  =  boundDifference  /  2  *  requiredMinDiff;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  boundDifference  /  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  boundDifference  /  2  *  requiredMinDiff;	  initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	28	None	replace
248	[BUG]  [BUGGY]  double  minDiff  =  Math.min(lowerBound,  initialTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(lowerBound,  initialTrustRegionRadius);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(lowerBound,  initialTrustRegionRadius);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    lowerBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	60	None	replace
249	[BUG]  [BUGGY]  initialTrustRegionRadius  =  lowerBound  /  3.0;  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  lowerBound  /  3.0;  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  lowerBound  /  3.0;  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,    upperBound,    minDiff,    requiredMinDiff);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	39	None	replace
250	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  initBound(dimension,  lowerBound,  minDiff,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  initBound(dimension,  lowerBound,  minDiff,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  3.0;  initBound(dimension,  lowerBound,  minDiff,  requiredMinDiff);	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,    upperBound,    minDiff,    requiredMinDiff);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
251	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2  *  upperBound;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2  *  upperBound;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2  *  upperBound;	  initialTrustRegionRadius    =    requiredMinDiff    /    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	26	None	replace
252	[BUG]  [BUGGY]  initialTrustRegionRadius  =  maxDiff  /  2;  [CE]  cannot  find  symbol  maxDiff  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  maxDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  maxDiff  /  2;	  initialTrustRegionRadius    =    requiredMinDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  maxDiff	26	None	replace
253	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  boundDifference  /  2;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  boundDifference  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  boundDifference  /  2;	  initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	96	None	replace
254	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  2  *  minDiff  /  2;	  initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    	compilable	  [FE]  AssertionError  	96	3	replace
255	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  minDiff  /  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  minDiff  /  2;	  initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    	compilable	  [FE]  AssertionError  	96	3	replace
256	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  maxDiff  /  2;  [CE]  cannot  find  symbol  maxDiff  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  maxDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  maxDiff  /  2;	  initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  maxDiff	96	None	replace
257	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  upperBound  /  2;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]          AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  upperBound  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  upperBound  /  2;	  initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	96	None	replace
258	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  upperBound[i]  -  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  upperBound[i]  -  boundDifference[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  upperBound[i]  -  boundDifference[i]);	  double    minDiff    =    Math.min(requiredMinDiff,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	41	None	replace
259	[BUG]  [BUGGY]  double  minDiff  =  Math.min(length,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(length,  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(length,  boundDifference);	  double    minDiff    =    Math.min(minDiff,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	55	None	replace
260	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  initialTrustRegionRadius  /  2;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  initialTrustRegionRadius  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  initialTrustRegionRadius  /  2;	  InitialTrustRegionRadius    =    requiredMinDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	31	None	replace
261	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius(requiredMinDiff  /  2.0);  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius(requiredMinDiff  /  2.0);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius(requiredMinDiff  /  2.0);	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius(minDiff    /    2.0);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
262	[BUG]  [BUGGY]  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  maxDiff  /  2.0;  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  maxDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  maxDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initBound(dimension,    upperBound,    minDiff);    initialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
263	[BUG]  [BUGGY]  double  minDiff  =  Math.max(length,  initialTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(length,  initialTrustRegionRadius);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(length,  initialTrustRegionRadius);	  double    minDiff    =    Math.max(minDiff,    initialTrustRegionRadius);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	24	None	replace
264	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initInitialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [CE]  cannot  find  symbol  initInitialTrustRegionRadius  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initInitialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    initInitialTrustRegionRadius  =  requiredMinDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol  initInitialTrustRegionRadius	32	None	add
265	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  InitialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  InitialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    InitialTrustRegionRadius  =  requiredMinDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	32	None	add
266	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initInitialTrustRegionRadius(  boundDiff  /  2.0);  [CE]  cannot  find  symbol  boundDiff  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initInitialTrustRegionRadius(  boundDiff  /  2.0);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    initInitialTrustRegionRadius(  boundDiff  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol  boundDiff	32	None	add
267	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minimumMinDiff  /  2.0  +  1;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  minimumMinDiff  /  2.0  +  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minimumMinDiff  /  2.0  +  1;	  InitialTrustRegionRadius    =    minimumMinDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	12	None	replace
268	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  2.0  +  1;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  2.0  +  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  requiredMinDiff  /  2.0  +  1;	  InitialTrustRegionRadius    =    neededMinDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	11	None	replace
269	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]  -  lowerBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]  -  lowerBound[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]  -  lowerBound[i]);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	69	None	replace
270	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]  -  lowerBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]  -  lowerBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]  -  lowerBound);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	69	None	replace
271	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i],  boundDifference[i]  -  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i],  boundDifference[i]  -  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i],  boundDifference[i]  -  requiredMinDiff);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	69	None	replace
272	[BUG]  [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  neededMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  neededMinDiff  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  neededMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  neededMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	non-compiled	[CE]  cannot  find  symbol  neededMinDiff	34	None	add
273	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.1;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.1;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	34	1	add
274	[BUG]  [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.1;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.1;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.1;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	34	1	add
275	[BUG]  [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  neededMinDiff  /  3.0;  [CE]  cannot  find  symbol  neededMinDiff  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  neededMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  neededMinDiff  /  3.0;	  	non-compiled	[CE]  cannot  find  symbol  neededMinDiff	34	None	add
276	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  upperBound;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  upperBound;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  upperBound;	  initialTrustRegionRadius    =    2    *    requiredMinDiff;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	98	None	replace
277	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  lowerBound;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  lowerBound;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  lowerBound;	  initialTrustRegionRadius    =    2    *    requiredMinDiff;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	98	None	replace
278	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2;  this.initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	this.initialTrustRegionRadius  =  minDiff  /  2;  this.initialTrustRegionRadius  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRadius    =    minDiff    /    2;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	46	1	replace
279	[BUG]  [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2;  this.initialTrustRegionRadius  =  minDiff  /  2;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2;  this.initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	this.initialTrustRegionRadius  =  minDiff  /  2;  this.initialTrustRegionRadius  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRadius    =    minDiff    /    2;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	46	1	replace
280	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initInitialTrustRegionRadius  =  2  *  requiredMinDiff;  [CE]  cannot  find  symbol  initInitialTrustRegionRadius  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initInitialTrustRegionRadius  =  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff;    initInitialTrustRegionRadius  =  2  *  requiredMinDiff;	  	non-compiled	[CE]  cannot  find  symbol  initInitialTrustRegionRadius	97	None	add
281	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initBound(dimension,  upperBound,  lowerBound,  minDiff);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initBound(dimension,  upperBound,  lowerBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff;    initBound(dimension,  upperBound,  lowerBound,  minDiff);	  	non-compiled	[CE]  cannot  find  symbol	97	None	add
282	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initBounds(dimension,  upperBound,  lowerBound,  minDiff);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initBounds(dimension,  upperBound,  lowerBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff;    initBounds(dimension,  upperBound,  lowerBound,  minDiff);	  	non-compiled	[CE]  cannot  find  symbol	97	None	add
283	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initInitialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [CE]  cannot  find  symbol  initInitialTrustRegionRadius  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initInitialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    initInitialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;	  	non-compiled	[CE]  cannot  find  symbol  initInitialTrustRegionRadius	27	None	add
284	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  InitialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  InitialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    InitialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;	  	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	27	None	add
285	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initBound(dimension,  upperBound,  lowerBound,  minDiff);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initBound(dimension,  upperBound,  lowerBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    initBound(dimension,  upperBound,  lowerBound,  minDiff);	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
286	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound[i]  -  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound[i]  -  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  upperBound[i]  -  requiredMinDiff);	  double    minDiff    =    Math.min(minDiff,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	40	None	replace
287	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound[i]  -  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound[i]  -  boundDifference[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  upperBound[i]  -  boundDifference[i]);	  double    minDiff    =    Math.min(minDiff,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	40	None	replace
288	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initInitialTrustRegionRadius  =  minDiff  *  2;  [CE]  cannot  find  symbol  initInitialTrustRegionRadius  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initInitialTrustRegionRadius  =  minDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    *    2;    initInitialTrustRegionRadius  =  minDiff  *  2;	  	non-compiled	[CE]  cannot  find  symbol  initInitialTrustRegionRadius	29	None	add
289	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBound(dimension,  upperBound,  minDiff);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBound(dimension,  upperBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    *    2;    initBound(dimension,  upperBound,  minDiff);	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
290	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBound(dimension,  lowerBound,  upperBound,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBound(dimension,  lowerBound,  upperBound,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    *    2;    initBound(dimension,  lowerBound,  upperBound,  requiredMinDiff);	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
291	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff,  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff,  upperBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff,  upperBound);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    requiredMinDiff,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	17	None	replace
292	[BUG]  [BUGGY]  double  minDiff  =  Math.max(lengthDifference,  requiredMinDiff,  requiredTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(lengthDifference,  requiredMinDiff,  requiredTrustRegionRadius);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(lengthDifference,  requiredMinDiff,  requiredTrustRegionRadius);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    requiredMinDiff,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	17	None	replace
293	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  upperBound;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  upperBound;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  2  *  upperBound;	  initialTrustRegionRadius    =    minDiff    /    2;    initBounds();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	89	None	replace
294	[BUG]  [BUGGY]  double  minDiff  =  Math.max(length,  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(length,  boundDifference[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(length,  boundDifference[i]);	  double    minDiff    =    Math.max(minDiff,    boundDifference[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	15	None	replace
295	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  lowerBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  lowerBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  lowerBound);	  double    minDiff    =    Math.max(minDiff,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	82	None	replace
296	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  lowerBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  lowerBound[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  lowerBound[i]);	  double    minDiff    =    Math.max(minDiff,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	82	None	replace
297	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  lowerBound[i]  -  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  lowerBound[i]  -  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  lowerBound[i]  -  requiredMinDiff);	  double    minDiff    =    Math.max(minDiff,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	82	None	replace
298	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius(minDiff  /  2.0;  [CE]  ')'  expected  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius(minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initRadius(minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius(    minDiff    /    2.0;    	non-compiled	[CE]  ')'  expected	5	None	replace
299	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  boundDifference[i],  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(minDiff,  boundDifference[i],  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  boundDifference[i],  requiredMinDiff);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    boundDifference[i],    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	22	None	replace
300	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  +  1;  initBound(dimension,  lowerBound,  minDiff);  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  +  1;  initBound(dimension,  lowerBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  2  +  1;  initBound(dimension,  lowerBound,  minDiff);	  initialTrustRegionRadius    =    minDiff    /    2;    initBound(dimension,    lowerBound,    minDiff);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
301	[BUG]  [BUGGY]  bMatrix  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  *  2;  [CE]  incompatible  types  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  *  2;	  initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException    =    maxDiff    /    2;    	non-compiled	[CE]  incompatible  types	77	None	replace
302	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  /  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  /  requiredMinDiff);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound[i]  /  requiredMinDiff);	  double    minDiff    =    Math.max(minDiff,    upperBound[i]    *    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	83	None	replace
303	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  >=  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    if(initialTrustRegionRadius  >=  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
304	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  >=  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  >=  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    if(initialTrustRegionRadius  >=  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
305	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  <  minDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    if(initialTrustRegionRadius  <  minDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
306	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  <  minDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  <  minDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    if(initialTrustRegionRadius  <  minDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
307	[BUG]  [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2.0;  this.initialRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  initialRegionRadius  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2.0;  this.initialRegionRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	this.initialTrustRegionRadius  =  minDiff  /  2.0;  this.initialRegionRadius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  initialRegionRadius	3	None	replace
308	[BUG]  [BUGGY]  bMatrix  =  minDiff  /  2.0;  bMatrix  =  minDiff  /  2.0;  [CE]  incompatible  types  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  bMatrix  =  minDiff  /  2.0;  bMatrix  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	bMatrix  =  minDiff  /  2.0;  bMatrix  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  incompatible  types	3	None	replace
309	[BUG]  [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2.0;  this.initialRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  initialRadius  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2.0;  this.initialRadius  =  minDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	this.initialTrustRegionRadius  =  minDiff  /  2.0;  this.initialRadius  =  minDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  initialRadius	4	None	replace
310	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initInitialTrustRegionRadius  =  requiredMinDiff  /  2;  [CE]  cannot  find  symbol  initInitialTrustRegionRadius  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initInitialTrustRegionRadius  =  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2;    initInitialTrustRegionRadius  =  requiredMinDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  initInitialTrustRegionRadius	25	None	add
311	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initBound(dimension,  upperBound,  minDiff);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initBound(dimension,  upperBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2;    initBound(dimension,  upperBound,  minDiff);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
312	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i],  lowerBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i],  lowerBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound[i],  lowerBound);	  double    minDiff    =    Math.max(minDiff,    upperBound[i],    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	52	None	replace
313	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  boundDifference  *  2.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  boundDifference  *  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  boundDifference  *  2.0;	  InitialTrustRegionRadius    =    boundDifference    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	57	None	replace
314	[BUG]  [BUGGY]  InitInitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  InitInitialTrustRegionRadius  [FE]        AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitInitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitInitialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initInitialTrustRegionRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  InitInitialTrustRegionRadius	71	None	replace
315	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    *    2;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	64	None	replace
316	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
317	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initBound(dimension,  upperBound,  minDiff,  upperBound,  i);  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [CE]  cannot  find  symbol  i  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initBound(dimension,  upperBound,  minDiff,  upperBound,  i);  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    initBound(dimension,  upperBound,  minDiff,  upperBound,  i);  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;	  	non-compiled	[CE]  cannot  find  symbol  i	27	None	add
318	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initBound(dimension,  upperBound,  minDiff);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  initBound(dimension,  upperBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    initBound(dimension,  upperBound,  minDiff);	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
319	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  +  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  +  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  +  2;	  initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException    =    super.initialTrustRegionRadius    /    2;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	76	None	replace
320	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i],  lowerBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i],  lowerBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i],  lowerBound);	  double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound[i],    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	81	None	replace
321	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
322	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
323	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  >  0)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    if(initialTrustRegionRadius  >  0)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
324	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  >  0)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  >  0)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    if(initialTrustRegionRadius  >  0)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
325	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  InitialTrustRegionRadius  =  minDiff  /  2.0;  }  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;  if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  InitialTrustRegionRadius  =  minDiff  /  2.0;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2.0;        initialTrustRegionRadius    =    minDiff    /    2.0;    if(initialTrustRegionRadius  <  requiredMinDiff)  {  initialTrustRegionRadius  =  minDiff  /  2.0;  InitialTrustRegionRadius  =  minDiff  /  2.0;  }	  	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	1	None	add
326	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2  *  initialTrustRegionRadius;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2  *  initialTrustRegionRadius;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minDiff  /  2  *  initialTrustRegionRadius;	  initialTrustRegionRadius    =    maxDiff    /    2    *    requiredMinDiff;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	67	None	replace
327	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  boundDifference  /  2.0  +  requiredMinDiff;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitialTrustRegionRadius  =  boundDifference  /  2.0  +  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  boundDifference  /  2.0  +  requiredMinDiff;	  InitialTrustRegionRadius    =    minDiff    /    2.0    +    requiredMinDiff;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	58	None	replace
328	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	this.initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initInitialTrustRegionRadius    =    requiredMinDiff    /    3.0;    	compilable	  [FE]  AssertionError  	71	3	replace
329	[BUG]  [BUGGY]  this.initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	this.initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initInitialTrustRegionRadius    =    requiredMinDiff    /    3.0;    	compilable	  [FE]  AssertionError  	71	3	replace
330	[BUG]  [BUGGY]  double  minDiff  =  Math.max(lengthDifference,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(lengthDifference,  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(lengthDifference,  boundDifference);	  double    minDiff    =    Math.max(minDiff,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	9	None	replace
331	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound[i]  +  1);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound[i]  +  1);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  upperBound[i]  +  1);	  double    minDiff    =    Math.min(minDiff,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	40	None	replace
332	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  double  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    double  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	compilable	  [FE]  AssertionError  	34	3	add
333	[BUG]  [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  double  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [FE]  AssertionError  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  double  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    double  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	compilable	  [FE]  AssertionError  	34	3	add
334	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	34	1	add
335	[BUG]  [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        requiredMinDiff        /        3.0;        initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	34	1	add
336	[BUG]  [BUGGY]  initRadius(minDiff,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius(minDiff,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius(minDiff,  requiredMinDiff);	  initialTrustRegionRadius    =    minDiff    /    2;    initRadius(    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
337	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  double  initialTrustRegionRadius  =  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    2    *    requiredMinDiff;    double  initialTrustRegionRadius  =  2  *  requiredMinDiff;	  	compilable	  [FE]  AssertionError  	97	3	add
338	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  double  initialTrustRegionRadius  =  2  *  requiredMinDiff;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  double  initialTrustRegionRadius  =  2  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff;    double  initialTrustRegionRadius  =  2  *  requiredMinDiff;	  	compilable	  [FE]  AssertionError  	97	3	add
339	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initInitialTrustRegionRadius();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initInitialTrustRegionRadius();  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff;    initInitialTrustRegionRadius();	  	non-compiled	[CE]  cannot  find  symbol	97	None	add
340	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initBound(dimension,  upperBound,  minDiff);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  initBound(dimension,  upperBound,  minDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff;    initBound(dimension,  upperBound,  minDiff);	  	non-compiled	[CE]  cannot  find  symbol	97	None	add
341	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	this.initialTrustRegionRadius  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	45	1	replace
342	[BUG]  [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	this.initialTrustRegionRadius  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	45	1	replace
343	[BUG]  [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  upperBound[i]  -  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  upperBound[i]  -  boundDifference[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(requiredMinDiff,  upperBound[i]  -  boundDifference[i]);	  double    minDiff    =    Math.max(requiredMinDiff,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	13	None	replace
344	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minimumTrustRegionRadius,  upperBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(minimumTrustRegionRadius,  upperBound[i]);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minimumTrustRegionRadius,  upperBound[i]);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    lowerBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	replace
345	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  +  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  minDiff  /  2  +  1;	  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	44	3	replace
346	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  +  1;  [FE]  AssertionError  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  +  1;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  2  +  1;	  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	44	3	replace
347	[BUG]  [BUGGY]  double  minDiff  =  Math.max(length,  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(length,  upperBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(length,  upperBound);	  double    minDiff    =    Math.max(minDiff,    upperBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	59	None	replace
348	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	double  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRegionRadius    =    requiredMinDiff    /    3.0;    	compilable	  [FE]  AssertionError  	36	3	replace
349	[BUG]  [BUGGY]  double  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRegionRadius    =    requiredMinDiff    /    3.0;    	compilable	  [FE]  AssertionError  	36	3	replace
350	[BUG]  [BUGGY]  InitRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  InitRegionRadius  [FE]            AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  InitRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitRegionRadius  =  requiredMinDiff  /  3.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRegionRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  InitRegionRadius	36	None	replace
351	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  1  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  1  *  requiredMinDiff;	  initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	28	3	replace
352	[BUG]  [BUGGY]  initialTrustRegionRadius  =  1  *  requiredMinDiff;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  1  *  requiredMinDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  1  *  requiredMinDiff;	  initialTrustRegionRadius    =    minDiff    /    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	28	3	replace
353	[BUG]  [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2;  this.initialRadius  =  minDiff  /  2;  [CE]  cannot  find  symbol  initialRadius  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  this.initialTrustRegionRadius  =  minDiff  /  2;  this.initialRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	this.initialTrustRegionRadius  =  minDiff  /  2;  this.initialRadius  =  minDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    initRadius    =    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  initialRadius	46	None	replace
354	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  if(initialTrustRegionRadius  >  0)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    if(initialTrustRegionRadius  >  0)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	add
355	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  if(initialTrustRegionRadius  >  0)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  if(initialTrustRegionRadius  >  0)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    if(initialTrustRegionRadius  >  0)  {  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  }	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	add
356	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	add
357	[BUG]  [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius        =        minDiff        /        2;        initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	add
358	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff  -  1);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff  -  1);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff  -  1);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	8	None	replace
359	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  boundDifference);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  boundDifference);	  double    minDiff    =    Math.max(minDiff,    upperBound[i]    -    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	82	None	replace
360	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  double  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    double  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;	  	compilable	  [FE]  AssertionError  	32	3	add
361	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  double  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  double  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    double  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;	  	compilable	  [FE]  AssertionError  	32	3	add
362	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
363	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initInitialTrustRegionRadius(  requiredMinDiff  /  2.0);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  initInitialTrustRegionRadius(  requiredMinDiff  /  2.0);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2.0;    initInitialTrustRegionRadius(  requiredMinDiff  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
364	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2.0;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException    =    maxDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	62	None	replace
365	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  double  initialTrustRegionRadius  =  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    requiredMinDiff    /    2;    double  initialTrustRegionRadius  =  requiredMinDiff  /  2;	  	compilable	  [FE]  AssertionError  	25	3	add
366	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  double  initialTrustRegionRadius  =  requiredMinDiff  /  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  double  initialTrustRegionRadius  =  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2;    double  initialTrustRegionRadius  =  requiredMinDiff  /  2;	  	compilable	  [FE]  AssertionError  	25	3	add
367	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initBound(dimension,  upperBound,  minDiff,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  initBound(dimension,  upperBound,  minDiff,  lowerBound,  upperBound);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    2;    initBound(dimension,  upperBound,  minDiff,  lowerBound,  upperBound);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
368	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  minDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  2  *  minDiff;	  initialTrustRegionRadius    =    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	98	3	replace
369	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  minDiff;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  minDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  minDiff;	  initialTrustRegionRadius    =    2    *    requiredMinDiff;    	compilable	  [FE]  AssertionError  	98	3	replace
370	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  maxDiff;  [CE]  cannot  find  symbol  maxDiff  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  maxDiff;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  maxDiff;	  initialTrustRegionRadius    =    2    *    requiredMinDiff;    	non-compiled	[CE]  cannot  find  symbol  maxDiff	98	None	replace
371	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  double  initialTrustRegionRadius  =  minDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    minDiff    *    2;    double  initialTrustRegionRadius  =  minDiff  *  2;	  	compilable	  [FE]  AssertionError  	29	3	add
372	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  double  initialTrustRegionRadius  =  minDiff  *  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  double  initialTrustRegionRadius  =  minDiff  *  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    *    2;    double  initialTrustRegionRadius  =  minDiff  *  2;	  	compilable	  [FE]  AssertionError  	29	3	add
373	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBound(minDiff,  upperBound,  0);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBound(minDiff,  upperBound,  0);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    *    2;    initBound(minDiff,  upperBound,  0);	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
374	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBound(minDiff,  upperBound,  i);  [CE]  cannot  find  symbol  i  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  initBound(minDiff,  upperBound,  i);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    *    2;    initBound(minDiff,  upperBound,  i);	  	non-compiled	[CE]  cannot  find  symbol  i	29	None	add
375	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  double  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    double  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;	  	compilable	  [FE]  AssertionError  	95	3	add
376	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  double  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  double  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    double  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;	  	compilable	  [FE]  AssertionError  	95	3	add
377	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initInitialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [CE]  cannot  find  symbol  initInitialTrustRegionRadius  [FE]      AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initInitialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    initInitialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  initInitialTrustRegionRadius	95	None	add
378	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initBounds(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  initBounds(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    2    *    requiredMinDiff    /    2;    initBounds(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
379	[BUG]  [BUGGY]  double  minDiff  =  Math.min(length,  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(length,  upperBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(length,  upperBound);	  double    minDiff    =    Math.min(minDiff,    upperBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	70	None	replace
380	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i],  lowerBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i],  lowerBound);  [BUGGY]      initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i],  lowerBound);	  double    minDiff    =    Math.min(initialTrustRegionRadius,    boundDifference[i],    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	22	None	replace
381	[BUG]  [BUGGY]  initRadius  =  requiredMinDiff  /  2.0;  [CE]  cannot  find  symbol  initRadius  [FE]              AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initRadius  =  requiredMinDiff  /  2.0;  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initRadius  =  requiredMinDiff  /  2.0;	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  initRadius	38	None	replace
382	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  initBound(dimension,  lowerBound,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]        boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {      [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  initBound(dimension,  lowerBound,  requiredMinDiff);  [BUGGY]      }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  3.0;  initBound(dimension,  lowerBound,  requiredMinDiff);	  initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,    upperBound,    minDiff);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
