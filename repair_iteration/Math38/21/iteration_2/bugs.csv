bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	6	1	add
2	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    initialTrustRegionRadius  =  minDiff  /  2.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	6	1	add
3	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  initRegionRadius  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initRegionRadius  =  minDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    initRegionRadius  =  minDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	6	None	add
4	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  initRadius  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius  =  minDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius  =  minDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol  initRadius	6	None	add
5	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius(  minDiff  /  2.0;  [CE]  ')'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius(  minDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius(  minDiff  /  2.0;	  	non-compiled	[CE]  ')'  expected	6	None	add
6	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius  /  2.0;  [CE]  not  a  statement  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius  /  2.0;	  	non-compiled	[CE]  not  a  statement	6	None	add
7	[BUG]  [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  boundDifference);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(requiredMinDiff,  boundDifference);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	15	None	replace
8	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  requiredMinDiff);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	15	None	replace
9	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(minDiff,  boundDifference);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  boundDifference);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	15	None	replace
10	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  requiredMinDiff  /  2.0;	  InitialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	10	None	replace
11	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  neededMinDiff  /  2.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  InitialTrustRegionRadius  =  neededMinDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  neededMinDiff  /  2.0;	  InitialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	10	None	replace
12	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minimumMinDiff  /  2.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  InitialTrustRegionRadius  =  minimumMinDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minimumMinDiff  /  2.0;	  InitialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	10	None	replace
13	[BUG]  [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  upperBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  upperBound[i]);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(requiredMinDiff,  upperBound[i]);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	13	None	replace
14	[BUG]  [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  boundDifference[i]);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(requiredMinDiff,  boundDifference[i]);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    boundDifference[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	3	None	replace
15	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(minDiff,  boundDifference[i]);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  boundDifference[i]);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    boundDifference[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	3	None	replace
16	[BUG]  [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  initialTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  initialTrustRegionRadius);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(requiredMinDiff,  initialTrustRegionRadius);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	5	None	replace
17	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff,  boundDifference);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff,  boundDifference);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	5	None	replace
18	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  initialTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  initialTrustRegionRadius);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  initialTrustRegionRadius);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	5	None	replace
19	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff  /  3.0);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff  /  3.0);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff  /  3.0);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	5	None	replace
20	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  boundDifference[i]);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  boundDifference[i]);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    boundDifference[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	1	None	replace
21	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(minDiff,  boundDifference[i]);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  boundDifference[i]);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    boundDifference[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	1	None	replace
22	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i],  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i],  requiredMinDiff);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i],  requiredMinDiff);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    boundDifference[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	1	None	replace
23	[BUG]  [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(requiredMinDiff,  upperBound);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(requiredMinDiff,  upperBound);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	11	None	replace
24	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  initialTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(minDiff,  initialTrustRegionRadius);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  initialTrustRegionRadius);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	11	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  requiredMinDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	9	3	replace
26	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  [FE]  AssertionError  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	9	3	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;	  initialTrustRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	9	3	replace
28	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [FE]  AssertionError  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  2  *  requiredMinDiff;	  initialTrustRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	9	3	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  minDiff  *  2;	  initialTrustRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	9	3	replace
30	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  [FE]  AssertionError  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  *  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  *  2;	  initialTrustRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	9	3	replace
31	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  2;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  requiredMinDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	9	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  requiredMinDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    	compilable	  [FE]  AssertionError  	7	3	replace
33	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [FE]  AssertionError  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    	compilable	  [FE]  AssertionError  	7	3	replace
34	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	16	1	add
35	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    AssertionError    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	16	1	add
36	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  initRegionRadius  [FE]      AssertionError    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRegionRadius  =  requiredMinDiff  /  3.0;	  	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	16	None	add
37	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  initRadius  [FE]        AssertionError    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initRadius  =  requiredMinDiff  /  3.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius  =  requiredMinDiff  /  3.0;	  	non-compiled	[CE]  cannot  find  symbol  initRadius	16	None	add
38	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initRadius  /  3.0;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initRadius  /  3.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initRadius  /  3.0;	  	non-compiled	[CE]  not  a  statement	16	None	add
39	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,  upperBound,  minDiff,  requiredMinDiff);	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
40	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound[i]);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  upperBound[i]);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	4	None	replace
41	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  upperBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  upperBound[i]);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  upperBound[i]);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	4	None	replace
42	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound[i]);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound[i]);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	4	None	replace
43	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	8	1	add
44	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    initialTrustRegionRadius  =  minDiff  /  2;	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	8	1	add
45	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initRegionRadius  =  minDiff  /  2;  [CE]  cannot  find  symbol  initRegionRadius  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initRegionRadius  =  minDiff  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    initRegionRadius  =  minDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  initRegionRadius	8	None	add
46	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initRadius  =  minDiff  /  2;  [CE]  cannot  find  symbol  initRadius  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initRadius  =  minDiff  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    initRadius  =  minDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  initRadius	8	None	add
47	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initRadius(  minDiff  /  2;  [CE]  ')'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initRadius(  minDiff  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    initRadius(  minDiff  /  2;	  	non-compiled	[CE]  ')'  expected	8	None	add
48	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initRadius  /  2;  [CE]  not  a  statement  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initRadius  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    initRadius  /  2;	  	non-compiled	[CE]  not  a  statement	8	None	add
49	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  upperBound);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  upperBound);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	12	None	replace
50	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minimumTrustRegionRadius,  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(minimumTrustRegionRadius,  requiredMinDiff);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minimumTrustRegionRadius,  requiredMinDiff);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	12	None	replace
51	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  initialTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(minDiff,  initialTrustRegionRadius);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  initialTrustRegionRadius);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	12	None	replace
52	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i],  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i],  requiredMinDiff);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound[i],  requiredMinDiff);	      double    minDiff    =    Math.max(minDiff,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	2	None	replace
53	[BUG]  [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(requiredMinDiff,  boundDifference);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(requiredMinDiff,  boundDifference);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	14	None	replace
54	[BUG]  [BUGGY]  double  minDiff  =  Math.min(lengthDifference,  initialTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(lengthDifference,  initialTrustRegionRadius);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(lengthDifference,  initialTrustRegionRadius);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	14	None	replace
55	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(minDiff,  boundDifference);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  boundDifference);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	14	None	replace
56	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  3.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  3.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minDiff  /  3.0;	  InitialTrustRegionRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	18	None	replace
57	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  boundDifference  /  2.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  InitialTrustRegionRadius  =  boundDifference  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  boundDifference  /  2.0;	  InitialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	10	None	replace
58	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2.0  +  requiredMinDiff;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2.0  +  requiredMinDiff;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minDiff  /  2.0  +  requiredMinDiff;	  InitialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	10	None	replace
59	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	11	None	replace
60	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  lowerBound);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	11	None	replace
61	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2.0;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	6	None	add
62	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2.0;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	6	None	add
63	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius(minDiff  /  2.0);  [CE]  cannot  find  symbol  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initRadius(minDiff  /  2.0);  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    initRadius(minDiff  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
64	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	6	None	add
65	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2.0;	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	6	None	add
66	[BUG]  [BUGGY]  initialTrustRegionRadius  =  maxDiff  /  2.0;  [CE]  cannot  find  symbol  maxDiff  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  maxDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  maxDiff  /  2.0;	  initialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  maxDiff	7	None	replace
67	[BUG]  [BUGGY]  initialTrustRegionRadius  =  maxDiff  /  2  *  requiredMinDiff;  [CE]  cannot  find  symbol  maxDiff  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  maxDiff  /  2  *  requiredMinDiff;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  maxDiff  /  2  *  requiredMinDiff;	  initialTrustRegionRadius    =    minDiff    /    2;    	non-compiled	[CE]  cannot  find  symbol  maxDiff	9	None	replace
68	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i],  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i],  boundDifference);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i],  boundDifference);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	4	None	replace
69	[BUG]  [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]  -  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]  -  requiredMinDiff);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]  -  requiredMinDiff);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	4	None	replace
70	[BUG]  [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.min(minDiff,  upperBound);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.min(minDiff,  upperBound);	      double    minDiff    =    Math.min(initialTrustRegionRadius,    upperBound);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	12	None	replace
71	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initInitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  initInitialTrustRegionRadius  [FE]    AssertionError    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initInitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initInitialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	non-compiled	[CE]  cannot  find  symbol  initInitialTrustRegionRadius	16	None	add
72	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  InitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]      AssertionError    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  InitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    InitialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	16	None	add
73	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
74	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(minDiff,  requiredMinDiff);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  requiredMinDiff);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    requiredMinDiff);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	5	None	replace
75	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  initialTrustRegionRadius  /  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  initialTrustRegionRadius  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException  =  initialTrustRegionRadius  /  2;	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	8	None	add
76	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  /  2;	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	8	None	add
77	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException  =  maxDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	8	None	add
78	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    BOBYQAOptimizer$PathIsExploredException  =  super.initialTrustRegionRadius  *  2;	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	8	None	add
79	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  lowerBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  lowerBound[i]);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  lowerBound[i]);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	13	None	replace
80	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i]  -  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i]  -  requiredMinDiff);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i]  -  requiredMinDiff);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	13	None	replace
81	[BUG]  [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i],  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i],  requiredMinDiff);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i],  requiredMinDiff);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	13	None	replace
82	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  requiredMinDiff);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound[i]  -  requiredMinDiff);	      double    minDiff    =    Math.max(minDiff,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	2	None	replace
83	[BUG]  [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  *  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(minDiff,  upperBound[i]  *  requiredMinDiff);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(minDiff,  upperBound[i]  *  requiredMinDiff);	      double    minDiff    =    Math.max(minDiff,    upperBound[i]);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	2	None	replace
84	[BUG]  [BUGGY]  double  minDiff  =  Math.max(lengthDifference,  initialTrustRegionRadius);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  double  minDiff  =  Math.max(lengthDifference,  initialTrustRegionRadius);  [BUGGY]    initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	double  minDiff  =  Math.max(lengthDifference,  initialTrustRegionRadius);	      double    minDiff    =    Math.max(initialTrustRegionRadius,    boundDifference);    	non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	15	None	replace
85	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  initialTrustRegionRadius  /  3.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  InitialTrustRegionRadius  =  initialTrustRegionRadius  /  3.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  initialTrustRegionRadius  /  3.0;	  InitialTrustRegionRadius    =    requiredMinDiff    /    3.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	18	None	replace
86	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  dsqCrvmin  /  2.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  InitialTrustRegionRadius  =  dsqCrvmin  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  dsqCrvmin  /  2.0;	  InitialTrustRegionRadius    =    minDiff    /    2.0;    	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	10	None	replace
87	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  InitialTrustRegionRadius  =  minDiff  /  2;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  InitialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    InitialTrustRegionRadius  =  minDiff  /  2;	  	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	8	None	add
88	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initBound(dimension,  upperBound,  minDiff);  [CE]  cannot  find  symbol  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initBound(dimension,  upperBound,  minDiff);  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    initBound(dimension,  upperBound,  minDiff);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
89	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initBounds();  [CE]  cannot  find  symbol  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initBounds();  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    initBounds();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
90	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initBound(dimension,  lowerBound,  minDiff);  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  initBound(dimension,  lowerBound,  minDiff);  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2;    initBound(dimension,  lowerBound,  minDiff);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
91	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initInitialTrustRegionRadius(  minDiff  /  2.0);  [CE]  cannot  find  symbol  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initInitialTrustRegionRadius(  minDiff  /  2.0);  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    initInitialTrustRegionRadius(  minDiff  /  2.0);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
92	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initInitialTrustRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  initInitialTrustRegionRadius  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initInitialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    initInitialTrustRegionRadius  =  minDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol  initInitialTrustRegionRadius	6	None	add
93	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    initBound(dimension,  upperBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
94	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initBound(dimension,  lowerBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  initBound(dimension,  lowerBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    minDiff    /    2.0;    initBound(dimension,  lowerBound,  minDiff);  initialTrustRegionRadius  =  minDiff  /  2.0;	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
95	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	9	3	replace
96	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [FE]  AssertionError  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  requiredMinDiff  /  2;	  initialTrustRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	9	3	replace
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  2  *  requiredMinDiff;	  initialTrustRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	9	3	replace
98	[BUG]  [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  [FE]  AssertionError  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  2  *  requiredMinDiff;  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  2  *  requiredMinDiff;	  initialTrustRegionRadius    =    minDiff    /    2;    	compilable	  [FE]  AssertionError  	9	3	replace
99	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initBound(dimension,  upperBound,  minDiff);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {    [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  initBound(dimension,  upperBound,  minDiff);  [BUGGY]    }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius    =    requiredMinDiff    /    3.0;    initBound(dimension,  upperBound,  minDiff);	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
