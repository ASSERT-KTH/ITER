bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]    double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i]);  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	    double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference[i]);		non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	add
2	[BUG]  [BUGGY]    double  minDiff  =  Math.max(minDiff,  upperBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]    double  minDiff  =  Math.max(minDiff,  upperBound[i]);  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	    double  minDiff  =  Math.max(minDiff,  upperBound[i]);		non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	add
3	[BUG]  [BUGGY]    double  minDiff  =  Math.max(initialTrustRegionRadius,  boundDifference[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]    double  minDiff  =  Math.max(initialTrustRegionRadius,  boundDifference[i]);  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	    double  minDiff  =  Math.max(initialTrustRegionRadius,  boundDifference[i]);		non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	add
4	[BUG]  [BUGGY]    double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]          BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]    double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]);  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	    double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound[i]);		non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	add
5	[BUG]  [BUGGY]    double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]    double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff);  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	    double  minDiff  =  Math.max(initialTrustRegionRadius,  requiredMinDiff);		non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	add
6	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  minDiff  /  2.0;	initialTrustRegionRadius  =  minDiff  /  3.0;  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	41	1	replace
7	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  2.0;	initialTrustRegionRadius  =  minDiff  /  3.0;  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	41	1	replace
8	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  minDiff  /  2;	initialTrustRegionRadius  =  minDiff  /  3.0;  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	41	1	replace
9	[BUG]  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  2;  [BUGGY]  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  minDiff  /  2;	initialTrustRegionRadius  =  minDiff  /  3.0;  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	41	1	replace
10	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]        BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]  InitialTrustRegionRadius  =  minDiff  /  2.0;  [BUGGY]  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  minDiff  /  2.0;	initialTrustRegionRadius  =  minDiff  /  3.0;  	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	41	None	replace
11	[BUG]  [BUGGY]    double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]    double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound);  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	    double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound);		non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	add
12	[BUG]  [BUGGY]    double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]    double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound);  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	    double  minDiff  =  Math.min(initialTrustRegionRadius,  upperBound);		non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	add
13	[BUG]  [BUGGY]    double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i]);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]    double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i]);  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	    double  minDiff  =  Math.max(initialTrustRegionRadius,  upperBound[i]);		non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	add
14	[BUG]  [BUGGY]    double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]    double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference);  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	    double  minDiff  =  Math.min(initialTrustRegionRadius,  boundDifference);		non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	add
15	[BUG]  [BUGGY]    double  minDiff  =  Math.max(initialTrustRegionRadius,  boundDifference);  [CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]    double  minDiff  =  Math.max(initialTrustRegionRadius,  boundDifference);  [BUGGY]  initialTrustRegionRadius  =  minDiff  /  3.0;  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	    double  minDiff  =  Math.max(initialTrustRegionRadius,  boundDifference);		non-compiled	[CE]  variable  minDiff  is  already  defined  in  method  setup(double[],double[])	42	None	add
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	initialTrustRegionRadius  =  minDiff  /  3.0;  	compilable	  [FE]  AssertionError  	41	3	replace
17	[BUG]  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [FE]  AssertionError  [FE]    BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]  initialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	initialTrustRegionRadius  =  requiredMinDiff  /  3.0;	initialTrustRegionRadius  =  minDiff  /  3.0;  	compilable	  [FE]  AssertionError  	41	3	replace
18	[BUG]  [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [CE]  cannot  find  symbol  InitialTrustRegionRadius  [FE]      BOBYQAOptimizer$PathIsExploredException  [CONTEXT]    boundDifference  =  new  double[dimension];  double  requiredMinDiff  =  2  *  initialTrustRegionRadius;  double  minDiff  =  Double.POSITIVE_INFINITY;  for  (int  i  =  0;  i  <  dimension;  i++)  {  boundDifference[i]  =  upperBound[i]  -  lowerBound[i];  minDiff  =  Math.min(minDiff,  boundDifference[i]);  }  if  (minDiff  <  requiredMinDiff)  {  [BUGGY]  InitialTrustRegionRadius  =  requiredMinDiff  /  3.0;  [BUGGY]  }  bMatrix  =  new  Array2DRowRealMatrix(dimension  +  numberOfInterpolationPoints,  dimension);  zMatrix  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  numberOfInterpolationPoints  -  dimension  -  1);  interpolationPoints  =  new  Array2DRowRealMatrix(numberOfInterpolationPoints,  dimension);  originShift  =  new  ArrayRealVector(dimension);  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  setup  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  init  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  angbd  angt  bdtest  bdtol  beta  biglsq  bigstp  blen  boundDiff  bsum  cauchy  crvmin  csave  cth  curv  d1  d2  d3  d4  d5  d6  d7  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  dhd  dhs  diff  diffa  diffb  diffc  dist  distsq  dnorm  dredg  dredsq  ds  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  ggsav  gisq  glagValue  gqsq  gredsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  minDiff  objectiveValue  oneOverStepA  pqold  predsq  presav  qred  ratio  rdnext  rdprev  recip  redmax  rednew  redsav  requiredMinDiff  resid  rho  rhosq  scaden  scale  sdec  shs  slbd  sqrtDenom  sredg  ssq  step  stepa  stepb  stepsq  sth  stoppingTrustRegionRadius  stplen  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  tau  temp  tempa  tempb  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  xsav  xsum  ztest  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work  work1  work2  work3  xbdi  int[]  nPointsInterval  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  dimension  i  iact  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isav  isbd  itcsav  iterc  itermax  itest  iu  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  nact  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	InitialTrustRegionRadius  =  requiredMinDiff  /  3.0;	initialTrustRegionRadius  =  minDiff  /  3.0;  	non-compiled	[CE]  cannot  find  symbol  InitialTrustRegionRadius	41	None	replace
