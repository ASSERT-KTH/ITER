bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
2	[BUG]  [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
3	[BUG]  [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -ih);  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -ih);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -ih);	  	non-compiled	[CE]  cannot  find  symbol  ih	9	None	add
4	[BUG]  [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -i);  [CE]  cannot  find  symbol  i  [FE]        OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -i);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -i);	  	non-compiled	[CE]  cannot  find  symbol  i	9	None	add
5	[BUG]  [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -r);  [CE]  cannot  find  symbol  r  [FE]          OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -r);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -r);	  	non-compiled	[CE]  cannot  find  symbol  r	9	None	add
6	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(zMatrix);  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(zMatrix);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(zMatrix);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(bMatrix);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
7	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(zMatrix,  bMatrix);  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(zMatrix,  bMatrix);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(zMatrix,  bMatrix);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(bMatrix);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
8	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(bMatrix,  zMatrix);  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(bMatrix,  zMatrix);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(bMatrix,  zMatrix);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(bMatrix);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
9	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	        zMatrix.setEntry(nfm,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	add
10	[BUG]  [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      zMatrix.setEntry(nfm,  nfxm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        zMatrix.setEntry(nfm,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	add
11	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	        zMatrix.setEntry(0,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	add
12	[BUG]  [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      zMatrix.setEntry(0,  nfxm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        zMatrix.setEntry(0,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	add
13	[BUG]  [BUGGY]      zMatrix.setEntry(nfm,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(int,int)  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      zMatrix.setEntry(nfm,  nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        zMatrix.setEntry(nfm,  nfxm);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int)	7	None	add
14	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      zMatrix.setEntry(nfxm,  nfxm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	        zMatrix.setEntry(nfxm,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	add
15	[BUG]  [BUGGY]      zMatrix.setEntry(nfxm,  nfxm,  recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      zMatrix.setEntry(nfxm,  nfxm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        zMatrix.setEntry(nfxm,  nfxm,  recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	7	1	add
16	[BUG]  [BUGGY]      zMatrix.setEntry(nfxm,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(int,int)  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      zMatrix.setEntry(nfxm,  nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        zMatrix.setEntry(nfxm,  nfxm);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int)	7	None	add
17	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(ipt,  nfxm,  -1);	  zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	19	1	replace
18	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ipt,  nfxm,  -1);	  zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	19	1	replace
19	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(nfm,  nfxm,  -recip);	  zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	19	1	replace
20	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfm,  nfxm,  -recip);	  zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	19	1	replace
21	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  -recip,  ih);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  -recip,  ih);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,  -recip,  ih);	  zMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	12	None	replace
22	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  ih);  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  ih);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  ih);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(this,    DEFAULT_INITIAL_RADIUS);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
23	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  zMatrix);  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  zMatrix);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  zMatrix);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(this,    DEFAULT_INITIAL_RADIUS);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
24	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  nfxm);  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  nfxm);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  nfxm);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(this,    DEFAULT_INITIAL_RADIUS);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
25	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  1);  [CE]  cannot  find  symbol  [FE]                BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  1);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  1);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(this,    DEFAULT_INITIAL_RADIUS);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
26	[BUG]  [BUGGY]  bMatrix.setEntry(ih,  nfxm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  bMatrix.setEntry(ih,  nfxm,  -recip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	bMatrix.setEntry(ih,  nfxm,  -recip);	      bMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	10	None	replace
27	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  bMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	bMatrix.setEntry(jpt,  nfxm,  -1);	      bMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  OutOfRangeException  	10	1	replace
28	[BUG]  [BUGGY]  bMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  bMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	bMatrix.setEntry(jpt,  nfxm,  -1);	      bMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  OutOfRangeException  	10	1	replace
29	[BUG]  [BUGGY]  bMatrix.setEntry(nfxm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]        OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  bMatrix.setEntry(nfxm,  -recip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	bMatrix.setEntry(nfxm,  -recip);	      bMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	10	None	replace
30	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQOptimizer();  [CE]  cannot  find  symbol  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQOptimizer();  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQOptimizer();	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
31	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  -recip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(nfxm,  jpt,  -recip);	      zMatrix.setEntry(jpt,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	replace
32	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  -recip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,  jpt,  -recip);	      zMatrix.setEntry(jpt,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	replace
33	[BUG]  [BUGGY]  zMatrix.setEntry(ih,  jpt,  -recip);  [CE]  cannot  find  symbol  ih  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ih,  jpt,  -recip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ih,  jpt,  -recip);	      zMatrix.setEntry(jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	17	None	replace
34	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -recip,  ih);  [CE]  cannot  find  symbol  ih  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  -recip,  ih);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(jpt,  -recip,  ih);	      zMatrix.setEntry(jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	17	None	replace
35	[BUG]  [BUGGY]  zMatrix.setEntry(ih,  -recip);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ih,  -recip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ih,  -recip);	      zMatrix.setEntry(jpt,    ih,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	16	None	replace
36	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(nfxm,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
37	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
38	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -ipt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(nfxm,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
39	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -ipt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  nfxm,  -ipt);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
40	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  ZMatrix.setEntry(nfxm,  nfxm,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  ZMatrix.setEntry(nfxm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,    nfxm,    -recip);    ZMatrix.setEntry(nfxm,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	1	None	add
41	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -i);  [CE]  cannot  find  symbol  i  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -i);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  nfxm,  -i);	  	non-compiled	[CE]  cannot  find  symbol  i	1	None	add
42	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	add
43	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	add
44	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	add
45	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	4	1	add
46	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  ZMatrix.setEntry(jpt,  nfxm,  -1);  [CE]  cannot  find  symbol  ZMatrix  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  ZMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(jpt,    nfxm,    -1);    ZMatrix.setEntry(jpt,  nfxm,  -1);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	4	None	add
47	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(jpt,  nfxm,  0);	  zMatrix.setEntry(jpt,    nfxm,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	5	1	replace
48	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  0);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(jpt,  nfxm,  0);	  zMatrix.setEntry(jpt,    nfxm,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	5	1	replace
49	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(nfxm,  nfxm,  -1);	  zMatrix.setEntry(jpt,    nfxm,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	5	1	replace
50	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,  nfxm,  -1);	  zMatrix.setEntry(jpt,    nfxm,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	5	1	replace
51	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -ipt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(nfxm,  nfxm,  -ipt);	  zMatrix.setEntry(nfxm,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	2	1	replace
52	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -ipt);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -ipt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,  nfxm,  -ipt);	  zMatrix.setEntry(nfxm,    nfxm,    -recip);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	2	1	replace
53	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -i);  [CE]  cannot  find  symbol  i  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -i);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,  nfxm,  -i);	  zMatrix.setEntry(nfxm,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  i	2	None	replace
54	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	18	1	add
55	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	18	1	add
56	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ipt,    nfxm,    -recip);    ZMatrix.setEntry(ipt,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	18	None	add
57	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -prelim);  [CE]  cannot  find  symbol  prelim  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -prelim);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -prelim);	  	non-compiled	[CE]  cannot  find  symbol  prelim	18	None	add
58	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -r);  [CE]  cannot  find  symbol  r  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -r);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -r);	  	non-compiled	[CE]  cannot  find  symbol  r	18	None	add
59	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -l);  [CE]  cannot  find  symbol  l  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -l);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(jpt,  nfxm,  -l);	  zMatrix.setEntry(jpt,    nfxm,    -i);    	non-compiled	[CE]  cannot  find  symbol  l	20	None	replace
60	[BUG]  [BUGGY]      BOBYQAOptimizer$PathIsExploredException  =  -zMatrix.getEntry(0,  nfxm,  recip);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      BOBYQAOptimizer$PathIsExploredException  =  -zMatrix.getEntry(0,  nfxm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        BOBYQAOptimizer$PathIsExploredException  =  -zMatrix.getEntry(0,  nfxm,  recip);	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	7	None	add
61	[BUG]  [BUGGY]      BOBYQAOptimizer$PathIsExploredException  =  bMatrix.getEntry(0,  nfxm,  recip);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      BOBYQAOptimizer$PathIsExploredException  =  bMatrix.getEntry(0,  nfxm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        BOBYQAOptimizer$PathIsExploredException  =  bMatrix.getEntry(0,  nfxm,  recip);	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	7	None	add
62	[BUG]  [BUGGY]      BOBYQAOptimizer$PathIsExploredException  =  -zMatrix.getEntry(0,  nfxm);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      BOBYQAOptimizer$PathIsExploredException  =  -zMatrix.getEntry(0,  nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        BOBYQAOptimizer$PathIsExploredException  =  -zMatrix.getEntry(0,  nfxm);	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	7	None	add
63	[BUG]  [BUGGY]      BOBYQAOptimizer$PathIsExploredException  =  -zMatrix.getEntry(nfm,  nfxm);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      BOBYQAOptimizer$PathIsExploredException  =  -zMatrix.getEntry(nfm,  nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        BOBYQAOptimizer$PathIsExploredException  =  -zMatrix.getEntry(nfm,  nfxm);	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	7	None	add
64	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -recip,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(int,double,int)  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  -recip,  nfxm);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(jpt,  -recip,  nfxm);	      zMatrix.setEntry(jpt,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double,int)	17	None	replace
65	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  -nfxm,  -recip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(jpt,  -nfxm,  -recip);	      zMatrix.setEntry(jpt,    -recip);    	compilable	  [FE]  OutOfRangeException  	17	1	replace
66	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -nfxm,  -recip);  [FE]  OutOfRangeException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  -nfxm,  -recip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(jpt,  -nfxm,  -recip);	      zMatrix.setEntry(jpt,    -recip);    	compilable	  [FE]  OutOfRangeException  	17	1	replace
67	[BUG]  [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -id);  [CE]  cannot  find  symbol  id  [FE]    OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -id);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -id);	  	non-compiled	[CE]  cannot  find  symbol  id	9	None	add
68	[BUG]  [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -decip);  [CE]  cannot  find  symbol  decip  [FE]      OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -decip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -decip);	  	non-compiled	[CE]  cannot  find  symbol  decip	9	None	add
69	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(jpt,    nfxm,    -1);    BOBYQAOptimizer$PathIsExploredException  zMatrix  =  new  BOBYQAOptimizer();	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
70	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	18	1	add
71	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	18	1	add
72	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	18	1	add
73	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	18	1	add
74	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -getRecipient);  [CE]  cannot  find  symbol  getRecipient  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -getRecipient);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -getRecipient);	  	non-compiled	[CE]  cannot  find  symbol  getRecipient	18	None	add
75	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -in);  [CE]  cannot  find  symbol  in  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -in);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -in);	  	non-compiled	[CE]  cannot  find  symbol  in	18	None	add
76	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -in);  [CE]  cannot  find  symbol  in  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -in);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(jpt,  nfxm,  -in);	  zMatrix.setEntry(jpt,    nfxm,    -i);    	non-compiled	[CE]  cannot  find  symbol  in	20	None	replace
77	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  -recip,  ipt);  [CE]  no  suitable  method  found  for  setEntry(int,double,int)  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  -recip,  ipt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,  -recip,  ipt);	  zMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double,int)	12	None	replace
78	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -recip,  -ih);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(jpt,  -recip,  -ih);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(jpt,  -recip,  -ih);	      zMatrix.setEntry(jpt,    ih,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	16	None	replace
79	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(nfxm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
80	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
81	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(nfxm,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
82	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	1	1	add
83	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -rcip);  [CE]  cannot  find  symbol  rcip  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  nfxm,  -rcip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  nfxm,  -rcip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	1	None	add
84	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(nfxm,  jpt,  -1);	  zMatrix.setEntry(jpt,    nfxm,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	5	1	replace
85	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,  jpt,  -1);	  zMatrix.setEntry(jpt,    nfxm,    -1);    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	5	1	replace
86	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(bMatrix,  nfxm);  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(bMatrix,  nfxm);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(bMatrix,  nfxm);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(bMatrix);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
87	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  alphaCauchy);  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  alphaCauchy);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  alphaCauchy);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(this,    DEFAULT_INITIAL_RADIUS);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
88	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  NO_INITIAL_RADIUS);  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  NO_INITIAL_RADIUS);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  NO_INITIAL_RADIUS);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(this,    DEFAULT_INITIAL_RADIUS);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
89	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  NO_TYPE);  [CE]  cannot  find  symbol  [FE]              BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  NO_TYPE);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  NO_TYPE);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(this,    DEFAULT_INITIAL_RADIUS);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
90	[BUG]  [BUGGY]      BOBYQAOptimizer$PathIsExploredException  =  -zMatrix.getEntry(0,  nfxm)-  zMatrix.getEntry(-1,  nfxm,  recip);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      BOBYQAOptimizer$PathIsExploredException  =  -zMatrix.getEntry(0,  nfxm)-  zMatrix.getEntry(-1,  nfxm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        BOBYQAOptimizer$PathIsExploredException  =  -zMatrix.getEntry(0,  nfxm)-  zMatrix.getEntry(-1,  nfxm,  recip);	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	7	None	add
91	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  modelSecondDerivativesValues);  [CE]  cannot  find  symbol  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  modelSecondDerivativesValues);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQAOptimizer(this,  DEFAULT_INITIAL_RADIUS,  modelSecondDerivativesValues);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(this,    DEFAULT_INITIAL_RADIUS);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
92	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  bMatrix.setEntry(jpt,  -1,  -1);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	bMatrix.setEntry(jpt,  -1,  -1);	      bMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  OutOfRangeException  	10	1	replace
93	[BUG]  [BUGGY]  bMatrix.setEntry(jpt,  -1,  -1);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  bMatrix.setEntry(jpt,  -1,  -1);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	bMatrix.setEntry(jpt,  -1,  -1);	      bMatrix.setEntry(jpt,    nfxm,    -recip);    	compilable	  [FE]  OutOfRangeException  	10	1	replace
94	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  -recip,  alphaCauchy);  [CE]  cannot  find  symbol  alphaCauchy  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(nfxm,  -recip,  alphaCauchy);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(nfxm,  -recip,  alphaCauchy);	  zMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  alphaCauchy	12	None	replace
95	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  -recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	18	None	add
96	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	zMatrix.setEntry(ipt,  -1,  -1);	  zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  OutOfRangeException  	19	1	replace
97	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  -1,  -1);  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	zMatrix.setEntry(ipt,  -1,  -1);	  zMatrix.setEntry(ipt,    nfxm,    -recip);    	compilable	  [FE]  OutOfRangeException  	19	1	replace
98	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQOptimizer(zMatrix);  [CE]  cannot  find  symbol  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]  BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQOptimizer(zMatrix);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	BOBYQAOptimizer$PathIsExploredException  jpt  =  new  BOBYQOptimizer(zMatrix);	      BOBYQAOptimizer$PathIsExploredException    jpt    =    new    BOBYQAOptimizer(bMatrix);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
99	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
100	[BUG]  [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
101	[BUG]  [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -rcip);  [CE]  cannot  find  symbol  rcip  [FE]      OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -rcip);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -rcip);	  	non-compiled	[CE]  cannot  find  symbol  rcip	9	None	add
102	[BUG]  [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -test);  [CE]  cannot  find  symbol  test  [FE]        OutOfRangeException    [CONTEXT]    -zMatrix.getEntry(0,  nfxm)  -  zMatrix.getEntry(nfm,  nfxm));  }    }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);    [BUGGY]      bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -test);  [BUGGY]    zMatrix.setEntry(jpt,  nfxm,  -recip);  final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -test);	  	non-compiled	[CE]  cannot  find  symbol  test	9	None	add
