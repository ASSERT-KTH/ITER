bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	58	1	add
2	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	58	1	add
3	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	58	1	add
4	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	58	1	add
5	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	58	1	add
6	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	58	1	add
7	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	58	1	add
8	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	58	1	add
9	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (ipt  -  1)/  2)+  jpt  -  1;  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (ipt  -  1)/  2)+  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  jpt  *  (ipt  -  1)/  2)+  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2)    +    jpt    -    1;    	non-compiled	[CE]  ';'  expected	88	None	replace
10	[BUG]  [BUGGY]  final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1;  final  double  ih  =  jpt  *  (ipt  -  1)/  2)+  jpt  -  1;  [CE]  ';'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1;  final  double  ih  =  jpt  *  (ipt  -  1)/  2)+  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1;  final  double  ih  =  jpt  *  (ipt  -  1)/  2)+  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2)    +    jpt    -    1;    	non-compiled	[CE]  ';'  expected	88	None	replace
11	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	63	None	replace
12	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	63	None	replace
13	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	63	None	replace
14	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -nfxm);    	non-compiled	[CE]  cannot  find  symbol  ih	106	None	replace
15	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -nfxm);    	non-compiled	[CE]  cannot  find  symbol  ih	106	None	replace
16	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -nfxm);    	non-compiled	[CE]  cannot  find  symbol  ih	106	None	replace
17	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -nfxm);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	106	None	replace
18	[BUG]  [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	133	None	replace
19	[BUG]  [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	133	None	replace
20	[BUG]  [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	133	None	replace
21	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =(jpt  *(jpt  -  1)/  2  +  jpt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =(jpt  *(jpt  -  1)/  2  +  jpt  -  1);	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    jpt    *(jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	75	1	replace
22	[BUG]  [BUGGY]  final  int  ih  =(jpt  *(jpt  -  1)/  2  +  jpt  -  1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =(jpt  *(jpt  -  1)/  2  +  jpt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =(jpt  *(jpt  -  1)/  2  +  jpt  -  1);	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    jpt    *(jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	75	1	replace
23	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip,  isMinimize);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double,boolean)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip,  isMinimize);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  recip,  isMinimize);	  zMatrix.setEntry(0,    nfm,    nfxm,    recip,    alphaCauchy);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double,boolean)	55	None	replace
24	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip,  1);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip,  1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  recip,  1);	  zMatrix.setEntry(0,    nfm,    nfxm,    recip,    alphaCauchy);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)	55	None	replace
25	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
26	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
27	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
28	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
29	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
30	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
31	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
32	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
33	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	115	1	add
34	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	115	1	add
35	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	115	1	add
36	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	115	1	add
37	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -1);  zMatrix.setEntry(jpt,  nfm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -1);  zMatrix.setEntry(jpt,  nfm,  -1);	  	compilable	  [FE]  OutOfRangeException  	115	1	add
38	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -1);  zMatrix.setEntry(jpt,  nfm,  -1);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -1);  zMatrix.setEntry(jpt,  nfm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -1);  zMatrix.setEntry(jpt,  nfm,  -1);	  	compilable	  [FE]  OutOfRangeException  	115	1	add
39	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	115	1	add
40	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	115	1	add
41	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  ipt,  lowerBound,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  ipt,  lowerBound,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  ipt,  lowerBound,  upperBound);	  zMatrix.setEntry(nfxm,    ipt,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[])	6	None	replace
42	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  ipt,  jpt,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  ipt,  jpt,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  ipt,  jpt,  upperBound);	  zMatrix.setEntry(nfxm,    ipt,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double[])	6	None	replace
43	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  ipt,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  ipt,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  nfxm,  ipt,  upperBound);	  zMatrix.setEntry(nfxm,    ipt,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double[])	6	None	replace
44	[BUG]  [BUGGY]  bMatrix.setEntry(jpt,  jpt,  -recip);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(jpt,  jpt,  -recip);	  bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	138	None	replace
45	[BUG]  [BUGGY]  bMatrix.setEntry(ih,  jpt,  -recip);  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ih,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ih,  jpt,  -recip);	  bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	138	None	replace
46	[BUG]  [BUGGY]  bMatrix.setEntry(i,  jpt,  -recip);  [CE]  cannot  find  symbol  i  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(i,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(i,  jpt,  -recip);	  bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  i	138	None	replace
47	[BUG]  [BUGGY]  bMatrix.setEntry(jpt,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(jpt,  -recip);	  bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	138	None	replace
48	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(ipt,    nfxm,    -recip);    BOBYQAOptimizer$PathIsExploredException    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	125	None	replace
49	[BUG]  [BUGGY]  zMatrix.setEntry(fm,  nfxm,  -recip);  [CE]  cannot  find  symbol  fm  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(fm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(fm,  nfxm,  -recip);	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(fm,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  fm	148	None	replace
50	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  fm  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(fm,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  fm	148	None	replace
51	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  cannot  find  symbol  fm  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(fm,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  fm	148	None	replace
52	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -prelim);  [CE]  cannot  find  symbol  prelim  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -prelim);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  -prelim);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -prelim);    	non-compiled	[CE]  cannot  find  symbol  prelim	30	None	replace
53	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -label);  [CE]  cannot  find  symbol  label  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -label);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  -label);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -prelim);    	non-compiled	[CE]  cannot  find  symbol  label	30	None	replace
54	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -r);  [CE]  cannot  find  symbol  r  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -r);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  -r);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -prelim);    	non-compiled	[CE]  cannot  find  symbol  r	30	None	replace
55	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (ipt  -  1)/  2)+  ipt  -  1;  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (ipt  -  1)/  2)+  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  jpt  *  (ipt  -  1)/  2)+  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2)    +    ipt    -    1;    	non-compiled	[CE]  ';'  expected	149	None	replace
56	[BUG]  [BUGGY]  final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  ipt  -  1;  final  double  ih  =  jpt  *  (ipt  -  1)/  2)+  ipt  -  1;  [CE]  ';'  expected  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  ipt  -  1;  final  double  ih  =  jpt  *  (ipt  -  1)/  2)+  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  ipt  -  1;  final  double  ih  =  jpt  *  (ipt  -  1)/  2)+  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2)    +    ipt    -    1;    	non-compiled	[CE]  ';'  expected	149	None	replace
57	[BUG]  [BUGGY]  final  double  ih  =  (jpt  -  1)/  2  *  ipt  -  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  (jpt  -  1)/  2  *  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  (jpt  -  1)/  2  *  ipt  -  1;	  final    double    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	26	None	replace
58	[BUG]  [BUGGY]  final  double  ih  =  (jpt  -  1)*  2  +  ipt  -  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  (jpt  -  1)*  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  (jpt  -  1)*  2  +  ipt  -  1;	  final    double    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	26	None	replace
59	[BUG]  [BUGGY]  final  double  ih  =  (jpt  -  1)/  2  +  ih  -  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]                        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  (jpt  -  1)/  2  +  ih  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  (jpt  -  1)/  2  +  ih  -  1;	  final    double    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	26	None	replace
60	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip,  jpt);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip,  jpt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  recip,  jpt);	  zMatrix.setEntry(0,    nfm,    nfxm,    recip,    ih);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)	57	None	replace
61	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -1,  -1,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int,int,int)  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -1,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  -1,  -1,  -1);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int,int,int)	38	None	replace
62	[BUG]  [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  -1,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  -1,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  jpt,  nfxm,  -1,  -recip);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)	38	None	replace
63	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -1,  -recip,  alphaCauchy);  [CE]  cannot  find  symbol  alphaCauchy  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -1,  -recip,  alphaCauchy);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  -1,  -recip,  alphaCauchy);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1,    -recip);    	non-compiled	[CE]  cannot  find  symbol  alphaCauchy	38	None	replace
64	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  jpt,  -1,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  jpt,  -1,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  jpt,  -1,  -recip);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)	38	None	replace
65	[BUG]  [BUGGY]  final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  alphaCauchy  -  1;  [CE]  cannot  find  symbol  alphaCauchy  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  alphaCauchy  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  alphaCauchy  -  1;	  final    double    ih    =    jpt    *    (ipt    -    1)/    2    +    dsqCrvmin    -    1;    	non-compiled	[CE]  cannot  find  symbol  alphaCauchy	25	None	replace
66	[BUG]  [BUGGY]  final  double  ih  =  nfm  *  (ipt  -  1)/  2  +  nfm  -  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  nfm  *  (ipt  -  1)/  2  +  nfm  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  nfm  *  (ipt  -  1)/  2  +  nfm  -  1;	  final    double    ih    =    jpt    *    (ipt    -    1)/    2    +    dsqCrvmin    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	25	None	replace
67	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  (jpt  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	77	1	replace
68	[BUG]  [BUGGY]  final  int  ih  =  (jpt  -  1)/  2  +  jpt  -  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  (jpt  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	77	1	replace
69	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  (jpt  -  1)/  2  *  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  (jpt  -  1)/  2  *  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  OutOfRangeException  	77	1	replace
70	[BUG]  [BUGGY]  final  int  ih  =  (jpt  -  1)/  2  *  jpt  -  1;  [FE]  OutOfRangeException  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  (jpt  -  1)/  2  *  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  (jpt  -  1)/  2  *  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  OutOfRangeException  	77	1	replace
71	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =(jpt  -  1)*  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =(jpt  -  1)*  2  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	77	1	replace
72	[BUG]  [BUGGY]  final  int  ih  =(jpt  -  1)*  2  +  jpt  -  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =(jpt  -  1)*  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =(jpt  -  1)*  2  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	77	1	replace
73	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  nfxm,  -recip);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	152	None	replace
74	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
75	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
76	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
77	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
78	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(ipt,  jpt,  -nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
79	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(ipt,  jpt,  -nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
80	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(jpt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(jpt,  jpt,  -nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
81	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(jpt,  jpt,  -nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(jpt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(jpt,  jpt,  -nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
82	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
83	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
84	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	92	None	replace
85	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	92	None	replace
86	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	92	None	replace
87	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	92	None	replace
88	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  nfm,  -recip);	  zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	22	None	replace
89	[BUG]  [BUGGY]  zMatrix.setEntry(ih,  nfm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ih,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ih,  nfm,  -recip);	  zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	22	None	replace
90	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  lowerBound,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  lowerBound,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  nfxm,  lowerBound,  upperBound);	  zMatrix.setEntry(jpt,    nfxm,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[])	8	None	replace
91	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[])  [FE]                        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  jpt,  upperBound);	  zMatrix.setEntry(jpt,    nfxm,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[])	8	None	replace
92	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  lowBound,  upperBound);  [CE]  cannot  find  symbol  lowBound  [FE]                          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  lowBound,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  nfxm,  lowBound,  upperBound);	  zMatrix.setEntry(jpt,    nfxm,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  lowBound	8	None	replace
93	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
94	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
95	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
96	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
97	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
98	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
99	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
100	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
101	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]            OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
102	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]            OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
103	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	122	None	replace
104	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	122	None	replace
105	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	122	None	replace
106	[BUG]  [BUGGY]  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  [CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    1    *    (ipt    -    1)/    2    +    ipt    -    1;    final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;	  	non-compiled	[CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])	128	None	add
107	[BUG]  [BUGGY]  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  [CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    1    *    (ipt    -    1)/    2    +    ipt    -    1;    int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;	  	non-compiled	[CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])	128	None	add
108	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
109	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
110	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
111	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
112	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
113	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
114	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
115	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
116	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);	  	compilable	  [FE]  OutOfRangeException  	12	1	add
117	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);	  	compilable	  [FE]  OutOfRangeException  	12	1	add
118	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -2,  -1);	  	compilable	  [FE]  OutOfRangeException  	12	1	add
119	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -2,  -1);	  	compilable	  [FE]  OutOfRangeException  	12	1	add
120	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	12	1	add
121	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	12	1	add
122	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  ZMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [CE]  cannot  find  symbol  ZMatrix  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  ZMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    ZMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	12	None	add
123	[BUG]  [BUGGY]  final  double  ih  =  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  (jpt  -  1)/  2  +  jpt  -  1;	  final    double    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	40	None	replace
124	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  nfxm,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(jpt,    nfxm,    -recip);    BOBYQAOptimizer$PathIsExploredException    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	95	None	replace
125	[BUG]  [BUGGY]  nfxm.setEntry(ipt,  nfxm,  -recip);  [CE]  int  cannot  be  dereferenced  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  nfxm.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	nfxm.setEntry(ipt,  nfxm,  -recip);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -r);    	non-compiled	[CE]  int  cannot  be  dereferenced	31	None	replace
126	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	replace
127	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  ipt  -  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	replace
128	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	49	1	add
129	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	49	1	add
130	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  bMatrix.setEntry(jpt,  nfxm,  -dsqCrvmin);  [CE]  cannot  find  symbol  dsqCrvmin  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  bMatrix.setEntry(jpt,  nfxm,  -dsqCrvmin);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  bMatrix.setEntry(jpt,  nfxm,  -dsqCrvmin);	  	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	49	None	add
131	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	49	1	add
132	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	49	1	add
133	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  OutOfRangeException  	49	1	add
134	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  OutOfRangeException  	49	1	add
135	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1);  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1);	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1);    	non-compiled	[CE]  ';'  expected	153	None	replace
136	[BUG]  [BUGGY]  final  int  jpt  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  jpt  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  jpt  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    jpt    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	76	None	replace
137	[BUG]  [BUGGY]  final  int  jpt  =  ipt  *  (ipt  -  1)/  2  +  jpt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  jpt  =  ipt  *  (ipt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  jpt  =  ipt  *  (ipt  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    jpt    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	76	None	replace
138	[BUG]  [BUGGY]  final  double  ih  =  lowerBound  *  (ipt  -  1)/  2  +  jpt  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  lowerBound  *  (ipt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  lowerBound  *  (ipt  -  1)/  2  +  jpt  -  1;	  final    double    ih    =    jpt    *    (ipt    -    1)/    2    +    lowerBound    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	90	None	replace
139	[BUG]  [BUGGY]  final  double  ih  =  upperBound  *  (ipt  -  1)/  2  +  jpt  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  upperBound  *  (ipt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  upperBound  *  (ipt  -  1)/  2  +  jpt  -  1;	  final    double    ih    =    jpt    *    (ipt    -    1)/    2    +    lowerBound    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	90	None	replace
140	[BUG]  [BUGGY]  final  double  ih  =  lowerBound  *  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  lowerBound  *  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  lowerBound  *  (jpt  -  1)/  2  +  jpt  -  1;	  final    double    ih    =    jpt    *    (ipt    -    1)/    2    +    lowerBound    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	90	None	replace
141	[BUG]  [BUGGY]  final  double  ih  =  upperBound  *  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  upperBound  *  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  upperBound  *  (jpt  -  1)/  2  +  jpt  -  1;	  final    double    ih    =    jpt    *    (ipt    -    1)/    2    +    lowerBound    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	90	None	replace
142	[BUG]  [BUGGY]  final  double  ih  =  (jpt  *  (ipt  -  1)/  2  +  jpt  -  1);  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  (jpt  *  (ipt  -  1)/  2  +  jpt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  (jpt  *  (ipt  -  1)/  2  +  jpt  -  1);	  final    double    ih    =    (ipt    *    (jpt    -    1)/    2    +    jpt    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	111	None	replace
143	[BUG]  [BUGGY]  final  double  ih  =  (jpt  *  (ipt  -  1)/  2)+  jpt  -  1);  [CE]  ';'  expected  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  (jpt  *  (ipt  -  1)/  2)+  jpt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  (jpt  *  (ipt  -  1)/  2)+  jpt  -  1);	  final    double    ih    =    (ipt    *    (jpt    -    1)/    2    +    jpt    -    1);    	non-compiled	[CE]  ';'  expected	111	None	replace
144	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -ih);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -ih);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  nfxm,  -ih);	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rcip);    	non-compiled	[CE]  cannot  find  symbol  ih	157	None	replace
145	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -i);  [CE]  cannot  find  symbol  i  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -i);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  nfxm,  -i);	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rcip);    	non-compiled	[CE]  cannot  find  symbol  i	157	None	replace
146	[BUG]  [BUGGY]  nfxm.setEntry(jpt,  nfxm,  -recip);  [CE]  int  cannot  be  dereferenced  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  nfxm.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	nfxm.setEntry(jpt,  nfxm,  -recip);	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rcip);    	non-compiled	[CE]  int  cannot  be  dereferenced	157	None	replace
147	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =(jpt  -  1)*(jpt  -  1)/  2  +  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =(jpt  -  1)*(jpt  -  1)/  2  +  1;	  final    int    ih    =    (jpt    -    1)*(jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	replace
148	[BUG]  [BUGGY]  final  int  ih  =(jpt  -  1)*(jpt  -  1)/  2  +  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =(jpt  -  1)*(jpt  -  1)/  2  +  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =(jpt  -  1)*(jpt  -  1)/  2  +  1;	  final    int    ih    =    (jpt    -    1)*(jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	43	1	replace
149	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	150	1	add
150	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	150	1	add
151	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	150	1	add
152	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	150	1	add
153	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	150	1	add
154	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	150	1	add
155	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	150	1	add
156	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	150	1	add
157	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	150	1	add
158	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	150	1	add
159	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	add
160	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	add
161	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	add
162	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	add
163	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	add
164	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	add
165	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  jpt);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  jpt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  jpt);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(zMatrix);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	15	None	replace
166	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(bMatrix);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(bMatrix);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(bMatrix);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(zMatrix);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	15	None	replace
167	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  ih);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  ih);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  ih);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(zMatrix);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	15	None	replace
168	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(jpt,  nfxm);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(jpt,  nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(jpt,  nfxm);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(nfxm);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	114	None	replace
169	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(nfxm,  jpt);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(nfxm,  jpt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(nfxm,  jpt);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(nfxm);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	114	None	replace
170	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfm,  -test);  [CE]  cannot  find  symbol  test  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfm,  -test);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfm,  -test);	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -test);    	non-compiled	[CE]  cannot  find  symbol  test	146	None	replace
171	[BUG]  [BUGGY]  nfm.setEntry(ipt,  nfm,  -recip);  [CE]  int  cannot  be  dereferenced  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  nfm.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	nfm.setEntry(ipt,  nfm,  -recip);	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -test);    	non-compiled	[CE]  int  cannot  be  dereferenced	146	None	replace
172	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	127	None	replace
173	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	127	None	replace
174	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	127	None	replace
175	[BUG]  [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  nfm,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int,int)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  nfm,  nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  jpt,  nfxm,  nfm,  nfxm);	  zMatrix.setEntry(0,    nfm,    nfxm,    jpt,    recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int,int)	158	None	replace
176	[BUG]  [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  nfm,  recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  nfm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  jpt,  nfxm,  nfm,  recip);	  zMatrix.setEntry(0,    nfm,    nfxm,    jpt,    recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)	158	None	replace
177	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  jpt,  ih,  recip);  [CE]  cannot  find  symbol  ih  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  jpt,  ih,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  jpt,  ih,  recip);	  zMatrix.setEntry(0,    nfm,    nfxm,    jpt,    recip);    	non-compiled	[CE]  cannot  find  symbol  ih	158	None	replace
178	[BUG]  [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  nfm);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int)  [FE]                        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  nfm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  jpt,  nfxm,  nfm);	  zMatrix.setEntry(0,    nfm,    nfxm,    jpt,    recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int)	158	None	replace
179	[BUG]  [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	47	None	replace
180	[BUG]  [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	47	None	replace
181	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	143	1	add
182	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	143	1	add
183	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	143	1	add
184	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	143	1	add
185	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	143	1	add
186	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	143	1	add
187	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	143	1	add
188	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	143	1	add
189	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  jpt,  -recip);  [CE]  cannot  find  symbol  ih  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  jpt,  -recip);	  zMatrix.setEntry(i,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	34	None	replace
190	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  -recip);	  zMatrix.setEntry(i,    jpt,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	34	None	replace
191	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  0,  -1);  [CE]  cannot  find  symbol  ih  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  0,  -1);	  zMatrix.setEntry(ipt,    0,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	3	None	replace
192	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  0,  -1);  [CE]  cannot  find  symbol  ih  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  0,  -1);	  zMatrix.setEntry(ipt,    0,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	3	None	replace
193	[BUG]  [BUGGY]  zMatrix.setEntry(i,  0,  -1);  [CE]  cannot  find  symbol  i  [FE]                OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(i,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(i,  0,  -1);	  zMatrix.setEntry(ipt,    0,    -1);    	non-compiled	[CE]  cannot  find  symbol  i	3	None	replace
194	[BUG]  [BUGGY]  zMatrix.setEntry(ih,  0,  -1);  [CE]  cannot  find  symbol  ih  [FE]                  OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ih,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ih,  0,  -1);	  zMatrix.setEntry(ipt,    0,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	3	None	replace
195	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -in);    	non-compiled	[CE]  cannot  find  symbol  ih	68	None	replace
196	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  zMatrix.setEntry  [CE]  not  a  statement  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  zMatrix.setEntry  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  zMatrix.setEntry	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -in);    	non-compiled	[CE]  not  a  statement	68	None	replace
197	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfm,  -label);  [CE]  cannot  find  symbol  label  [FE]                OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfm,  -label);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfm,  -label);	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -label);    	non-compiled	[CE]  cannot  find  symbol  label	70	None	replace
198	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -label);  }  [CE]  cannot  find  symbol  label  [FE]                  OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -label);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -label);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -label);    	non-compiled	[CE]  cannot  find  symbol  label	70	None	replace
199	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -label);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  label  [FE]                    OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -label);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -label);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -label);    	non-compiled	[CE]  cannot  find  symbol  label	70	None	replace
200	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -label);  }  else  {  zMatrix.  [CE]  <identifier>  expected  [FE]                      OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -label);  }  else  {  zMatrix.  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -label);  }  else  {  zMatrix.	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -label);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
201	[BUG]  [BUGGY]  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    ipt    *    (jpt    -    1)/    2    +    jpt    -    1;    final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])	130	None	add
202	[BUG]  [BUGGY]  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  jpt  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  jpt  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    ipt    *    (jpt    -    1)/    2    +    jpt    -    1;    final  int  jpt  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	130	None	add
203	[BUG]  [BUGGY]  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ipt  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  ipt  is  already  defined  in  method  prelim(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ipt  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    ipt    *    (jpt    -    1)/    2    +    jpt    -    1;    final  int  ipt  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  ipt  is  already  defined  in  method  prelim(double[],double[])	130	None	add
204	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	59	None	replace
205	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	59	None	replace
206	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	59	None	replace
207	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    0);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	98	1	add
208	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    0);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	98	1	add
209	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    0);    zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	98	1	add
210	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  -1,  -1);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    0);    zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	98	1	add
211	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    0);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	98	1	add
212	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    0);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	98	1	add
213	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    0);    zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	98	1	add
214	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    0);    zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	98	1	add
215	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  jpt,  -1);  [CE]  cannot  find  symbol  ih  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  jpt,  -1);	  zMatrix.setEntry(ipt,    jpt,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	33	None	replace
216	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -1);  [CE]  cannot  find  symbol  ih  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  jpt,  -1);	  zMatrix.setEntry(ipt,    jpt,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	33	None	replace
217	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,int)  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  -1);	  zMatrix.setEntry(ipt,    jpt,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int)	33	None	replace
218	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
219	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
220	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
221	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
222	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
223	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
224	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
225	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
226	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]            OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
227	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]            OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
228	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -r);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	69	None	replace
229	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(jpt,  ih);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(jpt,  ih);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(jpt,  ih);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(jpt);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	14	None	replace
230	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(jpt,  zMatrix);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(jpt,  zMatrix);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(jpt,  zMatrix);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(jpt);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	14	None	replace
231	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    0,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	156	None	replace
232	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    0,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	156	None	replace
233	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  (jpt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  (jpt  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	110	1	replace
234	[BUG]  [BUGGY]  final  int  ih  =  (jpt  -  1)/  2  +  ipt  -  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  (jpt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  (jpt  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	110	1	replace
235	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfm,  -recipient);  [CE]  cannot  find  symbol  recipient  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfm,  -recipient);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfm,  -recipient);	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -getRecipient);    	non-compiled	[CE]  cannot  find  symbol  recipient	119	None	replace
236	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recipient);  }  [CE]  cannot  find  symbol  recipient  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recipient);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recipient);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -getRecipient);    	non-compiled	[CE]  cannot  find  symbol  recipient	119	None	replace
237	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recipient);  zMatrix.setEntry(ipt,  nfm,  -recipient);  }  [CE]  cannot  find  symbol  recipient  [FE]                OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recipient);  zMatrix.setEntry(ipt,  nfm,  -recipient);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recipient);  zMatrix.setEntry(ipt,  nfm,  -recipient);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -getRecipient);    	non-compiled	[CE]  cannot  find  symbol  recipient	119	None	replace
238	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	124	None	replace
239	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	124	None	replace
240	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	124	None	replace
241	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  -recip);	  zMatrix.setEntry(0,    nfm,    nfxm,    -i);    	non-compiled	[CE]  cannot  find  symbol  ih	102	None	replace
242	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  recip,  -i);  [CE]  cannot  find  symbol  i  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  recip,  -i);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  recip,  -i);	  zMatrix.setEntry(0,    nfm,    nfxm,    -i);    	non-compiled	[CE]  cannot  find  symbol  i	102	None	replace
243	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [CE]  cannot  find  symbol  ih  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  jpt,  -nfxm);	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -r);    	non-compiled	[CE]  cannot  find  symbol  ih	84	None	replace
244	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  jpt,  -dsqCrvmin);  [CE]  cannot  find  symbol  dsqCrvmin  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  jpt,  -dsqCrvmin);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  jpt,  -dsqCrvmin);	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -r);    	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	84	None	replace
245	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	144	None	replace
246	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	144	None	replace
247	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	144	None	replace
248	[BUG]  [BUGGY]  ZMatrix.setEntry(ipt,  -1,  -1);  [CE]  cannot  find  symbol  ZMatrix  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  ZMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	ZMatrix.setEntry(ipt,  -1,  -1);	          zMatrix.setEntry(ipt,    -1,    -1);    ZMatrix.setEntry(ipt,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	11	None	replace
249	[BUG]  [BUGGY]  zMatrix.setEntry(0,  0,  -1);  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  0,  -1);	  zMatrix.setEntry(0,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	2	None	replace
250	[BUG]  [BUGGY]  zMatrix.setEntry(0,  1,  -1);  [CE]  cannot  find  symbol  ih  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  1,  -1);	  zMatrix.setEntry(0,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	2	None	replace
251	[BUG]  [BUGGY]  zMatrix.setEntry(0,  0,  1);  [CE]  cannot  find  symbol  ih  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  0,  1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  0,  1);	  zMatrix.setEntry(0,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	2	None	replace
252	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  -recip,  ih);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  -recip,  ih);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  -recip,  ih);	  zMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	100	None	replace
253	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  -recip,  jpt);  [CE]  no  suitable  method  found  for  setEntry(int,double,int)  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  -recip,  jpt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  -recip,  jpt);	  zMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double,int)	100	None	replace
254	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	66	None	replace
255	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	66	None	replace
256	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	91	1	add
257	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	91	1	add
258	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	91	1	add
259	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	91	1	add
260	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	91	1	add
261	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	91	1	add
262	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	91	1	add
263	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	91	1	add
264	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
265	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
266	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
267	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
268	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
269	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
270	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
271	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	123	1	add
272	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
273	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
274	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
275	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
276	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
277	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
278	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
279	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
280	[BUG]  [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -r);  [CE]  cannot  find  symbol  r  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -r);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ipt,  nfxm,  -r);	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -r);    	non-compiled	[CE]  cannot  find  symbol  r	51	None	replace
281	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	94	None	replace
282	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	94	None	replace
283	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  nfxm,  -1);	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	94	None	replace
284	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -1);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	94	None	replace
285	[BUG]  [BUGGY]  final  double  ih  =(jpt  -  1)*(jpt  -  1)/  2  +  ipt  -  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =(jpt  -  1)*(jpt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =(jpt  -  1)*(jpt  -  1)/  2  +  ipt  -  1;	  final    double    ih    =    jpt    *(jpt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	41	None	replace
286	[BUG]  [BUGGY]  final  double  ih  =(jpt  *(jpt  -  1)/  2)/  2  +  ipt  -  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =(jpt  *(jpt  -  1)/  2)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =(jpt  *(jpt  -  1)/  2)/  2  +  ipt  -  1;	  final    double    ih    =    jpt    *(jpt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	41	None	replace
287	[BUG]  [BUGGY]  final  double  ih  =  ih  *  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  ih  *  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  ih  *  (jpt  -  1)/  2  +  jpt  -  1;	  final    double    ih    =    jpt    *    (jpt    -    1)/    2    +    ih    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	142	None	replace
288	[BUG]  [BUGGY]  final  double  ih  =  (ipt  -  1)/  2  +  jpt  -  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  (ipt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  (ipt  -  1)/  2  +  jpt  -  1;	  final    double    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	24	None	replace
289	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  ih);  [CE]  cannot  find  symbol  ih  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  ih);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  ih);	  zMatrix.setEntry(0,    nfm,    nfxm,    -recip,    alphaCauchy);    	non-compiled	[CE]  cannot  find  symbol  ih	37	None	replace
290	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  dsqCrvmin);  [CE]  cannot  find  symbol  dsqCrvmin  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  dsqCrvmin);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  dsqCrvmin);	  zMatrix.setEntry(0,    nfm,    nfxm,    -recip,    alphaCauchy);    	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	37	None	replace
291	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  1);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  1);	  zMatrix.setEntry(0,    nfm,    nfxm,    -recip,    alphaCauchy);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)	37	None	replace
292	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip,  ih);  [CE]  cannot  find  symbol  ih  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip,  ih);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  -recip,  ih);	  zMatrix.setEntry(0,    nfm,    nfxm,    -recip,    alphaCauchy);    	non-compiled	[CE]  cannot  find  symbol  ih	37	None	replace
293	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -1);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  nfxm,  -1);	  zMatrix.setEntry(nfm,    nfxm,    -i);    	non-compiled	[CE]  cannot  find  symbol  ih	97	None	replace
294	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  -recip);	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(nfm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	145	None	replace
295	[BUG]  [BUGGY]  nfm.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [CE]  int  cannot  be  dereferenced  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  nfm.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	nfm.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(nfm,    -recip);    	non-compiled	[CE]  int  cannot  be  dereferenced	145	None	replace
296	[BUG]  [BUGGY]  nfm.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(nfm,  -recip);  [CE]  int  cannot  be  dereferenced  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  nfm.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	nfm.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(nfm,  -recip);	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(nfm,    -recip);    	non-compiled	[CE]  int  cannot  be  dereferenced	145	None	replace
297	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
298	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
299	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
300	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
301	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
302	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
303	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
304	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
305	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -dsqCrvmin);  [CE]  cannot  find  symbol  dsqCrvmin  [FE]            OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -dsqCrvmin);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -dsqCrvmin);	  	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	121	None	add
306	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	81	None	replace
307	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	81	None	replace
308	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	81	None	replace
309	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,    jpt,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	81	None	replace
310	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  0,  0);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  0,  0);	  zMatrix.setEntry(ipt,    0,    0);    	non-compiled	[CE]  cannot  find  symbol  ih	1	None	replace
311	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  0,  0);  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  0,  0);	  zMatrix.setEntry(ipt,    0,    0);    	non-compiled	[CE]  cannot  find  symbol  ih	1	None	replace
312	[BUG]  [BUGGY]  zMatrix.setEntry(i,  0,  0);  [CE]  cannot  find  symbol  i  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(i,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(i,  0,  0);	  zMatrix.setEntry(ipt,    0,    0);    	non-compiled	[CE]  cannot  find  symbol  i	1	None	replace
313	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  0,  0);  [CE]  cannot  find  symbol  ih  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  0,  0);	  zMatrix.setEntry(ipt,    0,    0);    	non-compiled	[CE]  cannot  find  symbol  ih	1	None	replace
314	[BUG]  [BUGGY]  zMatrix.setEntry(lowerBound,  lowerBound,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(double[],double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(lowerBound,  lowerBound,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(lowerBound,  lowerBound,  upperBound);	  zMatrix.setEntry(lowerBound,    nfxm,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double[],double[],double[])	108	None	replace
315	[BUG]  [BUGGY]  zMatrix.setEntry(lowerBound,  upperBound,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(double[],double[],int)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(lowerBound,  upperBound,  nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(lowerBound,  upperBound,  nfxm);	  zMatrix.setEntry(lowerBound,    nfxm,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double[],double[],int)	108	None	replace
316	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  lowerBound,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(int,double[],double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  lowerBound,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  lowerBound,  upperBound);	  zMatrix.setEntry(lowerBound,    nfxm,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double[],double[])	108	None	replace
317	[BUG]  [BUGGY]  zMatrix.setEntry(lowerBound,  nfxm,  upperBound,  dsqCrvmin);  [CE]  cannot  find  symbol  dsqCrvmin  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(lowerBound,  nfxm,  upperBound,  dsqCrvmin);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(lowerBound,  nfxm,  upperBound,  dsqCrvmin);	  zMatrix.setEntry(lowerBound,    nfxm,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	108	None	replace
318	[BUG]  [BUGGY]  zMatrix.setEntry(lowerBound,  nfxm,  ipt);  [CE]  no  suitable  method  found  for  setEntry(double[],int,int)  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(lowerBound,  nfxm,  ipt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(lowerBound,  nfxm,  ipt);	  zMatrix.setEntry(upperBound,    nfxm,    ipt);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double[],int,int)	147	None	replace
319	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  upperBound,  ipt);  [CE]  no  suitable  method  found  for  setEntry(int,double[],int)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  upperBound,  ipt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  upperBound,  ipt);	  zMatrix.setEntry(upperBound,    nfxm,    ipt);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double[],int)	147	None	replace
320	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[])  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  nfxm,  upperBound);	  zMatrix.setEntry(upperBound,    nfxm,    ipt);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[])	147	None	replace
321	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	65	1	add
322	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	65	1	add
323	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	65	1	add
324	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	65	1	add
325	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	65	1	add
326	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	65	1	add
327	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -1);  zMatrix.setEntry(jpt,  nfm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -1);  zMatrix.setEntry(jpt,  nfm,  -1);	  	compilable	  [FE]  OutOfRangeException  	65	1	add
328	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -1);  zMatrix.setEntry(jpt,  nfm,  -1);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -1);  zMatrix.setEntry(jpt,  nfm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -1);  zMatrix.setEntry(jpt,  nfm,  -1);	  	compilable	  [FE]  OutOfRangeException  	65	1	add
329	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	116	None	replace
330	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	116	None	replace
331	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	116	None	replace
332	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
333	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
334	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
335	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
336	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
337	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
338	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
339	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
340	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
341	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
342	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  jpt,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  jpt,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  jpt,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(ipt,    jpt,    -recip);    BOBYQAOptimizer$PathIsExploredException    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	107	None	replace
343	[BUG]  [BUGGY]  BMatrix.setEntry(ipt,  nfxm,  -recip);  [CE]  cannot  find  symbol  BMatrix  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BMatrix.setEntry(ipt,  nfxm,  -recip);	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -in);    	non-compiled	[CE]  cannot  find  symbol  BMatrix	112	None	replace
344	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	61	None	replace
345	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	61	None	replace
346	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	61	None	replace
347	[BUG]  [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -decip);  [CE]  cannot  find  symbol  decip  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -decip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ipt,  nfxm,  -decip);	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -decip);    	non-compiled	[CE]  cannot  find  symbol  decip	113	None	replace
348	[BUG]  [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  [CE]  cannot  find  symbol  dsqCrvmin  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -decip);    	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	113	None	replace
349	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	79	None	replace
350	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	79	None	replace
351	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	79	None	replace
352	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
353	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
354	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
355	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
356	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
357	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
358	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
359	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
360	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
361	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
362	[BUG]  [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  final  int  jpt  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  final  int  jpt  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    1    *(jpt    -    1)/    2    +    jpt    -    1;    final  int  jpt  =  1  *(jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	139	None	add
363	[BUG]  [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    1    *(jpt    -    1)/    2    +    jpt    -    1;    final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])	139	None	add
364	[BUG]  [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  int  jpt  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  int  jpt  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    1    *(jpt    -    1)/    2    +    jpt    -    1;    int  jpt  =  1  *(jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	139	None	add
365	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,int)  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  -1);	  zMatrix.setEntry(ipt,    nfm,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int)	120	None	replace
366	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -1);  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  nfm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  nfm,  -1);	  zMatrix.setEntry(ipt,    nfm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	120	None	replace
367	[BUG]  [BUGGY]  zMatrix.setEntry(ih,  nfm,  -1);  [CE]  cannot  find  symbol  ih  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ih,  nfm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ih,  nfm,  -1);	  zMatrix.setEntry(ipt,    nfm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	120	None	replace
368	[BUG]  [BUGGY]  zMatrix.setEntry(i,  nfm,  -1);  [CE]  cannot  find  symbol  i  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(i,  nfm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(i,  nfm,  -1);	  zMatrix.setEntry(ipt,    nfm,    -1);    	non-compiled	[CE]  cannot  find  symbol  i	120	None	replace
369	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  jpt,  lowerBound,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  jpt,  lowerBound,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  jpt,  lowerBound,  upperBound);	  zMatrix.setEntry(ipt,    lowerBound,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[])	109	None	replace
370	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  lowerBound,  upperBound,  isMinimize);  [CE]  no  suitable  method  found  for  setEntry(int,double[],double[],boolean)  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  lowerBound,  upperBound,  isMinimize);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  lowerBound,  upperBound,  isMinimize);	  zMatrix.setEntry(ipt,    lowerBound,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double[],double[],boolean)	109	None	replace
371	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  ipt,  lowerBound,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  ipt,  lowerBound,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  ipt,  lowerBound,  upperBound);	  zMatrix.setEntry(ipt,    lowerBound,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[])	109	None	replace
372	[BUG]  [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  ZMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	ZMatrix.setEntry(jpt,  nfxm,  -recip);	          zMatrix.setEntry(jpt,    nfxm,    -recip);    ZMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	19	None	replace
373	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  ZMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ZMatrix  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  ZMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  ZMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    ZMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	19	None	replace
374	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -r);  [CE]  cannot  find  symbol  r  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  nfxm,  -r);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  nfxm,  -r);	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -r);    	non-compiled	[CE]  cannot  find  symbol  r	21	None	replace
375	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	add
376	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	add
377	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	add
378	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	add
379	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	add
380	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	add
381	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	add
382	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	add
383	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -i);    	non-compiled	[CE]  cannot  find  symbol  ih	20	None	replace
384	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -i);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	20	None	replace
385	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zMatri  [CE]  not  a  statement  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zMatri  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zMatri	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -i);    	non-compiled	[CE]  not  a  statement	20	None	replace
386	[BUG]  [BUGGY]  bMatrix.setEntry(nfxm,  jpt,  -recip);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(nfxm,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(nfxm,  jpt,  -recip);	  bMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	52	None	replace
387	[BUG]  [BUGGY]  bMatrix.setEntry(ih,  nfxm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ih,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ih,  nfxm,  -recip);	  bMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	52	None	replace
388	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	10	None	replace
389	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	10	None	replace
390	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	104	None	replace
391	[BUG]  [BUGGY]  bMatrix.setEntry(ipt,  jpt,  -1);  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ipt,  jpt,  -1);	          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	104	None	replace
392	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  bMatrix.setEntry(ipt,  jpt,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  bMatrix.setEntry(ipt,  jpt,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  bMatrix.setEntry(ipt,  jpt,  -1);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	104	None	replace
393	[BUG]  [BUGGY]  zMatrix.setEntry(ih,  jpt,  -recip);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ih,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ih,  jpt,  -recip);	  zMatrix.setEntry(jpt,    ipt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	32	None	replace
394	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  ih,  -recip);  [CE]  cannot  find  symbol  ih  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  ih,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  ih,  -recip);	  zMatrix.setEntry(jpt,    ipt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	32	None	replace
395	[BUG]  [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	50	None	replace
396	[BUG]  [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	50	None	replace
397	[BUG]  [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	50	None	replace
398	[BUG]  [BUGGY]  final  int  jpt  =  jpt  *  (ipt  -  1)/  2  +  ipt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  jpt  =  jpt  *  (ipt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  jpt  =  jpt  *  (ipt  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    jpt    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	73	None	replace
399	[BUG]  [BUGGY]  final  int  jpt  =  ipt  *  (ipt  -  1)/  2  +  ipt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  jpt  =  ipt  *  (ipt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  jpt  =  ipt  *  (ipt  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    jpt    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	73	None	replace
400	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	18	None	replace
401	[BUG]  [BUGGY]  zMatrix.setEntry(0,  jpt,  nfm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  jpt,  nfm,  -recip);	  zMatrix.setEntry(0,    nfm,    jpt,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	154	None	replace
402	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  jpt,  -recip,  alphaCauchy);  [CE]  cannot  find  symbol  alphaCauchy  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  jpt,  -recip,  alphaCauchy);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  jpt,  -recip,  alphaCauchy);	  zMatrix.setEntry(0,    nfm,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  alphaCauchy	154	None	replace
403	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  jpt,  -recip,  ih);  [CE]  cannot  find  symbol  ih  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  jpt,  -recip,  ih);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  jpt,  -recip,  ih);	  zMatrix.setEntry(0,    nfm,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	154	None	replace
404	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    -2,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	13	None	replace
405	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    -2,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	13	None	replace
406	[BUG]  [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -alphaCauchy);  [CE]  cannot  find  symbol  alphaCauchy  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -alphaCauchy);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ipt,  nfxm,  -alphaCauchy);	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -dsqCrvmin);    	non-compiled	[CE]  cannot  find  symbol  alphaCauchy	48	None	replace
407	[BUG]  [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -rvmin);  [CE]  cannot  find  symbol  rvmin  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -rvmin);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ipt,  nfxm,  -rvmin);	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -dsqCrvmin);    	non-compiled	[CE]  cannot  find  symbol  rvmin	48	None	replace
408	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  upperBound,  isMinimize);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[],boolean)  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  upperBound,  isMinimize);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  upperBound,  isMinimize);	  zMatrix.setEntry(ipt,    nfxm,    upperBound,    dsqCrvmin);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[],boolean)	7	None	replace
409	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  upperBound,  alphaCauchy);  [CE]  cannot  find  symbol  alphaCauchy  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  upperBound,  alphaCauchy);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  upperBound,  alphaCauchy);	  zMatrix.setEntry(ipt,    nfxm,    upperBound,    dsqCrvmin);    	non-compiled	[CE]  cannot  find  symbol  alphaCauchy	7	None	replace
410	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  upperBound,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[],double)  [FE]                        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  upperBound,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  upperBound,  -recip);	  zMatrix.setEntry(ipt,    nfxm,    upperBound,    dsqCrvmin);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[],double)	7	None	replace
411	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  lowerBound,  isMinimize);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[],boolean)  [FE]                          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  lowerBound,  isMinimize);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  lowerBound,  isMinimize);	  zMatrix.setEntry(ipt,    nfxm,    upperBound,    dsqCrvmin);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[],boolean)	7	None	replace
412	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(null,  jpt);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(null,  jpt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(null,  jpt);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(null);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	16	None	replace
413	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
414	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
415	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
416	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
417	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
418	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
419	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
420	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
421	[BUG]  [BUGGY]  bMatrix.setEntry(ipt,  nfm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ipt,  nfm,  -recip);	          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	118	None	replace
422	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	118	None	replace
423	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	118	None	replace
424	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,    nfm,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	118	None	replace
425	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	93	1	add
426	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	93	1	add
427	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	93	1	add
428	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	93	1	add
429	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	93	1	add
430	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	93	1	add
431	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	93	1	add
432	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	93	1	add
433	[BUG]  [BUGGY]  final  double  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    1    *(jpt    -    1)/    2    +    jpt    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	140	None	replace
434	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  +(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  1  +(jpt  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    1    *(jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	140	1	replace
435	[BUG]  [BUGGY]  final  int  ih  =  1  +(jpt  -  1)/  2  +  jpt  -  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  +(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  1  +(jpt  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    1    *(jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	140	1	replace
436	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt;	  final    int    ih    =    1    *(jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	140	1	replace
437	[BUG]  [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt;	  final    int    ih    =    1    *(jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	140	1	replace
438	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    jpt    *    (jpt    -    1)/    2    +    jpt    -    1;    final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])	44	None	add
439	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  jpt  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  jpt  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    jpt    *    (jpt    -    1)/    2    +    jpt    -    1;    final  int  jpt  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	44	None	add
440	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  jpt  =  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  jpt  =  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    jpt    *    (jpt    -    1)/    2    +    jpt    -    1;    final  int  jpt  =  (jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	44	None	add
441	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
442	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
443	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
444	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
445	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ih);  zMatrix.setEntry(jpt,  nfm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ih);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ih);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ih	62	None	add
446	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ih,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ih,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(ih,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ih	62	None	add
447	[BUG]  [BUGGY]  bMatrix.setEntry(nfxm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(nfxm,  -recip);	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	134	None	replace
448	[BUG]  [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  }  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	134	None	replace
449	[BUG]  [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(nfxm,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  }  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(nfxm,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  bMatrix.setEntry(nfxm,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	134	None	replace
450	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	86	None	replace
451	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	86	None	replace
452	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	86	None	replace
453	[BUG]  [BUGGY]  final  int  ih  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    (jpt    -    1)*(jpt    -    1)/    2    +    jpt    -    1;    final  int  ih  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])	42	None	add
454	[BUG]  [BUGGY]  final  int  ih  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;  final  int  jpt  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;  final  int  jpt  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    (jpt    -    1)*(jpt    -    1)/    2    +    jpt    -    1;    final  int  jpt  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	42	None	add
455	[BUG]  [BUGGY]  final  int  ih  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1);  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    (jpt    -    1)*(jpt    -    1)/    2    +    jpt    -    1;    final  int  ih  =  (jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1);	  	non-compiled	[CE]  ';'  expected	42	None	add
456	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  lowerBound,  upperBound,  isMinimize);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[],boolean)  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  lowerBound,  upperBound,  isMinimize);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  lowerBound,  upperBound,  isMinimize);	  zMatrix.setEntry(ipt,    nfxm,    lowerBound,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[],boolean)	5	None	replace
457	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  upperBound,  lowerBound);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  upperBound,  lowerBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  upperBound,  lowerBound);	  zMatrix.setEntry(ipt,    nfxm,    lowerBound,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[])	5	None	replace
458	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  lowerBound,  upperBound,  alphaCauchy);  [CE]  cannot  find  symbol  alphaCauchy  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  lowerBound,  upperBound,  alphaCauchy);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  lowerBound,  upperBound,  alphaCauchy);	  zMatrix.setEntry(ipt,    nfxm,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  alphaCauchy	5	None	replace
459	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  lowerBound,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[])  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  lowerBound,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  nfxm,  lowerBound,  upperBound);	  zMatrix.setEntry(ipt,    nfxm,    lowerBound,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[],double[])	5	None	replace
460	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	60	1	add
461	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	60	1	add
462	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	60	1	add
463	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	60	1	add
464	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ih,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ih,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ih,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  ih	60	None	add
465	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	60	1	add
466	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	60	1	add
467	[BUG]  [BUGGY]  final  double  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    1    *    (ipt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	129	None	replace
468	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  1,  -1);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  1,  -1);	  zMatrix.setEntry(ipt,    1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	135	None	replace
469	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  1,  -1);  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  1,  -1);	  zMatrix.setEntry(ipt,    1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	135	None	replace
470	[BUG]  [BUGGY]  zMatrix.setEntry(i,  1,  -1);  [CE]  cannot  find  symbol  i  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(i,  1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(i,  1,  -1);	  zMatrix.setEntry(ipt,    1,    -1);    	non-compiled	[CE]  cannot  find  symbol  i	135	None	replace
471	[BUG]  [BUGGY]  ZMatrix.setEntry(ipt,  nfxm,  -recip);  [CE]  cannot  find  symbol  ZMatrix  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  ZMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	ZMatrix.setEntry(ipt,  nfxm,  -recip);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    ZMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	29	None	replace
472	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    ZMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	29	None	replace
473	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
474	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
475	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
476	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
477	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
478	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
479	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
480	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [FE]  OutOfRangeException  [FE]          OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
481	[BUG]  [BUGGY]  bMatrix.setEntry(jpt,  nfxm,  -1);  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(jpt,  nfxm,  -1);	  bMatrix.setEntry(ipt,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	53	None	replace
482	[BUG]  [BUGGY]  bMatrix.setEntry(nfxm,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,int)  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(nfxm,  -1);	  bMatrix.setEntry(ipt,    nfxm,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int)	53	None	replace
483	[BUG]  [BUGGY]  bMatrix.setEntry(ih,  nfxm,  -1);  [CE]  cannot  find  symbol  ih  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ih,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ih,  nfxm,  -1);	  bMatrix.setEntry(ipt,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	53	None	replace
484	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    0,    0);    	non-compiled	[CE]  cannot  find  symbol  ih	99	None	replace
485	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    0,    0);    	non-compiled	[CE]  cannot  find  symbol  ih	99	None	replace
486	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  }  [CE]  not  a  statement  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    0,    0);    	non-compiled	[CE]  not  a  statement	99	None	replace
487	[BUG]  [BUGGY]  zMatrix.setEntry(0,  0,  2);  [CE]  cannot  find  symbol  ih  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  0,  2);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  0,  2);	  zMatrix.setEntry(0,    0,    0);    	non-compiled	[CE]  cannot  find  symbol  ih	4	None	replace
488	[BUG]  [BUGGY]  zMatrix.setEntry(0,  0,  null);  [CE]  no  suitable  method  found  for  setEntry(int,int,<null>)  [FE]                OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  0,  null);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  0,  null);	  zMatrix.setEntry(0,    0,    0);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,<null>)	4	None	replace
489	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	151	None	replace
490	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	151	None	replace
491	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	151	None	replace
492	[BUG]  [BUGGY]  final  double  ih  =  jpt  *  (jpt  -  1)/  2  +  upperBound  -  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  jpt  *  (jpt  -  1)/  2  +  upperBound  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  jpt  *  (jpt  -  1)/  2  +  upperBound  -  1;	  final    double    ih    =    jpt    *    (jpt    -    1)/    2    +    jpt    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	141	None	replace
493	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  recip,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,int,double,int)  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  recip,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  recip,  -1);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double,int)	101	None	replace
494	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -1,  ih);  [CE]  cannot  find  symbol  ih  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -1,  ih);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  -1,  ih);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	101	None	replace
495	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  ih,  -1);  [CE]  cannot  find  symbol  ih  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  ih,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  ih,  -1);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	101	None	replace
496	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
497	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
498	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
499	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
500	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
501	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
502	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
503	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
504	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  zMatrix.  [CE]  <identifier>  expected  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  zMatrix.  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  zMatrix.	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -dsqCrvmin);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
505	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	28	None	replace
506	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	28	None	replace
507	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	28	None	replace
508	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
509	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
510	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
511	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
512	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
513	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
514	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
515	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
516	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,int)  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  -1);	  zMatrix.setEntry(ipt,    nfxm,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int)	23	None	replace
517	[BUG]  [BUGGY]  zMatrix.setEntry(ih,  nfxm,  -1);  [CE]  cannot  find  symbol  ih  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ih,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ih,  nfxm,  -1);	  zMatrix.setEntry(ipt,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	23	None	replace
518	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	137	None	replace
519	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  jpt,  -recip);	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	137	None	replace
520	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	137	None	replace
521	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(nfm,  jpt,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(nfm,  jpt,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(nfm,  jpt,  -1);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	137	None	replace
522	[BUG]  [BUGGY]  nfm.setEntry(nfm,  nfxm,  -recip);  [CE]  int  cannot  be  dereferenced  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  nfm.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	nfm.setEntry(nfm,  nfxm,  -recip);	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -i);    	non-compiled	[CE]  int  cannot  be  dereferenced	64	None	replace
523	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  jpt,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfxm,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfxm,  jpt,  -recip);	  zMatrix.setEntry(0,    jpt,    nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double)	39	None	replace
524	[BUG]  [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  -recip,  alphaCauchy);  [CE]  cannot  find  symbol  alphaCauchy  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  -recip,  alphaCauchy);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  jpt,  nfxm,  -recip,  alphaCauchy);	  zMatrix.setEntry(0,    jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  alphaCauchy	39	None	replace
525	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  rh,  recip);  [CE]  cannot  find  symbol  rh  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  rh,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  rh,  recip);	  zMatrix.setEntry(0,    nfm,    nfxm,    ih,    recip);    	non-compiled	[CE]  cannot  find  symbol  rh	56	None	replace
526	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	83	None	replace
527	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	83	None	replace
528	[BUG]  [BUGGY]  bMatrix.setEntry(jpt,  -1,  -1);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(jpt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(jpt,  -1,  -1);	  bMatrix.setEntry(ipt,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	96	None	replace
529	[BUG]  [BUGGY]  bMatrix.setEntry(nfm,  -1,  -1);  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(nfm,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(nfm,  -1,  -1);	  bMatrix.setEntry(ipt,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	96	None	replace
530	[BUG]  [BUGGY]  bMatrix.setEntry(ih,  -1,  -1);  [CE]  cannot  find  symbol  ih  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ih,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ih,  -1,  -1);	  bMatrix.setEntry(ipt,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	96	None	replace
531	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	add
532	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	add
533	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	add
534	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	add
535	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	add
536	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	add
537	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	add
538	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	add
539	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	add
540	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	126	1	add
541	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  fm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  fm	59	None	replace
542	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  0,  -1);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
543	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  0,  -1);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
544	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
545	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  0);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
546	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ZMatrix  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    ZMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	29	None	replace
547	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
548	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
549	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
550	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
551	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  Math.min(ipt,  jpt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  Math.min(ipt,  jpt  -  1);	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	110	1	replace
552	[BUG]  [BUGGY]  final  int  ih  =  Math.min(ipt,  jpt  -  1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  Math.min(ipt,  jpt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  Math.min(ipt,  jpt  -  1);	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	110	1	replace
553	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  (jpt  -  1)/  2  +  ipt  *  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  (jpt  -  1)/  2  +  ipt  *  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	110	1	replace
554	[BUG]  [BUGGY]  final  int  ih  =  (jpt  -  1)/  2  +  ipt  *  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  (jpt  -  1)/  2  +  ipt  *  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  (jpt  -  1)/  2  +  ipt  *  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	110	1	replace
555	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
556	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
557	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
558	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
559	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
560	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	132	1	add
561	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(-1,  0,  -1);  zMatrix.setEntry(ipt,  0,  0);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(-1,  0,  -1);  zMatrix.setEntry(ipt,  0,  0);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(-1,  0,  -1);  zMatrix.setEntry(ipt,  0,  0);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    0,    0);    	non-compiled	[CE]  cannot  find  symbol  ih	99	None	replace
562	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  -recip);  [CE]  cannot  find  symbol  ih  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  jpt,  -recip);	  zMatrix.setEntry(i,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	34	None	replace
563	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix.  [CE]  <identifier>  expected  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix.  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix.	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -r);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
564	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfm,  -1);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  nfm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  nfm,  -1);	  zMatrix.setEntry(ipt,    nfm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	120	None	replace
565	[BUG]  [BUGGY]  final  double  ih  =  lowerBound  *  (ipt  -  1)/  2  +  upperBound  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  lowerBound  *  (ipt  -  1)/  2  +  upperBound  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  lowerBound  *  (ipt  -  1)/  2  +  upperBound  -  1;	  final    double    ih    =    jpt    *    (ipt    -    1)/    2    +    upperBound    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	89	None	replace
566	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -recip,  -ih);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  -recip,  -ih);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  -recip,  -ih);	  zMatrix.setEntry(jpt,    ipt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	32	None	replace
567	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	add
568	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	17	1	add
569	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	17	None	add
570	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -value);  [CE]  cannot  find  symbol  value  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -value);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  -value);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -prelim);    	non-compiled	[CE]  cannot  find  symbol  value	30	None	replace
571	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
572	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
573	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
574	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
575	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	80	None	add
576	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	58	1	add
577	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	58	1	add
578	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	58	1	add
579	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	58	1	add
580	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zMatrix.  [CE]  <identifier>  expected  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zMatrix.  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zMatrix.	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -r);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
581	[BUG]  [BUGGY]  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  nfm  *(jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  nfm  *(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    ipt    *    (jpt    -    1)/    2    +    jpt    -    1;    final  int  ih  =  nfm  *(jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])	130	None	add
582	[BUG]  [BUGGY]  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    ipt    *    (jpt    -    1)/    2    +    jpt    -    1;    final  int  ih  =  (jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])	130	None	add
583	[BUG]  [BUGGY]  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  ipt  *  (jpt  -  1)/  2)  +  jpt  -  1;  [CE]  ';'  expected  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  ipt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  ipt  *  (jpt  -  1)/  2)  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    ipt    *    (jpt    -    1)/    2    +    jpt    -    1;    final  int  ih  =  ipt  *  (jpt  -  1)/  2)  +  jpt  -  1;	  	non-compiled	[CE]  ';'  expected	130	None	add
584	[BUG]  [BUGGY]  final  double  ih  =  lowerBound  *  (ipt  -  1)/  2  +  ipt  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  lowerBound  *  (ipt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  lowerBound  *  (ipt  -  1)/  2  +  ipt  -  1;	  final    double    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	24	None	replace
585	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
586	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
587	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  bMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    bMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
588	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  bMatrix.setEntry(ipt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  bMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    bMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
589	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	91	1	add
590	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	91	1	add
591	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	91	1	add
592	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	91	1	add
593	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  lowerBound,  upperBound,  alphaCauchy);  [CE]  cannot  find  symbol  alphaCauchy  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  lowerBound,  upperBound,  alphaCauchy);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  lowerBound,  upperBound,  alphaCauchy);	  zMatrix.setEntry(ipt,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  alphaCauchy	109	None	replace
594	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  lowerBound,  upperBound,  dsqCauchy);  [CE]  cannot  find  symbol  dsqCauchy  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  lowerBound,  upperBound,  dsqCauchy);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  lowerBound,  upperBound,  dsqCauchy);	  zMatrix.setEntry(ipt,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  dsqCauchy	109	None	replace
595	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -3,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -3,  -1);	  	compilable	  [FE]  OutOfRangeException  	12	1	add
596	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -3,  -1);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -3,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -3,  -1);	  	compilable	  [FE]  OutOfRangeException  	12	1	add
597	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    zMatrix.setEntry(ipt,  -2,  -1);	  	compilable	  [FE]  OutOfRangeException  	12	1	add
598	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    zMatrix.setEntry(ipt,  -2,  -1);	  	compilable	  [FE]  OutOfRangeException  	12	1	add
599	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	133	None	replace
600	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  jpt,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  jpt,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  jpt,  -1);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	133	None	replace
601	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
602	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
603	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
604	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
605	[BUG]  [BUGGY]  zMatrix.setEntry(0,  jpt,  -recip,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(int,int,double,int)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  jpt,  -recip,  nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  jpt,  -recip,  nfxm);	  zMatrix.setEntry(0,    jpt,    nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double,int)	39	None	replace
606	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (nfm  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  jpt  *  (nfm  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	replace
607	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (nfm  -  1)/  2  +  ipt  -  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (nfm  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  jpt  *  (nfm  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	71	1	replace
608	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (interpolationPoints.length  -  1)/  2  +  ipt  -  1;  [CE]  cannot  find  symbol  length  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (interpolationPoints.length  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  jpt  *  (interpolationPoints.length  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	71	None	replace
609	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }	  	compilable	  [FE]  OutOfRangeException  	65	1	add
610	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }	  	compilable	  [FE]  OutOfRangeException  	65	1	add
611	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	  	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	65	None	add
612	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [CE]  while  expected  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);	  	non-compiled	[CE]  while  expected	65	None	add
613	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -1);  bMatrix.setEntry(ipt,  nfm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -1);  bMatrix.setEntry(ipt,  nfm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -1);  bMatrix.setEntry(ipt,  nfm,  -1);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	118	None	replace
614	[BUG]  [BUGGY]  final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  ipt  -  1;  final  double  jpt  =  jpt  *  (ipt  -  1)/  2  +  ipt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  ipt  -  1;  final  double  jpt  =  jpt  *  (ipt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  ipt  -  1;  final  double  jpt  =  jpt  *  (ipt  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    jpt    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	73	None	replace
615	[BUG]  [BUGGY]  final  double  ih  =  lowerBound  *(jpt  -  1)/  2  +  ipt  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  lowerBound  *(jpt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  lowerBound  *(jpt  -  1)/  2  +  ipt  -  1;	  final    double    ih    =    jpt    *(jpt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	41	None	replace
616	[BUG]  [BUGGY]  final  double  ih  =  upperBound  *(jpt  -  1)/  2  +  ipt  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  upperBound  *(jpt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  upperBound  *(jpt  -  1)/  2  +  ipt  -  1;	  final    double    ih    =    jpt    *(jpt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	41	None	replace
617	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recipient);  zMatrix.setEntry(ipt,  nfm,  -recipient);  }  [CE]  cannot  find  symbol  recipient  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recipient);  zMatrix.setEntry(ipt,  nfm,  -recipient);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recipient);  zMatrix.setEntry(ipt,  nfm,  -recipient);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -getRecipient);    	non-compiled	[CE]  cannot  find  symbol  recipient	119	None	replace
618	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recipient);  zMatrix.setEntry(ipt,  nfm,  -recipient);  }  else  {  zMatrix.  [CE]  <identifier>  expected  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recipient);  zMatrix.setEntry(ipt,  nfm,  -recipient);  }  else  {  zMatrix.  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recipient);  zMatrix.setEntry(ipt,  nfm,  -recipient);  }  else  {  zMatrix.	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -getRecipient);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
619	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    jpt    *    (jpt    -    1)/    2    +    jpt    -    1;    final  int  ih  =  (jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])	44	None	add
620	[BUG]  [BUGGY]  if(!isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	50	None	replace
621	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  zMatrix.  [CE]  <identifier>  expected  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  zMatrix.  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  zMatrix.	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
622	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	144	None	replace
623	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -in);  }  [CE]  cannot  find  symbol  in  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -in);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -in);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -in);    	non-compiled	[CE]  cannot  find  symbol  in	68	None	replace
624	[BUG]  [BUGGY]  final  double  ih  =  (jpt  *  (ipt  -  1)/  2  +  upperBound  -  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  (jpt  *  (ipt  -  1)/  2  +  upperBound  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  (jpt  *  (ipt  -  1)/  2  +  upperBound  -  1);	  final    double    ih    =    (ipt    *    (jpt    -    1)/    2    +    jpt    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	111	None	replace
625	[BUG]  [BUGGY]  final  double  ih  =  (jpt  *  (ipt  -  1)/  2  +  lowerBound  -  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  (jpt  *  (ipt  -  1)/  2  +  lowerBound  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  (jpt  *  (ipt  -  1)/  2  +  lowerBound  -  1);	  final    double    ih    =    (ipt    *    (jpt    -    1)/    2    +    jpt    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	111	None	replace
626	[BUG]  [BUGGY]  final  double  ih  =  (jpt  *(jpt  -  1)/  2  +  jpt  -  1);  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  (jpt  *(jpt  -  1)/  2  +  jpt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  (jpt  *(jpt  -  1)/  2  +  jpt  -  1);	  final    double    ih    =    (ipt    *    (jpt    -    1)/    2    +    jpt    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	111	None	replace
627	[BUG]  [BUGGY]  final  double  ih  =  lowerBound  *  (jpt  -  1)/  2  +  ih  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  lowerBound  *  (jpt  -  1)/  2  +  ih  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  lowerBound  *  (jpt  -  1)/  2  +  ih  -  1;	  final    double    ih    =    jpt    *    (jpt    -    1)/    2    +    ih    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	142	None	replace
628	[BUG]  [BUGGY]  final  double  ih  =  upperBound  *  (jpt  -  1)/  2  +  ih  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  upperBound  *  (jpt  -  1)/  2  +  ih  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  upperBound  *  (jpt  -  1)/  2  +  ih  -  1;	  final    double    ih    =    jpt    *    (jpt    -    1)/    2    +    ih    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	142	None	replace
629	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	143	1	add
630	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	143	1	add
631	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  if(isMinimize)  {  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    if(isMinimize)  {  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }	  	compilable	  [FE]  OutOfRangeException  	143	1	add
632	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  if(isMinimize)  {  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  if(isMinimize)  {  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    if(isMinimize)  {  zMatrix.setEntry(0,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }	  	compilable	  [FE]  OutOfRangeException  	143	1	add
633	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	143	1	add
634	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	143	1	add
635	[BUG]  [BUGGY]  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  final  int  ih  =  2  *  (ipt  -  1)/  2  +  ipt  -  1;  [CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  final  int  ih  =  2  *  (ipt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    1    *    (ipt    -    1)/    2    +    ipt    -    1;    final  int  ih  =  2  *  (ipt  -  1)/  2  +  ipt  -  1;	  	non-compiled	[CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])	128	None	add
636	[BUG]  [BUGGY]  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  final  int  ih  =  1  *  (ipt  -  1)/  2)  +  ipt  -  1;  [CE]  ';'  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  final  int  ih  =  1  *  (ipt  -  1)/  2)  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    1    *    (ipt    -    1)/    2    +    ipt    -    1;    final  int  ih  =  1  *  (ipt  -  1)/  2)  +  ipt  -  1;	  	non-compiled	[CE]  ';'  expected	128	None	add
637	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    -2,    -1);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	13	None	replace
638	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(-1,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    -2,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	13	None	replace
639	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -label);  }  [CE]  cannot  find  symbol  label  [FE]                OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -label);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -label);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -label);    	non-compiled	[CE]  cannot  find  symbol  label	70	None	replace
640	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer(bMatrix);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer(bMatrix);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer(bMatrix);	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	103	None	add
641	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	103	None	add
642	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
643	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
644	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	123	1	add
645	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	123	1	add
646	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	123	1	add
647	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	123	1	add
648	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	123	None	add
649	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
650	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
651	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
652	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
653	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
654	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
655	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	  	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	78	None	add
656	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
657	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
658	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -nfxm);    	non-compiled	[CE]  cannot  find  symbol  ih	106	None	replace
659	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	151	None	replace
660	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
661	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
662	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
663	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	85	1	add
664	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	85	1	add
665	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	85	1	add
666	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	27	1	add
667	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	27	1	add
668	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	add
669	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	add
670	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  bMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    bMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
671	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  bMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  bMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    bMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
672	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
673	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -ipt);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
674	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -id);  zMatrix.setEntry(jpt,  nfm,  -recip);  [CE]  cannot  find  symbol  id  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -id);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -id);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  id	62	None	add
675	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  fm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  fm	86	None	replace
676	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	81	None	replace
677	[BUG]  [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  nfxm,  recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  nfxm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  jpt,  nfxm,  nfxm,  recip);	  zMatrix.setEntry(0,    nfm,    nfxm,    jpt,    recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)	158	None	replace
678	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  jpt,  nfxm,  recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  jpt,  nfxm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  jpt,  nfxm,  recip);	  zMatrix.setEntry(0,    nfm,    nfxm,    jpt,    recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)	158	None	replace
679	[BUG]  [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  nfxm,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int,int)  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  jpt,  nfxm,  nfxm,  nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  jpt,  nfxm,  nfxm,  nfxm);	  zMatrix.setEntry(0,    nfm,    nfxm,    jpt,    recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int,int)	158	None	replace
680	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(nfm,  -recip);  }  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(nfm,  -recip);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(nfm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	145	None	replace
681	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(nfm,  -recip);  }  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(nfm,  -recip);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(nfm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	145	None	replace
682	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfm,  -recip);  zMatrix.setEntry(nfm,  -recip);  }  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfm,  -recip);  zMatrix.setEntry(nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfm,  -recip);  zMatrix.setEntry(nfm,  -recip);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(nfm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	145	None	replace
683	[BUG]  [BUGGY]  zMatrix.setEntry(upperBound,  lowerBound,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(double[],double[],double[])  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(upperBound,  lowerBound,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(upperBound,  lowerBound,  upperBound);	  zMatrix.setEntry(lowerBound,    nfxm,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double[],double[],double[])	108	None	replace
684	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (nfm  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  jpt  *  (nfm  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	74	1	replace
685	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (nfm  -  1)/  2  +  jpt  -  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (nfm  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  jpt  *  (nfm  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	74	1	replace
686	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  else  {  zMatrix.  [CE]  <identifier>  expected  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  else  {  zMatrix.  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  else  {  zMatrix.	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
687	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  fm  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(fm,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  fm	148	None	replace
688	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  fm  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(fm,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  fm	148	None	replace
689	[BUG]  [BUGGY]  if(!isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	47	None	replace
690	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  bMatrix);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  bMatrix);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  bMatrix);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(zMatrix);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	15	None	replace
691	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  nfxm);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  nfxm);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(zMatrix);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	15	None	replace
692	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	124	None	replace
693	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
694	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
695	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
696	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
697	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(ipt,    nfxm,    -recip);    BOBYQAOptimizer$PathIsExploredException    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	125	None	replace
698	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(ipt,    nfxm,    -recip);    BOBYQAOptimizer$PathIsExploredException    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	125	None	replace
699	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	60	1	add
700	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	60	1	add
701	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	60	1	add
702	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	60	1	add
703	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	60	1	add
704	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(nfm,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(nfm,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	60	1	add
705	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	  	compilable	  [FE]  OutOfRangeException  	115	1	add
706	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	  	compilable	  [FE]  OutOfRangeException  	115	1	add
707	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	  	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	115	None	add
708	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  0,  0);  ZMatrix.setEntry(ipt,  0,  0);  [CE]  cannot  find  symbol  ZMatrix  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  0,  0);  ZMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  0,  0);  ZMatrix.setEntry(ipt,  0,  0);	          zMatrix.setEntry(ipt,    -1,    -1);    ZMatrix.setEntry(ipt,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	11	None	replace
709	[BUG]  [BUGGY]  final  int  ih  =  zMatrix  *  (ipt  -  1)/  2  +  jpt  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  zMatrix  *  (ipt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  zMatrix  *  (ipt  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	153	None	replace
710	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (ipt  -  1)/  2  +  upperBound  -  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (ipt  -  1)/  2  +  upperBound  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  jpt  *  (ipt  -  1)/  2  +  upperBound  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	153	None	replace
711	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  Math.min(jpt,  jpt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  Math.min(jpt,  jpt  -  1);	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	77	1	replace
712	[BUG]  [BUGGY]  final  int  ih  =  Math.min(jpt,  jpt  -  1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  Math.min(jpt,  jpt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  Math.min(jpt,  jpt  -  1);	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	77	1	replace
713	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  1  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	77	1	replace
714	[BUG]  [BUGGY]  final  int  ih  =  1  +  jpt  -  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  1  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	77	1	replace
715	[BUG]  [BUGGY]  zMatrix.setEntry(lowerBound,  ipt,  upperBound);  [CE]  no  suitable  method  found  for  setEntry(double[],int,double[])  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(lowerBound,  ipt,  upperBound);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(lowerBound,  ipt,  upperBound);	  zMatrix.setEntry(nfxm,    ipt,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double[],int,double[])	6	None	replace
716	[BUG]  [BUGGY]  zMatrix.setEntry(upperBound,  ipt,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(double[],int,int)  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(upperBound,  ipt,  nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(upperBound,  ipt,  nfxm);	  zMatrix.setEntry(nfxm,    ipt,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double[],int,int)	6	None	replace
717	[BUG]  [BUGGY]  final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1;  final  double  jpt  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1;  final  double  jpt  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1;  final  double  jpt  =  jpt  *  (ipt  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    jpt    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	76	None	replace
718	[BUG]  [BUGGY]  bMatrix.setEntry(ipt,  0,  -1);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ipt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ipt,  0,  -1);	  bMatrix.setEntry(ipt,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	96	None	replace
719	[BUG]  [BUGGY]  bMatrix.setEntry(i,  0,  -1);  [CE]  cannot  find  symbol  i  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(i,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(i,  0,  -1);	  bMatrix.setEntry(ipt,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  i	96	None	replace
720	[BUG]  [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -1);  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfxm,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfxm,  nfxm,  -1);	  zMatrix.setEntry(ipt,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	23	None	replace
721	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  recip,  -1,  nfxm);  [CE]  no  suitable  method  found  for  setEntry(int,int,double,int,int)  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  recip,  -1,  nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  recip,  -1,  nfxm);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double,int,int)	38	None	replace
722	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -1,  -i);  [CE]  cannot  find  symbol  i  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -1,  -i);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  -1,  -i);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1,    -recip);    	non-compiled	[CE]  cannot  find  symbol  i	38	None	replace
723	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [CE]  cannot  find  symbol  fm  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  fm	63	None	replace
724	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,int,double,int)  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  -recip,  -1);	  zMatrix.setEntry(0,    nfm,    nfxm,    -recip,    alphaCauchy);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double,int)	37	None	replace
725	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  -1);	  zMatrix.setEntry(0,    nfm,    nfxm,    -recip,    alphaCauchy);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)	37	None	replace
726	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -r);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	84	None	replace
727	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -rec);  [CE]  cannot  find  symbol  rec  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -rec);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  nfxm,  -rec);	  zMatrix.setEntry(nfm,    nfxm,    -i);    	non-compiled	[CE]  cannot  find  symbol  rec	97	None	replace
728	[BUG]  [BUGGY]  bMatrix.setEntry(nfm,  jpt,  -recip);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(nfm,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(nfm,  jpt,  -recip);	  bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	138	None	replace
729	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	93	1	add
730	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	93	1	add
731	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	93	1	add
732	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	93	1	add
733	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(nfxm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(nfxm,  -recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	93	None	add
734	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -test);  }  [CE]  cannot  find  symbol  test  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -test);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -test);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -test);    	non-compiled	[CE]  cannot  find  symbol  test	146	None	replace
735	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -test);  }  else  {  zMatrix.setEntry  [CE]  not  a  statement  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -test);  }  else  {  zMatrix.setEntry  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -test);  }  else  {  zMatrix.setEntry	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -test);    	non-compiled	[CE]  not  a  statement	146	None	replace
736	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
737	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
738	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
739	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
740	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.  [CE]  <identifier>  expected  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
741	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  recip,  jpt);  [CE]  no  suitable  method  found  for  setEntry(int,int,double,int)  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  recip,  jpt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  recip,  jpt);	  zMatrix.setEntry(0,    nfm,    nfxm,    recip,    ih);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double,int)	57	None	replace
742	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(null,  zMatrix);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(null,  zMatrix);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(null,  zMatrix);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(null);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	16	None	replace
743	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(null,  null);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(null,  null);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(null,  null);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(null);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	16	None	replace
744	[BUG]  [BUGGY]  zMatrix.setEntry(i,  jpt,  -1);  [CE]  cannot  find  symbol  i  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(i,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(i,  jpt,  -1);	  zMatrix.setEntry(ipt,    jpt,    -1);    	non-compiled	[CE]  cannot  find  symbol  i	33	None	replace
745	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  ipt,  -1);  [CE]  cannot  find  symbol  ih  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  ipt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  ipt,  -1);	  zMatrix.setEntry(ipt,    jpt,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	33	None	replace
746	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
747	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(ipt,  jpt,  -nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
748	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
749	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  bMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
750	[BUG]  [BUGGY]  zMatrix.setEntry(upperBound,  lowerBound,  ipt);  [CE]  no  suitable  method  found  for  setEntry(double[],double[],int)  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(upperBound,  lowerBound,  ipt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(upperBound,  lowerBound,  ipt);	  zMatrix.setEntry(upperBound,    nfxm,    ipt);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double[],double[],int)	147	None	replace
751	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -dsqCrvmin);  [CE]  cannot  find  symbol  dsqCrvmin  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -dsqCrvmin);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -dsqCrvmin);	  	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	49	None	add
752	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -rc);  [CE]  cannot  find  symbol  rc  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -rc);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -rc);	  	non-compiled	[CE]  cannot  find  symbol  rc	49	None	add
753	[BUG]  [BUGGY]  zMatrix.setEntry(upperBound,  nfxm,  jpt);  [CE]  no  suitable  method  found  for  setEntry(double[],int,int)  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(upperBound,  nfxm,  jpt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(upperBound,  nfxm,  jpt);	  zMatrix.setEntry(jpt,    nfxm,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double[],int,int)	8	None	replace
754	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  4  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  1  *(jpt  -  1)/  4  +  jpt  -  1;	  final    int    ih    =    1    *(jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	140	1	replace
755	[BUG]  [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  4  +  jpt  -  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  4  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  1  *(jpt  -  1)/  4  +  jpt  -  1;	  final    int    ih    =    1    *(jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	140	1	replace
756	[BUG]  [BUGGY]  final  int  ih  =  upperBound  *  (jpt  -  1)/  2  +  jpt  -  1;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  upperBound  *  (jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  upperBound  *  (jpt  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    jpt    *    (jpt    -    1)/    2    +    jpt    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	45	None	replace
757	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  fm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  fm	61	None	replace
758	[BUG]  [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1);  [CE]  ';'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    1    *(jpt    -    1)/    2    +    jpt    -    1;    final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1);	  	non-compiled	[CE]  ';'  expected	139	None	add
759	[BUG]  [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  2  *(jpt  -  1)/  2  +  jpt  -  1;  [CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *(jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  2  *(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    1    *(jpt    -    1)/    2    +    jpt    -    1;    final  int  ih  =  2  *(jpt  -  1)/  2  +  jpt  -  1;	  	non-compiled	[CE]  variable  ih  is  already  defined  in  method  prelim(double[],double[])	139	None	add
760	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	150	1	add
761	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  OutOfRangeException  	150	1	add
762	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	150	1	add
763	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	150	1	add
764	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  }  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	152	None	replace
765	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  }  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	152	None	replace
766	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  }  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	152	None	replace
767	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	94	None	replace
768	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	94	None	replace
769	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =(jpt  -  1)*(jpt  -  1)/  2  *  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =(jpt  -  1)*(jpt  -  1)/  2  *  jpt  -  1;	  final    int    ih    =    (jpt    -    1)*(jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  OutOfRangeException  	43	1	replace
770	[BUG]  [BUGGY]  final  int  ih  =(jpt  -  1)*(jpt  -  1)/  2  *  jpt  -  1;  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =(jpt  -  1)*(jpt  -  1)/  2  *  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =(jpt  -  1)*(jpt  -  1)/  2  *  jpt  -  1;	  final    int    ih    =    (jpt    -    1)*(jpt    -    1)/    2    +    jpt    -    1;    	compilable	  [FE]  OutOfRangeException  	43	1	replace
771	[BUG]  [BUGGY]  final  double  ih  =(jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =(jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =(jpt  -  1)*(jpt  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    (jpt    -    1)*(jpt    -    1)/    2    +    jpt    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	43	None	replace
772	[BUG]  [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -in);  [CE]  cannot  find  symbol  in  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -in);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ipt,  nfxm,  -in);	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -in);    	non-compiled	[CE]  cannot  find  symbol  in	112	None	replace
773	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  nfxm,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  nfxm,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(nfm,    nfxm,    -recip);    BOBYQAOptimizer$PathIsExploredException    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	87	None	replace
774	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =(jpt  *(jpt  -  1)/  2  +  ipt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =(jpt  *(jpt  -  1)/  2  +  ipt  -  1);	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    jpt    *(jpt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	72	1	replace
775	[BUG]  [BUGGY]  final  int  ih  =(jpt  *(jpt  -  1)/  2  +  ipt  -  1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =(jpt  *(jpt  -  1)/  2  +  ipt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =(jpt  *(jpt  -  1)/  2  +  ipt  -  1);	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    jpt    *(jpt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	72	1	replace
776	[BUG]  [BUGGY]  zMatrix.setEntry(0,  0,  3);  [CE]  cannot  find  symbol  ih  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  0,  3);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  0,  3);	  zMatrix.setEntry(0,    0,    0);    	non-compiled	[CE]  cannot  find  symbol  ih	4	None	replace
777	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    bMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  OutOfRangeException  	126	1	add
778	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [FE]  OutOfRangeException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  bMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    bMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(ipt,  nfxm,  -1);	  	compilable	  [FE]  OutOfRangeException  	126	1	add
779	[BUG]  [BUGGY]  final  double  ih  =  jpt  *  (jpt  -  1)/  2  +  lowerBound  -  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  jpt  *  (jpt  -  1)/  2  +  lowerBound  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  jpt  *  (jpt  -  1)/  2  +  lowerBound  -  1;	  final    double    ih    =    jpt    *    (jpt    -    1)/    2    +    jpt    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	141	None	replace
780	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    0,    0);    	non-compiled	[CE]  cannot  find  symbol  ih	99	None	replace
781	[BUG]  [BUGGY]  bMatrix.setEntry(jpt,  ipt,  -recip);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(jpt,  ipt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(jpt,  ipt,  -recip);	  bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	138	None	replace
782	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zMatrix  [CE]  not  a  statement  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zMatrix  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zMatrix	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rcip);    	non-compiled	[CE]  not  a  statement	157	None	replace
783	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rcip);  }  [CE]  cannot  find  symbol  rcip  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rcip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -rcip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -rcip);    	non-compiled	[CE]  cannot  find  symbol  rcip	157	None	replace
784	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix  [CE]  not  a  statement  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -r);    	non-compiled	[CE]  not  a  statement	31	None	replace
785	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -in);  }  [CE]  cannot  find  symbol  in  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -in);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -in);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -in);    	non-compiled	[CE]  cannot  find  symbol  in	112	None	replace
786	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -in);    	non-compiled	[CE]  cannot  find  symbol  ih	112	None	replace
787	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  }  [CE]  cannot  find  symbol  dsqCrvmin  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -in);    	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	112	None	replace
788	[BUG]  [BUGGY]  final  int  jpt  =  nfm  *(ipt  -  1)/  2  +  ipt  -  1;  [CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  jpt  =  nfm  *(ipt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  jpt  =  nfm  *(ipt  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    jpt    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  variable  jpt  is  already  defined  in  method  prelim(double[],double[])	73	None	replace
789	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  ipt,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  ipt,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  ipt,  -recip);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(ipt,    jpt,    -recip);    BOBYQAOptimizer$PathIsExploredException    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	107	None	replace
790	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  else  {  zMatrix  [CE]  not  a  statement  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  else  {  zMatrix  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  }  else  {  zMatrix	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,    nfxm,    -recip);    	non-compiled	[CE]  not  a  statement	59	None	replace
791	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  [CE]  cannot  find  symbol  dsqCrvmin  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -prelim);    	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	30	None	replace
792	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);	  	compilable	  [FE]  OutOfRangeException  	12	1	add
793	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -2,  -1);  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -2,    -1);    zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);	  	compilable	  [FE]  OutOfRangeException  	12	1	add
794	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	49	None	add
795	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  -1,  -1);  bMatrix.setEntry(jpt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  -1,  -1);  bMatrix.setEntry(jpt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	49	1	add
796	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  -1,  -1);  bMatrix.setEntry(jpt,  -1,  -1);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  -1,  -1);  bMatrix.setEntry(jpt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  -1,  -1);  bMatrix.setEntry(jpt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	49	1	add
797	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	17	None	add
798	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	17	1	add
799	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	17	1	add
800	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip,  ipt);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)  [FE]                      BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip,  ipt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  recip,  ipt);	  zMatrix.setEntry(0,    nfm,    nfxm,    recip,    ih);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)	57	None	replace
801	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -1,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  -1,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  -1,  -1);  BOBYQAOptimizer$PathIsExploredException  =  new  BOBYQAOptimizer();	          zMatrix.setEntry(jpt,    nfxm,    -recip);    BOBYQAOptimizer$PathIsExploredException    =    new    BOBYQAOptimizer();    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	95	None	replace
802	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]            BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -i);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	20	None	replace
803	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  ZMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  [CE]  cannot  find  symbol  ZMatrix  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  0);  ZMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    0);    ZMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  0);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	98	None	add
804	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  jpt,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  jpt,  -recip);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)	38	None	replace
805	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  jpt);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  jpt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  -recip,  jpt);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)	38	None	replace
806	[BUG]  [BUGGY]  final  double  ih  =  i  *(jpt  -  1)/  2  +  jpt  -  1;  [CE]  cannot  find  symbol  i  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  i  *(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  i  *(jpt  -  1)/  2  +  jpt  -  1;	  final    double    ih    =    jpt    *(jpt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  cannot  find  symbol  i	41	None	replace
807	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -r);  }  [CE]  cannot  find  symbol  r  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -r);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -r);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -r);    	non-compiled	[CE]  cannot  find  symbol  r	51	None	replace
808	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;  [FE]                OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  throw  new  PathIsExploredException( " ");  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -r);    	non-compiled	[CE]  constructor  PathIsExploredException  in  class  PathIsExploredException  cannot  be  applied  to  given  types;	51	None	replace
809	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	add
810	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	27	1	add
811	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	27	None	add
812	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [CE]  cannot  find  symbol  fm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  fm	85	None	add
813	[BUG]  [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(nfm!=  null)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(nfm!=  null)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	144	None	replace
814	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -dsqCrvmin);  }  [CE]  cannot  find  symbol  dsqCrvmin  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -dsqCrvmin);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -dsqCrvmin);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,    nfm,    -dsqCrvmin);    	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	67	None	replace
815	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zMatrix  [CE]  not  a  statement  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zMatrix  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  else  {  zMatrix	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  not  a  statement	124	None	replace
816	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  nfxm.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  int  cannot  be  dereferenced  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  nfxm.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    nfxm.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  int  cannot  be  dereferenced	123	None	add
817	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	123	None	add
818	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip,  jpt);  [CE]  no  suitable  method  found  for  setEntry(int,int,double,int)  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  -recip,  jpt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  -recip,  jpt);	  zMatrix.setEntry(0,    nfm,    nfxm,    -recip,    alphaCauchy);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double,int)	37	None	replace
819	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -1);  zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -1);    zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -1);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	126	None	add
820	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
821	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(jpt,  jpt,  -1);  zMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
822	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
823	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -1);  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -1);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -1);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	82	1	add
824	[BUG]  [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  upperBound,  jpt);  [CE]  no  suitable  method  found  for  setEntry(int,int,double[],int)  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ipt,  nfxm,  upperBound,  jpt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ipt,  nfxm,  upperBound,  jpt);	  zMatrix.setEntry(ipt,    nfxm,    upperBound,    dsqCrvmin);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,double[],int)	7	None	replace
825	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [CE]  cannot  find  symbol  fm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(nfm,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  fm	58	None	add
826	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  zMatrix.  [CE]  <identifier>  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  zMatrix.  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  zMatrix.	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
827	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  fm  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(fm,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  fm	148	None	replace
828	[BUG]  [BUGGY]  final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  1;  [CE]  no  suitable  method  found  for  setEntry(double,double)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  double  ih  =  jpt  *  (ipt  -  1)/  2  +  1;	  final    double    ih    =    jpt    *    (ipt    -    1)/    2    +    dsqCrvmin    -    1;    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,double)	25	None	replace
829	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  }  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	134	None	replace
830	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	134	None	replace
831	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(nfxm,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]              OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(nfxm,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  bMatrix.setEntry(nfxm,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	134	None	replace
832	[BUG]  [BUGGY]  zMatrix.setEntry(jpt,  -recip,  -ipt);  [CE]  no  suitable  method  found  for  setEntry(int,double,int)  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(jpt,  -recip,  -ipt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(jpt,  -recip,  -ipt);	  zMatrix.setEntry(jpt,    ipt,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double,int)	32	None	replace
833	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix  [CE]  not  a  statement  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  not  a  statement	92	None	replace
834	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix.  [CE]  <identifier>  expected  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix.  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix.	          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
835	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
836	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
837	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
838	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
839	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
840	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
841	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(jpt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
842	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        bMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(jpt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	103	1	add
843	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  jpt,  -recip);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	133	None	replace
844	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -1,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int,int)  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  -1,  -1);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int,int)	101	None	replace
845	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  recip,  -1);	  zMatrix.setEntry(0,    nfm,    nfxm,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double,int)	101	None	replace
846	[BUG]  [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(nfxm!=  null)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(nfxm!=  null)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -nfxm);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	106	None	replace
847	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfxm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	152	None	replace
848	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(abstract);  [CE]  illegal  start  of  expression  [FE]                    BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(abstract);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(abstract);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(null);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
849	[BUG]  [BUGGY]  zMatrix.setEntry(ih,  -recip);  [CE]  cannot  find  symbol  ih  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(ih,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(ih,  -recip);	  zMatrix.setEntry(ih,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	35	None	replace
850	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix.setEntry  [CE]  not  a  statement  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix.setEntry  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  ZMatrix.setEntry(ipt,  nfxm,  -recip);  }  else  {  zMatrix.setEntry	          zMatrix.setEntry(ipt,    nfxm,    -recip);    ZMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  not  a  statement	29	None	replace
851	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	104	None	replace
852	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  jpt,  -1);  bMatrix.setEntry(ipt,  jpt,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  jpt,  -1);  bMatrix.setEntry(ipt,  jpt,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  jpt,  -1);  bMatrix.setEntry(ipt,  jpt,  -1);  }	          zMatrix.setEntry(ipt,    jpt,    -recip);    bMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	104	None	replace
853	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  zMatrix.  [CE]  <identifier>  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  zMatrix.  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  zMatrix.	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    jpt,    -recip);    	non-compiled	[CE]  <identifier>  expected	151	None	replace
854	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.set  [CE]  not  a  statement  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.set  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.set	  	non-compiled	[CE]  not  a  statement	115	None	add
855	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (len  -  1)/  2  +  ipt  -  1;  [CE]  cannot  find  symbol  len  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (len  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  jpt  *  (len  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  cannot  find  symbol  len	71	None	replace
856	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
857	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        bMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	117	1	add
858	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.set  [CE]  not  a  statement  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.set  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.set	          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  not  a  statement	116	None	replace
859	[BUG]  [BUGGY]  zMatrix.setEntry(0,  2,  -1);  [CE]  cannot  find  symbol  ih  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  2,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  2,  -1);	  zMatrix.setEntry(0,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	2	None	replace
860	[BUG]  [BUGGY]  zMatrix.setEntry(nfm,  ipt,  -1);  [CE]  cannot  find  symbol  ih  [FE]        OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(nfm,  ipt,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(nfm,  ipt,  -1);	  zMatrix.setEntry(ipt,    nfm,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	120	None	replace
861	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  ZMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ZMatrix  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  ZMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(jpt,  nfxm,  -recip);  ZMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(jpt,    nfxm,    -recip);    ZMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	19	None	replace
862	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	122	None	replace
863	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    zMatrix.setEntry(nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	93	None	add
864	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    bMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  OutOfRangeException  	93	1	add
865	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -1);  bMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -1);    bMatrix.setEntry(jpt,  nfxm,  -1);  zMatrix.setEntry(jpt,  nfxm,  -1);	  	compilable	  [FE]  OutOfRangeException  	93	1	add
866	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	150	1	add
867	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	150	1	add
868	[BUG]  [BUGGY]  final  int  ih  =  jpt  *(jpt  -  1)/  2  +  alphaCauchy  -  1;  [CE]  cannot  find  symbol  alphaCauchy  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *(jpt  -  1)/  2  +  alphaCauchy  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  jpt  *(jpt  -  1)/  2  +  alphaCauchy  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    jpt    *(jpt    -    1)/    2    +    ipt    -    1;    	non-compiled	[CE]  cannot  find  symbol  alphaCauchy	72	None	replace
869	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  zMatrix.setEntry  [CE]  not  a  statement  [FE]              BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  zMatrix.setEntry  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  }  else  {  zMatrix.setEntry	          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,    jpt,    -r);    	non-compiled	[CE]  not  a  statement	84	None	replace
870	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }	  	compilable	  [FE]  OutOfRangeException  	143	1	add
871	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  }	  	compilable	  [FE]  OutOfRangeException  	143	1	add
872	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
873	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	78	1	add
874	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
875	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(ipt,  jpt,  -nfxm);  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(ipt,    jpt,    -nfxm);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(ipt,  jpt,  -nfxm);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	105	1	add
876	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  ipt);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  ipt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(zMatrix,  ipt);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(zMatrix);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	15	None	replace
877	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	118	None	replace
878	[BUG]  [BUGGY]  if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  cannot  find  symbol  ih  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(bMatrix!=  null)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  bMatrix.setEntry(ipt,  nfm,  -recip);  }  else  {  throw  new  RuntimeException( " ");  }	          zMatrix.setEntry(ipt,    nfm,    -recip);    bMatrix.setEntry(ipt,    nfm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	118	None	replace
879	[BUG]  [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(jpt,  jpt);  [CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(jpt,  jpt);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	BOBYQAOptimizer$PathIsExploredException  =  new  PathIsExploredException(jpt,  jpt);	  BOBYQAOptimizer$PathIsExploredException    =    new    PathIsExploredException(jpt);    	non-compiled	[CE]  cannot  find  symbol  BOBYQAOptimizer$PathIsExploredException	14	None	replace
880	[BUG]  [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  jpt  *  (jpt  -  1)/  2)  +  jpt  -  1;  [CE]  ';'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  jpt  *  (jpt  -  1)/  2  +  jpt  -  1;  final  int  ih  =  jpt  *  (jpt  -  1)/  2)  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    jpt    *    (jpt    -    1)/    2    +    jpt    -    1;    final  int  ih  =  jpt  *  (jpt  -  1)/  2)  +  jpt  -  1;	  	non-compiled	[CE]  ';'  expected	44	None	add
881	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	10	None	replace
882	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
883	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
884	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
885	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(nfm,    jpt,    -recip);    zMatrix.setEntry(nfm,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	136	1	add
886	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip,  bMatrix);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,double,Array2DRowRealMatrix)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfm,  nfxm,  recip,  bMatrix);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfm,  nfxm,  recip,  bMatrix);	  zMatrix.setEntry(0,    nfm,    nfxm,    recip,    alphaCauchy);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,double,Array2DRowRealMatrix)	55	None	replace
887	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
888	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
889	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
890	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
891	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
892	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	121	1	add
893	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
894	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  jpt,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	46	1	add
895	[BUG]  [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  no  suitable  method  found  for  setEntry(int,double)  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                bMatrix.setEntry(ipt,        nfxm,        -recip);        bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,double)	46	None	add
896	[BUG]  [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -label);  [CE]  cannot  find  symbol  label  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  bMatrix.setEntry(ipt,  nfxm,  -label);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	bMatrix.setEntry(ipt,  nfxm,  -label);	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -decip);    	non-compiled	[CE]  cannot  find  symbol  label	113	None	replace
897	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  nfxm.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  int  cannot  be  dereferenced  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  nfxm.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    nfxm.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  int  cannot  be  dereferenced	91	None	add
898	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	91	1	add
899	[BUG]  [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [FE]  OutOfRangeException  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(jpt,        nfxm,        -recip);        zMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	91	1	add
900	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  Math.min(ipt,  jpt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =  Math.min(ipt,  jpt  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	110	1	replace
901	[BUG]  [BUGGY]  final  int  ih  =  Math.min(ipt,  jpt  -  1)/  2  +  ipt  -  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]        BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  Math.min(ipt,  jpt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  Math.min(ipt,  jpt  -  1)/  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	110	1	replace
902	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =(jpt  -  1)*  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	final  int  ih  =(jpt  -  1)*  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	110	1	replace
903	[BUG]  [BUGGY]  final  int  ih  =(jpt  -  1)*  2  +  ipt  -  1;  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =(jpt  -  1)*  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =(jpt  -  1)*  2  +  ipt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    ipt    -    1;    final    int    ih    =    (jpt    -    1)/    2    +    ipt    -    1;    	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	110	1	replace
904	[BUG]  [BUGGY]  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1);  [CE]  ';'  expected  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1);  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    1    *    (ipt    -    1)/    2    +    ipt    -    1;    final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1);	  	non-compiled	[CE]  ';'  expected	128	None	add
905	[BUG]  [BUGGY]  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  Final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  [CE]  not  a  statement  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  Final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final    int    ih    =    1    *    (ipt    -    1)/    2    +    ipt    -    1;    Final  int  ih  =  1  *  (ipt  -  1)/  2  +  ipt  -  1;	  	non-compiled	[CE]  not  a  statement	128	None	add
906	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.  [CE]  <identifier>  expected  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(nfm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  else  {  zMatrix.	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfm,    -recip);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
907	[BUG]  [BUGGY]  if(ipt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(ipt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(ipt  >  0)  {  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(ipt,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	28	None	replace
908	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [CE]  cannot  find  symbol  fm  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  fm	62	None	add
909	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
910	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	62	1	add
911	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
912	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(jpt,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
913	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(nfm,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(nfm,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
914	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(nfm,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(nfm,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(nfm,  -1,  -1);  zMatrix.setEntry(ipt,  -1,  -1);	  	compilable	  [FE]  OutOfRangeException  	9	1	add
915	[BUG]  [BUGGY]  zMatrix.setEntry(0,  jpt,  nfm,  nfxm,  recip);  [CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)  [FE]                  BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  jpt,  nfm,  nfxm,  recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  jpt,  nfm,  nfxm,  recip);	  zMatrix.setEntry(0,    nfm,    nfxm,    jpt,    recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(int,int,int,int,double)	158	None	replace
916	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	  	compilable	  [FE]  OutOfRangeException  	65	1	add
917	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    if(isMinimize)  {  zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  }	  	compilable	  [FE]  OutOfRangeException  	65	1	add
918	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	65	1	add
919	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(jpt,  nfm,  -recip);  zMatrix.setEntry(ipt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	65	1	add
920	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	65	1	add
921	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [FE]  OutOfRangeException  [FE]        OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  nfm,  -recip);  zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        nfm,        -recip);        zMatrix.setEntry(ipt,    nfm,    -recip);    zMatrix.setEntry(ipt,  jpt,  -recip);  zMatrix.setEntry(jpt,  nfm,  -recip);	  	compilable	  [FE]  OutOfRangeException  	65	1	add
922	[BUG]  [BUGGY]  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  1,  -1);  zMatrix.setEntry(ipt,  0,  -1);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
923	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [FE]  OutOfRangeException  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  zMatrix.setEntry(ipt,  1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    zMatrix.setEntry(ipt,  1,  -1);  zMatrix.setEntry(ipt,  0,  -1);	  	compilable	  [FE]  OutOfRangeException  	155	1	add
924	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  ZMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [CE]  cannot  find  symbol  ZMatrix  [FE]      OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,  0,  -1);  ZMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        -1,        -1);        zMatrix.setEntry(ipt,    0,    -1);    ZMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  0,  -1);	  	non-compiled	[CE]  cannot  find  symbol  ZMatrix	155	None	add
925	[BUG]  [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  }  [CE]  cannot  find  symbol  ih  [FE]    OutOfRangeException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(!isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(!isMinimize)  {  zMatrix.setEntry(ipt,  -1,  -1);  zMatrix.setEntry(ipt,  -2,  -1);  }	          zMatrix.setEntry(ipt,    -1,    -1);    zMatrix.setEntry(ipt,    -2,    -1);    	non-compiled	[CE]  cannot  find  symbol  ih	13	None	replace
926	[BUG]  [BUGGY]  zMatrix.setEntry(0,  nfxm,  -recip);  [CE]  cannot  find  symbol  ih  [FE]                BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  zMatrix.setEntry(0,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	zMatrix.setEntry(0,  nfxm,  -recip);	  zMatrix.setEntry(0,    nfm,    nfxm,    -i);    	non-compiled	[CE]  cannot  find  symbol  ih	102	None	replace
927	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(f,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  no  suitable  method  found  for  setEntry(double,int,double)  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(f,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(f,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  no  suitable  method  found  for  setEntry(double,int,double)	61	None	replace
928	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]      BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	61	None	replace
929	[BUG]  [BUGGY]  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
930	[BUG]  [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [FE]  BOBYQAOptimizer$PathIsExploredException  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(ipt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(ipt,        jpt,        -recip);        zMatrix.setEntry(jpt,    jpt,    -recip);    zMatrix.setEntry(jpt,  jpt,  -recip);  zMatrix.setEntry(jpt,  jpt,  -recip);	  	compilable	  [FE]  BOBYQAOptimizer$PathIsExploredException  	80	1	add
931	[BUG]  [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [CE]  cannot  find  symbol  fm  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(jpt,  nfxm,  -recip);  zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	                zMatrix.setEntry(nfm,        nfxm,        -recip);        zMatrix.setEntry(jpt,    nfxm,    -recip);    zMatrix.setEntry(fm,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);	  	non-compiled	[CE]  cannot  find  symbol  fm	60	None	add
932	[BUG]  [BUGGY]  final  int  ih  =  alphaCauchy  *(jpt  -  1)/  2  +  jpt  -  1;  [CE]  cannot  find  symbol  alphaCauchy  [FE]          BOBYQAOptimizer$PathIsExploredException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  final  int  ih  =  alphaCauchy  *(jpt  -  1)/  2  +  jpt  -  1;  [BUGGY]      final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	final  int  ih  =  alphaCauchy  *(jpt  -  1)/  2  +  jpt  -  1;	  final    int    ih    =    jpt    *    (ipt    -    1)/    2    +    jpt    -    1;    final    int    ih    =    jpt    *(jpt    -    1)/    2    +    jpt    -    1;    	non-compiled	[CE]  cannot  find  symbol  alphaCauchy	75	None	replace
933	[BUG]  [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [CE]  cannot  find  symbol  ih  [FE]    BOBYQAOptimizer$PathIsExploredException    [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  zMatrix.setEntry(0,  nfxm,  -recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  }	          zMatrix.setEntry(nfm,    nfxm,    -recip);    zMatrix.setEntry(ipt,    nfxm,    -recip);    	non-compiled	[CE]  cannot  find  symbol  ih	86	None	replace
934	[BUG]  [BUGGY]  ZMatrix.setEntry(ipt,  0,  0);  [CE]  cannot  find  symbol  ZMatrix  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  ZMatrix.setEntry(ipt,  0,  0);  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	ZMatrix.setEntry(ipt,  0,  0);	          zMatrix.setEntry(ipt,    -1,    -1);    ZMatrix.setEntry(ipt,    -1,    -1);    	non-compiled	[CE]  cannot  find  symbol  ZMatrix	11	None	replace
935	[BUG]  [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  }  [CE]  cannot  find  symbol  dsqCrvmin  [FE]          OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -dsqCrvmin);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -dsqCrvmin);    	non-compiled	[CE]  cannot  find  symbol  dsqCrvmin	48	None	replace
936	[BUG]  [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -dd);  }  [CE]  cannot  find  symbol  dd  [FE]            OutOfRangeException      [CONTEXT]          }  else  {  zMatrix.setEntry(0,  nfxm,  recip);  zMatrix.setEntry(nfm,  nfxm,  recip);  zMatrix.setEntry(ipt,  nfxm,  -recip);  zMatrix.setEntry(jpt,  nfxm,  -recip);      [BUGGY]  if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -dd);  }  [BUGGY]      final  int  ih  =  ipt  *  (ipt  -  1)  /  2  +  jpt  -  1;  final  double  tmp  =  interpolationPoints.getEntry(nfm,  ipt  -  1)  *  interpolationPoints.getEntry(nfm,  jpt  -  1);  modelSecondDerivativesValues.setEntry(ih,  (fbeg  -  fAtInterpolationPoints.getEntry(ipt)  -  fAtInterpolationPoints.getEntry(jpt)  +  f)  /  tmp);  throw  new  PathIsExploredException();  //  XXX  }  [CLASS]  BOBYQAOptimizer  PathIsExploredException  [METHOD]  prelim  [RETURN_TYPE]  void  double[]  lowerBound  double[]  upperBound  [VARIABLES]  boolean  isMinimize  double[]  alphaCauchy  boundDifference  dsqCrvmin  lowerBound  upperBound  Array2DRowRealMatrix  bMatrix  interpolationPoints  zMatrix  double  DEFAULT_INITIAL_RADIUS  DEFAULT_STOPPING_RADIUS  HALF  MINUS_ONE  ONE  ONE_OVER_A_THOUSAND  ONE_OVER_EIGHT  ONE_OVER_FOUR  ONE_OVER_TEN  SIXTEEN  TEN  TWO  TWO_HUNDRED_FIFTY  ZERO  adelt  alpha  bdtest  bdtol  beta  biglsq  bigstp  boundDiff  bsum  cauchy  crvmin  csave  curv  d1  d2  d3  d4  d5  dderiv  delsq  delta  deltaOne  deltaTwo  den  denom  densav  diff  diffa  diffb  diffc  dist  distsq  dnorm  dsq  dx  errbig  f  fbeg  fopt  fracsq  frhosq  fsave  ggfree  gisq  glagValue  gqsq  gw  hDelta  ha  hdiag  initialTrustRegionRadius  min  objectiveValue  oneOverStepA  pqold  predsq  presav  ratio  recip  rho  rhosq  scaden  scale  slbd  step  stepa  stepb  stoppingTrustRegionRadius  stpsav  subd  sum  suma  sumb  sumin  sumpq  sumw  sumz  temp  tmp  tmp1  tmp2  value  vlag  vquad  wfixsq  xoptsq  ArrayRealVector  alternativeNewPoint  currentBest  fAtInterpolationPoints  glag  gnew  gradientAtTrustRegionCenter  hcol  hred  hs  lagrangeValuesAtNewPoint  lowerDifference  modelSecondDerivativesParameters  modelSecondDerivativesValues  newPoint  originShift  s  trialStepPoint  trustRegionCenterOffset  upperDifference  work1  work2  work3  xbdi  String  PATH_IS_EXPLORED  int  MINIMUM_PROBLEM_DIMENSION  i  ibdsav  iflag  ih  ilbd  ip  ipt  iptMinus1  isbd  itest  iubd  j  jp  jpt  jptMinus1  k  kbase  knew  ksav  m  max  n  ndim  nfm  nfmm  nfsav  nfx  nfxm  nh  np  npt  nptm  ntrits  numEval  numberOfInterpolationPoints  state  tmp1  tmp2  trustRegionCenterInterpolationPointIndex  long  serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	if(isMinimize)  {  bMatrix.setEntry(ipt,  nfxm,  -recip);  bMatrix.setEntry(ipt,  nfxm,  -dd);  }	          bMatrix.setEntry(ipt,    nfxm,    -recip);    bMatrix.setEntry(ipt,    nfxm,    -dsqCrvmin);    	non-compiled	[CE]  cannot  find  symbol  dd	48	None	replace
