bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] final int tmp1 = (nfm - np) / n; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { [BUGGY] final int tmp1 = (nfm - np) / n; [BUGGY] jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1653	1653	1	replace	
2	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { [BUGGY] [BUGGY] final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1653	1653	1	add	
3	[BUG] [BUGGY] jpt = nfm - tmp1 * n - n; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; [BUGGY] jpt = nfm - tmp1 * n - n; [BUGGY] ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1654	1654	1	replace	
4	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; [BUGGY] [BUGGY] jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1654	1654	1	add	
5	[BUG] [BUGGY] ipt = jpt + tmp1; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; [BUGGY] ipt = jpt + tmp1; [BUGGY] if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1655	1655	1	replace	
6	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; [BUGGY] [BUGGY] ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1655	1655	1	add	
7	[BUG] [BUGGY] if (ipt > n) { [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; [BUGGY] if (ipt > n) { [BUGGY] final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1656	1656	1	replace	
8	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; [BUGGY] [BUGGY] if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1656	1656	1	add	
9	[BUG] [BUGGY] final int iptMinus1 = ipt; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } [BUGGY] final int iptMinus1 = ipt; [BUGGY] final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1662	1662	1	replace	
10	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } [BUGGY] [BUGGY] final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1662	1662	1	add	
11	[BUG] [BUGGY] final int jptMinus1 = jpt; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; [BUGGY] final int jptMinus1 = jpt; [BUGGY] interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1663	1663	1	replace	
12	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; [BUGGY] [BUGGY] final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1663	1663	1	add	
13	[BUG] [BUGGY] interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; [BUGGY] interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); [BUGGY] interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	replace	
14	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; [BUGGY] [BUGGY] interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1664	1664	1	add	
15	[BUG] [BUGGY] interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); [BUGGY] interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); [BUGGY] } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	replace	
16	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX } final int iptMinus1 = ipt; final int jptMinus1 = jpt; interpolationPoints.setEntry(nfm, iptMinus1, interpolationPoints.getEntry(ipt, iptMinus1)); [BUGGY] [BUGGY] interpolationPoints.setEntry(nfm, jptMinus1, interpolationPoints.getEntry(jpt, jptMinus1)); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1665	1665	1	add	
17	[BUG] [BUGGY] zMatrix.setEntry(0, nfxm, recip); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { [BUGGY] zMatrix.setEntry(0, nfxm, recip); [BUGGY] zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	replace	
18	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { [BUGGY] [BUGGY] zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1744	1744	1	add	
19	[BUG] [BUGGY] zMatrix.setEntry(nfm, nfxm, recip); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT]  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { zMatrix.setEntry(0, nfxm, recip); [BUGGY] zMatrix.setEntry(nfm, nfxm, recip); [BUGGY] zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1745	1745	1	replace	
20	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT]  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { zMatrix.setEntry(0, nfxm, recip); [BUGGY] [BUGGY] zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1745	1745	1	add	
21	[BUG] [BUGGY] zMatrix.setEntry(ipt, nfxm, -recip); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); [BUGGY] zMatrix.setEntry(ipt, nfxm, -recip); [BUGGY] zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1746	1746	1	replace	
22	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); [BUGGY] [BUGGY] zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1746	1746	1	add	
23	[BUG] [BUGGY] zMatrix.setEntry(jpt, nfxm, -recip); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); [BUGGY] zMatrix.setEntry(jpt, nfxm, -recip); [BUGGY]  final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	replace	
24	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); [BUGGY] [BUGGY] zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1747	1747	1	add	
25	[BUG] [BUGGY] final int ih = ipt * (ipt - 1) / 2 + jpt - 1; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT]    } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); [BUGGY] final int ih = ipt * (ipt - 1) / 2 + jpt - 1; [BUGGY] final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	replace	
26	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT]    } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); [BUGGY] [BUGGY] final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1749	1749	1	add	
27	[BUG] [BUGGY] final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT]   } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; [BUGGY] final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); [BUGGY] modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1750	1750	1	replace	
28	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT]   } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; [BUGGY] [BUGGY] final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1750	1750	1	add	
29	[BUG] [BUGGY] modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT]  } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); [BUGGY] modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); [BUGGY] throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1751	1751	1	replace	
30	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT]  } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); [BUGGY] [BUGGY] modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); throw new PathIsExploredException(); // XXX } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1751	1751	1	add	
31	[BUG] [BUGGY] throw new PathIsExploredException(); // XXX } [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); [BUGGY] throw new PathIsExploredException(); // XXX   } [BUGGY] } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1752	1753	1	replace	
32	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip); final int ih = ipt * (ipt - 1) / 2 + jpt - 1; final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1); modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp); [BUGGY] [BUGGY] throw new PathIsExploredException(); // XXX   } } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	1752	1753	1	add	
33	[BUG] [BUGGY] final Throwable t = new Throwable(); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] private static String caller(int n) { [BUGGY] final Throwable t = new Throwable(); [BUGGY] final StackTraceElement[] elements = t.getStackTrace(); final StackTraceElement e = elements[n]; return e.getMethodName() + " (at line " + e.getLineNumber() + ")"; } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] caller [RETURN_TYPE] String  int n [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference ds dsqCrvmin init lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha angbd angt bdtest bdtol beta biglsq bigstp blen boundDiff bsum cauchy crvmin csave cth curv d1 d2 d3 d4 d5 d6 d7 dderiv delsq delta deltaOne deltaTwo den denom densav dhd dhs diff diffa diffb diffc dist distsq dnorm dredg dredsq ds dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree ggsav gisq glagValue gqsq gredsq gw hDelta ha hdiag initialTrustRegionRadius min minDiff objectiveValue oneOverStepA pqold predsq presav qred ratio rdnext rdprev recip redmax rednew redsav requiredMinDiff resid rho rhosq scaden scale sdec shs slbd sqrtDenom sredg ssq step stepa stepb stepsq sth stoppingTrustRegionRadius stplen stpsav subd sum suma sumb sumin sumpq sumw sumz tau temp tempa tempb tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq xsav xsum ztest StackTraceElement[] elements ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work work1 work2 work3 xbdi Throwable t StackTraceElement e String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION dimension i iact ibdsav iflag ih ilbd ip ipt iptMinus1 isav isbd itcsav iterc itermax itest iu iubd j jp jpt jptMinus1 k kbase knew ksav m max n nact ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2454	2454	1	replace	
34	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] private static String caller(int n) { [BUGGY] [BUGGY] final Throwable t = new Throwable(); final StackTraceElement[] elements = t.getStackTrace(); final StackTraceElement e = elements[n]; return e.getMethodName() + " (at line " + e.getLineNumber() + ")"; } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] caller [RETURN_TYPE] String  int n [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference ds dsqCrvmin init lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha angbd angt bdtest bdtol beta biglsq bigstp blen boundDiff bsum cauchy crvmin csave cth curv d1 d2 d3 d4 d5 d6 d7 dderiv delsq delta deltaOne deltaTwo den denom densav dhd dhs diff diffa diffb diffc dist distsq dnorm dredg dredsq ds dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree ggsav gisq glagValue gqsq gredsq gw hDelta ha hdiag initialTrustRegionRadius min minDiff objectiveValue oneOverStepA pqold predsq presav qred ratio rdnext rdprev recip redmax rednew redsav requiredMinDiff resid rho rhosq scaden scale sdec shs slbd sqrtDenom sredg ssq step stepa stepb stepsq sth stoppingTrustRegionRadius stplen stpsav subd sum suma sumb sumin sumpq sumw sumz tau temp tempa tempb tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq xsav xsum ztest StackTraceElement[] elements ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work work1 work2 work3 xbdi Throwable t StackTraceElement e String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION dimension i iact ibdsav iflag ih ilbd ip ipt iptMinus1 isav isbd itcsav iterc itermax itest iu iubd j jp jpt jptMinus1 k kbase knew ksav m max n nact ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2454	2454	1	add	
35	[BUG] [BUGGY] final StackTraceElement[] elements = t.getStackTrace(); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] private static String caller(int n) { final Throwable t = new Throwable(); [BUGGY] final StackTraceElement[] elements = t.getStackTrace(); [BUGGY] final StackTraceElement e = elements[n]; return e.getMethodName() + " (at line " + e.getLineNumber() + ")"; } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] caller [RETURN_TYPE] String  int n [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference ds dsqCrvmin init lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha angbd angt bdtest bdtol beta biglsq bigstp blen boundDiff bsum cauchy crvmin csave cth curv d1 d2 d3 d4 d5 d6 d7 dderiv delsq delta deltaOne deltaTwo den denom densav dhd dhs diff diffa diffb diffc dist distsq dnorm dredg dredsq ds dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree ggsav gisq glagValue gqsq gredsq gw hDelta ha hdiag initialTrustRegionRadius min minDiff objectiveValue oneOverStepA pqold predsq presav qred ratio rdnext rdprev recip redmax rednew redsav requiredMinDiff resid rho rhosq scaden scale sdec shs slbd sqrtDenom sredg ssq step stepa stepb stepsq sth stoppingTrustRegionRadius stplen stpsav subd sum suma sumb sumin sumpq sumw sumz tau temp tempa tempb tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq xsav xsum ztest StackTraceElement[] elements ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work work1 work2 work3 xbdi Throwable t StackTraceElement e String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION dimension i iact ibdsav iflag ih ilbd ip ipt iptMinus1 isav isbd itcsav iterc itermax itest iu iubd j jp jpt jptMinus1 k kbase knew ksav m max n nact ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2455	2455	1	replace	
36	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] private static String caller(int n) { final Throwable t = new Throwable(); [BUGGY] [BUGGY] final StackTraceElement[] elements = t.getStackTrace(); final StackTraceElement e = elements[n]; return e.getMethodName() + " (at line " + e.getLineNumber() + ")"; } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] caller [RETURN_TYPE] String  int n [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference ds dsqCrvmin init lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha angbd angt bdtest bdtol beta biglsq bigstp blen boundDiff bsum cauchy crvmin csave cth curv d1 d2 d3 d4 d5 d6 d7 dderiv delsq delta deltaOne deltaTwo den denom densav dhd dhs diff diffa diffb diffc dist distsq dnorm dredg dredsq ds dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree ggsav gisq glagValue gqsq gredsq gw hDelta ha hdiag initialTrustRegionRadius min minDiff objectiveValue oneOverStepA pqold predsq presav qred ratio rdnext rdprev recip redmax rednew redsav requiredMinDiff resid rho rhosq scaden scale sdec shs slbd sqrtDenom sredg ssq step stepa stepb stepsq sth stoppingTrustRegionRadius stplen stpsav subd sum suma sumb sumin sumpq sumw sumz tau temp tempa tempb tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq xsav xsum ztest StackTraceElement[] elements ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work work1 work2 work3 xbdi Throwable t StackTraceElement e String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION dimension i iact ibdsav iflag ih ilbd ip ipt iptMinus1 isav isbd itcsav iterc itermax itest iu iubd j jp jpt jptMinus1 k kbase knew ksav m max n nact ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2455	2455	1	add	
37	[BUG] [BUGGY] final StackTraceElement e = elements[n]; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] private static String caller(int n) { final Throwable t = new Throwable(); final StackTraceElement[] elements = t.getStackTrace(); [BUGGY] final StackTraceElement e = elements[n]; [BUGGY] return e.getMethodName() + " (at line " + e.getLineNumber() + ")"; } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] caller [RETURN_TYPE] String  int n [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference ds dsqCrvmin init lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha angbd angt bdtest bdtol beta biglsq bigstp blen boundDiff bsum cauchy crvmin csave cth curv d1 d2 d3 d4 d5 d6 d7 dderiv delsq delta deltaOne deltaTwo den denom densav dhd dhs diff diffa diffb diffc dist distsq dnorm dredg dredsq ds dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree ggsav gisq glagValue gqsq gredsq gw hDelta ha hdiag initialTrustRegionRadius min minDiff objectiveValue oneOverStepA pqold predsq presav qred ratio rdnext rdprev recip redmax rednew redsav requiredMinDiff resid rho rhosq scaden scale sdec shs slbd sqrtDenom sredg ssq step stepa stepb stepsq sth stoppingTrustRegionRadius stplen stpsav subd sum suma sumb sumin sumpq sumw sumz tau temp tempa tempb tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq xsav xsum ztest StackTraceElement[] elements ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work work1 work2 work3 xbdi Throwable t StackTraceElement e String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION dimension i iact ibdsav iflag ih ilbd ip ipt iptMinus1 isav isbd itcsav iterc itermax itest iu iubd j jp jpt jptMinus1 k kbase knew ksav m max n nact ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2456	2456	1	replace	
38	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] private static String caller(int n) { final Throwable t = new Throwable(); final StackTraceElement[] elements = t.getStackTrace(); [BUGGY] [BUGGY] final StackTraceElement e = elements[n]; return e.getMethodName() + " (at line " + e.getLineNumber() + ")"; } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] caller [RETURN_TYPE] String  int n [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference ds dsqCrvmin init lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha angbd angt bdtest bdtol beta biglsq bigstp blen boundDiff bsum cauchy crvmin csave cth curv d1 d2 d3 d4 d5 d6 d7 dderiv delsq delta deltaOne deltaTwo den denom densav dhd dhs diff diffa diffb diffc dist distsq dnorm dredg dredsq ds dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree ggsav gisq glagValue gqsq gredsq gw hDelta ha hdiag initialTrustRegionRadius min minDiff objectiveValue oneOverStepA pqold predsq presav qred ratio rdnext rdprev recip redmax rednew redsav requiredMinDiff resid rho rhosq scaden scale sdec shs slbd sqrtDenom sredg ssq step stepa stepb stepsq sth stoppingTrustRegionRadius stplen stpsav subd sum suma sumb sumin sumpq sumw sumz tau temp tempa tempb tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq xsav xsum ztest StackTraceElement[] elements ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work work1 work2 work3 xbdi Throwable t StackTraceElement e String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION dimension i iact ibdsav iflag ih ilbd ip ipt iptMinus1 isav isbd itcsav iterc itermax itest iu iubd j jp jpt jptMinus1 k kbase knew ksav m max n nact ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2456	2456	1	add	
39	[BUG] [BUGGY] return e.getMethodName() + " (at line " + e.getLineNumber() + ")"; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] private static String caller(int n) { final Throwable t = new Throwable(); final StackTraceElement[] elements = t.getStackTrace(); final StackTraceElement e = elements[n]; [BUGGY] return e.getMethodName() + " (at line " + e.getLineNumber() + ")"; [BUGGY] } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] caller [RETURN_TYPE] String  int n [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference ds dsqCrvmin init lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha angbd angt bdtest bdtol beta biglsq bigstp blen boundDiff bsum cauchy crvmin csave cth curv d1 d2 d3 d4 d5 d6 d7 dderiv delsq delta deltaOne deltaTwo den denom densav dhd dhs diff diffa diffb diffc dist distsq dnorm dredg dredsq ds dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree ggsav gisq glagValue gqsq gredsq gw hDelta ha hdiag initialTrustRegionRadius min minDiff objectiveValue oneOverStepA pqold predsq presav qred ratio rdnext rdprev recip redmax rednew redsav requiredMinDiff resid rho rhosq scaden scale sdec shs slbd sqrtDenom sredg ssq step stepa stepb stepsq sth stoppingTrustRegionRadius stplen stpsav subd sum suma sumb sumin sumpq sumw sumz tau temp tempa tempb tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq xsav xsum ztest StackTraceElement[] elements ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work work1 work2 work3 xbdi Throwable t StackTraceElement e String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION dimension i iact ibdsav iflag ih ilbd ip ipt iptMinus1 isav isbd itcsav iterc itermax itest iu iubd j jp jpt jptMinus1 k kbase knew ksav m max n nact ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	replace	
40	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] private static String caller(int n) { final Throwable t = new Throwable(); final StackTraceElement[] elements = t.getStackTrace(); final StackTraceElement e = elements[n]; [BUGGY] [BUGGY] return e.getMethodName() + " (at line " + e.getLineNumber() + ")"; } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] caller [RETURN_TYPE] String  int n [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference ds dsqCrvmin init lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha angbd angt bdtest bdtol beta biglsq bigstp blen boundDiff bsum cauchy crvmin csave cth curv d1 d2 d3 d4 d5 d6 d7 dderiv delsq delta deltaOne deltaTwo den denom densav dhd dhs diff diffa diffb diffc dist distsq dnorm dredg dredsq ds dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree ggsav gisq glagValue gqsq gredsq gw hDelta ha hdiag initialTrustRegionRadius min minDiff objectiveValue oneOverStepA pqold predsq presav qred ratio rdnext rdprev recip redmax rednew redsav requiredMinDiff resid rho rhosq scaden scale sdec shs slbd sqrtDenom sredg ssq step stepa stepb stepsq sth stoppingTrustRegionRadius stplen stpsav subd sum suma sumb sumin sumpq sumw sumz tau temp tempa tempb tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq xsav xsum ztest StackTraceElement[] elements ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work work1 work2 work3 xbdi Throwable t StackTraceElement e String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION dimension i iact ibdsav iflag ih ilbd ip ipt iptMinus1 isav isbd itcsav iterc itermax itest iu iubd j jp jpt jptMinus1 k kbase knew ksav m max n nact ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	1.0	2457	2457	1	add	
41	[BUG] [BUGGY] initialTrustRegionRadius = minDiff / 3.0; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT]  boundDifference = new double[dimension]; double requiredMinDiff = 2 * initialTrustRegionRadius; double minDiff = Double.POSITIVE_INFINITY; for (int i = 0; i < dimension; i++) { boundDifference[i] = upperBound[i] - lowerBound[i]; minDiff = Math.min(minDiff, boundDifference[i]); } if (minDiff < requiredMinDiff) { [BUGGY] initialTrustRegionRadius = minDiff / 3.0; [BUGGY] }  bMatrix = new Array2DRowRealMatrix(dimension + numberOfInterpolationPoints, dimension); zMatrix = new Array2DRowRealMatrix(numberOfInterpolationPoints, numberOfInterpolationPoints - dimension - 1); interpolationPoints = new Array2DRowRealMatrix(numberOfInterpolationPoints, dimension); originShift = new ArrayRealVector(dimension); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] setup [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin init lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha angbd angt bdtest bdtol beta biglsq bigstp blen boundDiff bsum cauchy crvmin csave cth curv d1 d2 d3 d4 d5 d6 d7 dderiv delsq delta deltaOne deltaTwo den denom densav dhd dhs diff diffa diffb diffc dist distsq dnorm dredg dredsq ds dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree ggsav gisq glagValue gqsq gredsq gw hDelta ha hdiag initialTrustRegionRadius min minDiff objectiveValue oneOverStepA pqold predsq presav qred ratio rdnext rdprev recip redmax rednew redsav requiredMinDiff resid rho rhosq scaden scale sdec shs slbd sqrtDenom sredg ssq step stepa stepb stepsq sth stoppingTrustRegionRadius stplen stpsav subd sum suma sumb sumin sumpq sumw sumz tau temp tempa tempb tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq xsav xsum ztest ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work work1 work2 work3 xbdi int[] nPointsInterval String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION dimension i iact ibdsav iflag ih ilbd ip ipt iptMinus1 isav isbd itcsav iterc itermax itest iu iubd j jp jpt jptMinus1 k kbase knew ksav m max n nact ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	replace	
42	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT]  boundDifference = new double[dimension]; double requiredMinDiff = 2 * initialTrustRegionRadius; double minDiff = Double.POSITIVE_INFINITY; for (int i = 0; i < dimension; i++) { boundDifference[i] = upperBound[i] - lowerBound[i]; minDiff = Math.min(minDiff, boundDifference[i]); } if (minDiff < requiredMinDiff) { [BUGGY] [BUGGY] initialTrustRegionRadius = minDiff / 3.0; }  bMatrix = new Array2DRowRealMatrix(dimension + numberOfInterpolationPoints, dimension); zMatrix = new Array2DRowRealMatrix(numberOfInterpolationPoints, numberOfInterpolationPoints - dimension - 1); interpolationPoints = new Array2DRowRealMatrix(numberOfInterpolationPoints, dimension); originShift = new ArrayRealVector(dimension); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] setup [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin init lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha angbd angt bdtest bdtol beta biglsq bigstp blen boundDiff bsum cauchy crvmin csave cth curv d1 d2 d3 d4 d5 d6 d7 dderiv delsq delta deltaOne deltaTwo den denom densav dhd dhs diff diffa diffb diffc dist distsq dnorm dredg dredsq ds dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree ggsav gisq glagValue gqsq gredsq gw hDelta ha hdiag initialTrustRegionRadius min minDiff objectiveValue oneOverStepA pqold predsq presav qred ratio rdnext rdprev recip redmax rednew redsav requiredMinDiff resid rho rhosq scaden scale sdec shs slbd sqrtDenom sredg ssq step stepa stepb stepsq sth stoppingTrustRegionRadius stplen stpsav subd sum suma sumb sumin sumpq sumw sumz tau temp tempa tempb tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq xsav xsum ztest ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work work1 work2 work3 xbdi int[] nPointsInterval String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION dimension i iact ibdsav iflag ih ilbd ip ipt iptMinus1 isav isbd itcsav iterc itermax itest iu iubd j jp jpt jptMinus1 k kbase knew ksav m max n nact ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.5773502691896258	2413	2413	1	add	
43	[BUG] [BUGGY] stepa = interpolationPoints.getEntry(nfx, nfxm); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] if (nfm <= 2 * n) { if (nfm >= 1 && nfm <= n) { stepa = initialTrustRegionRadius; if (upperDifference.getEntry(nfmm) == ZERO) { stepa = -stepa; throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfmm, stepa); } else if (nfm > n) { [BUGGY] stepa = interpolationPoints.getEntry(nfx, nfxm); [BUGGY] stepb = -initialTrustRegionRadius; if (lowerDifference.getEntry(nfxm) == ZERO) { stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1640	1640	1	replace	
44	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] if (nfm <= 2 * n) { if (nfm >= 1 && nfm <= n) { stepa = initialTrustRegionRadius; if (upperDifference.getEntry(nfmm) == ZERO) { stepa = -stepa; throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfmm, stepa); } else if (nfm > n) { [BUGGY] [BUGGY] stepa = interpolationPoints.getEntry(nfx, nfxm); stepb = -initialTrustRegionRadius; if (lowerDifference.getEntry(nfxm) == ZERO) { stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1640	1640	1	add	
45	[BUG] [BUGGY] stepb = -initialTrustRegionRadius; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] if (nfm >= 1 && nfm <= n) { stepa = initialTrustRegionRadius; if (upperDifference.getEntry(nfmm) == ZERO) { stepa = -stepa; throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfmm, stepa); } else if (nfm > n) { stepa = interpolationPoints.getEntry(nfx, nfxm); [BUGGY] stepb = -initialTrustRegionRadius; [BUGGY] if (lowerDifference.getEntry(nfxm) == ZERO) { stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1641	1641	1	replace	
46	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] if (nfm >= 1 && nfm <= n) { stepa = initialTrustRegionRadius; if (upperDifference.getEntry(nfmm) == ZERO) { stepa = -stepa; throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfmm, stepa); } else if (nfm > n) { stepa = interpolationPoints.getEntry(nfx, nfxm); [BUGGY] [BUGGY] stepb = -initialTrustRegionRadius; if (lowerDifference.getEntry(nfxm) == ZERO) { stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1641	1641	1	add	
47	[BUG] [BUGGY] if (lowerDifference.getEntry(nfxm) == ZERO) { [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] nfm <= n) { stepa = initialTrustRegionRadius; if (upperDifference.getEntry(nfmm) == ZERO) { stepa = -stepa; throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfmm, stepa); } else if (nfm > n) { stepa = interpolationPoints.getEntry(nfx, nfxm); stepb = -initialTrustRegionRadius; [BUGGY] if (lowerDifference.getEntry(nfxm) == ZERO) { [BUGGY] stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1642	1642	1	replace	
48	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] nfm <= n) { stepa = initialTrustRegionRadius; if (upperDifference.getEntry(nfmm) == ZERO) { stepa = -stepa; throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfmm, stepa); } else if (nfm > n) { stepa = interpolationPoints.getEntry(nfx, nfxm); stepb = -initialTrustRegionRadius; [BUGGY] [BUGGY] if (lowerDifference.getEntry(nfxm) == ZERO) { stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1642	1642	1	add	
49	[BUG] [BUGGY] if (upperDifference.getEntry(nfxm) == ZERO) { [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfmm, stepa); } else if (nfm > n) { stepa = interpolationPoints.getEntry(nfx, nfxm); stepb = -initialTrustRegionRadius; if (lowerDifference.getEntry(nfxm) == ZERO) { stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } [BUGGY] if (upperDifference.getEntry(nfxm) == ZERO) { [BUGGY] stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1646	1646	1	replace	
50	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfmm, stepa); } else if (nfm > n) { stepa = interpolationPoints.getEntry(nfx, nfxm); stepb = -initialTrustRegionRadius; if (lowerDifference.getEntry(nfxm) == ZERO) { stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } [BUGGY] [BUGGY] if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1646	1646	1	add	
51	[BUG] [BUGGY] interpolationPoints.setEntry(nfm, nfxm, stepb); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] stepa = interpolationPoints.getEntry(nfx, nfxm); stepb = -initialTrustRegionRadius; if (lowerDifference.getEntry(nfxm) == ZERO) { stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } [BUGGY] interpolationPoints.setEntry(nfm, nfxm, stepb); [BUGGY] } } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1650	1650	1	replace	
52	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] stepa = interpolationPoints.getEntry(nfx, nfxm); stepb = -initialTrustRegionRadius; if (lowerDifference.getEntry(nfxm) == ZERO) { stepb = Math.min(TWO * initialTrustRegionRadius, upperDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } if (upperDifference.getEntry(nfxm) == ZERO) { stepb = Math.max(-TWO * initialTrustRegionRadius, lowerDifference.getEntry(nfxm)); throw new PathIsExploredException(); // XXX } [BUGGY] [BUGGY] interpolationPoints.setEntry(nfm, nfxm, stepb); } } else { final int tmp1 = (nfm - np) / n; jpt = nfm - tmp1 * n - n; ipt = jpt + tmp1; if (ipt > n) { final int tmp2 = jpt; jpt = ipt - n; ipt = tmp2; throw new PathIsExploredException(); // XXX [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1650	1650	1	add	
53	[BUG] [BUGGY] final int ih = nfx * (nfx + 1) / 2 - 1; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] numEval <= n + 1) { gradientAtTrustRegionCenter.setEntry(nfmm, (f - fbeg) / stepa); if (npt < numEval + n) { final double oneOverStepA = ONE / stepa; bMatrix.setEntry(0, nfmm, -oneOverStepA); bMatrix.setEntry(nfm, nfmm, oneOverStepA); bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { [BUGGY] final int ih = nfx * (nfx + 1) / 2 - 1; [BUGGY] final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1713	1713	1	replace	
54	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] numEval <= n + 1) { gradientAtTrustRegionCenter.setEntry(nfmm, (f - fbeg) / stepa); if (npt < numEval + n) { final double oneOverStepA = ONE / stepa; bMatrix.setEntry(0, nfmm, -oneOverStepA); bMatrix.setEntry(nfm, nfmm, oneOverStepA); bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { [BUGGY] [BUGGY] final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1713	1713	1	add	
55	[BUG] [BUGGY] final double tmp = (f - fbeg) / stepb; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] gradientAtTrustRegionCenter.setEntry(nfmm, (f - fbeg) / stepa); if (npt < numEval + n) { final double oneOverStepA = ONE / stepa; bMatrix.setEntry(0, nfmm, -oneOverStepA); bMatrix.setEntry(nfm, nfmm, oneOverStepA); bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; [BUGGY] final double tmp = (f - fbeg) / stepb; [BUGGY] final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1714	1714	1	replace	
56	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] gradientAtTrustRegionCenter.setEntry(nfmm, (f - fbeg) / stepa); if (npt < numEval + n) { final double oneOverStepA = ONE / stepa; bMatrix.setEntry(0, nfmm, -oneOverStepA); bMatrix.setEntry(nfm, nfmm, oneOverStepA); bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; [BUGGY] [BUGGY] final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1714	1714	1	add	
57	[BUG] [BUGGY] final double diff = stepb - stepa; [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] if (npt < numEval + n) { final double oneOverStepA = ONE / stepa; bMatrix.setEntry(0, nfmm, -oneOverStepA); bMatrix.setEntry(nfm, nfmm, oneOverStepA); bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; [BUGGY] final double diff = stepb - stepa; [BUGGY] modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1715	1715	1	replace	
58	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] if (npt < numEval + n) { final double oneOverStepA = ONE / stepa; bMatrix.setEntry(0, nfmm, -oneOverStepA); bMatrix.setEntry(nfm, nfmm, oneOverStepA); bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; [BUGGY] [BUGGY] final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1715	1715	1	add	
59	[BUG] [BUGGY] modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] final double oneOverStepA = ONE / stepa; bMatrix.setEntry(0, nfmm, -oneOverStepA); bMatrix.setEntry(nfm, nfmm, oneOverStepA); bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; [BUGGY] modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); [BUGGY] gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1716	1716	1	replace	
60	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] final double oneOverStepA = ONE / stepa; bMatrix.setEntry(0, nfmm, -oneOverStepA); bMatrix.setEntry(nfm, nfmm, oneOverStepA); bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; [BUGGY] [BUGGY] modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1716	1716	1	add	
61	[BUG] [BUGGY] gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] bMatrix.setEntry(0, nfmm, -oneOverStepA); bMatrix.setEntry(nfm, nfmm, oneOverStepA); bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); [BUGGY] gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); [BUGGY] if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1717	1717	1	replace	
62	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] bMatrix.setEntry(0, nfmm, -oneOverStepA); bMatrix.setEntry(nfm, nfmm, oneOverStepA); bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); [BUGGY] [BUGGY] gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1717	1717	1	add	
63	[BUG] [BUGGY] if (stepa * stepb < ZERO) { [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] bMatrix.setEntry(nfm, nfmm, oneOverStepA); bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); [BUGGY] if (stepa * stepb < ZERO) { [BUGGY] if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1718	1718	1	replace	
64	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] bMatrix.setEntry(nfm, nfmm, oneOverStepA); bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); [BUGGY] [BUGGY] if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1718	1718	1	add	
65	[BUG] [BUGGY] if (f < fAtInterpolationPoints.getEntry(nfm - n)) { [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { [BUGGY] if (f < fAtInterpolationPoints.getEntry(nfm - n)) { [BUGGY] fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1719	1719	1	replace	
66	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq); throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { [BUGGY] [BUGGY] if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1719	1719	1	add	
67	[BUG] [BUGGY] fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { [BUGGY] fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); [BUGGY] fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1720	1720	1	replace	
68	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] throw new PathIsExploredException(); // XXX } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { [BUGGY] [BUGGY] fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1720	1720	1	add	
69	[BUG] [BUGGY] fAtInterpolationPoints.setEntry(nfm - n, f); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); [BUGGY] fAtInterpolationPoints.setEntry(nfm - n, f); [BUGGY] if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1721	1721	1	replace	
70	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); [BUGGY] [BUGGY] fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1721	1721	1	add	
71	[BUG] [BUGGY] if (trustRegionCenterInterpolationPointIndex == nfm) { [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); [BUGGY] if (trustRegionCenterInterpolationPointIndex == nfm) { [BUGGY] trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1722	1722	1	replace	
72	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } else if (numEval >= n + 2) { final int ih = nfx * (nfx + 1) / 2 - 1; final double tmp = (f - fbeg) / stepb; final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); [BUGGY] [BUGGY] if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1722	1722	1	add	
73	[BUG] [BUGGY] interpolationPoints.setEntry(nfm - n, nfxm, stepb); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } [BUGGY] interpolationPoints.setEntry(nfm - n, nfxm, stepb); [BUGGY] interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1725	1725	1	replace	
74	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] final double diff = stepb - stepa; modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } [BUGGY] [BUGGY] interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1725	1725	1	add	
75	[BUG] [BUGGY] interpolationPoints.setEntry(nfm, nfxm, stepa); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); [BUGGY] interpolationPoints.setEntry(nfm, nfxm, stepa); [BUGGY] } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1726	1726	1	replace	
76	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] modelSecondDerivativesValues.setEntry(ih, TWO * (tmp - gradientAtTrustRegionCenter.getEntry(nfxm)) / diff); gradientAtTrustRegionCenter.setEntry(nfxm, (gradientAtTrustRegionCenter.getEntry(nfxm) * stepb - tmp * stepa) / diff); if (stepa * stepb < ZERO) { if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); [BUGGY] [BUGGY] interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1726	1726	1	add	
77	[BUG] [BUGGY] bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } [BUGGY] bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); [BUGGY] bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }  [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1729	1729	1	replace	
78	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] if (f < fAtInterpolationPoints.getEntry(nfm - n)) { fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } [BUGGY] [BUGGY] bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }  [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1729	1729	1	add	
79	[BUG] [BUGGY] bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); [BUGGY] bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); [BUGGY] bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }   [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1730	1730	1	replace	
80	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] fAtInterpolationPoints.setEntry(nfm, fAtInterpolationPoints.getEntry(nfm - n)); fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); [BUGGY] [BUGGY] bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }   [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1730	1730	1	add	
81	[BUG] [BUGGY] bMatrix.setEntry(nfm - n, nfxm,   -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); [BUGGY] bMatrix.setEntry(nfm - n, nfxm,         -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); [BUGGY] -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1731	1732	1	replace	
82	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] fAtInterpolationPoints.setEntry(nfm - n, f); if (trustRegionCenterInterpolationPointIndex == nfm) { trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); [BUGGY] [BUGGY] bMatrix.setEntry(nfm - n, nfxm,         -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1731	1732	1	add	
83	[BUG] [BUGGY] zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); [BUGGY] zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); [BUGGY] zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1733	1733	1	replace	
84	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] trustRegionCenterInterpolationPointIndex = nfm - n; } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); [BUGGY] [BUGGY] zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1733	1733	1	add	
85	[BUG] [BUGGY] zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); [BUGGY] zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq); [BUGGY]  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { zMatrix.setEntry(0, nfxm, recip); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1734	1734	1	replace	
86	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } interpolationPoints.setEntry(nfm - n, nfxm, stepb); interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); [BUGGY] [BUGGY] zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { zMatrix.setEntry(0, nfxm, recip); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1734	1734	1	add	
87	[BUG] [BUGGY] zMatrix.setEntry(nfm - n, nfxm,   -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  [BUGGY] zMatrix.setEntry(nfm - n, nfxm,         -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); [BUGGY] -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1736	1737	1	replace	
88	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] interpolationPoints.setEntry(nfm, nfxm, stepa); } } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  [BUGGY] [BUGGY] zMatrix.setEntry(nfm - n, nfxm,         -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); }    } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1736	1737	1	add	
89	[BUG] [BUGGY] } [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); [BUGGY] } [BUGGY]    } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip);  [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1738	1738	1	replace	
90	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] } bMatrix.setEntry(0, nfxm, -(stepa + stepb) / (stepa * stepb)); bMatrix.setEntry(nfm, nfxm, -HALF / interpolationPoints.getEntry(nfm - n, nfxm)); bMatrix.setEntry(nfm - n, nfxm, -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm)); zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb)); zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);  zMatrix.setEntry(nfm - n, nfxm, -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm)); [BUGGY] [BUGGY] }    } else { zMatrix.setEntry(0, nfxm, recip); zMatrix.setEntry(nfm, nfxm, recip); zMatrix.setEntry(ipt, nfxm, -recip); zMatrix.setEntry(jpt, nfxm, -recip);  [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] prelim [RETURN_TYPE] void  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] alphaCauchy boundDifference dsqCrvmin lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO adelt alpha bdtest bdtol beta biglsq bigstp boundDiff bsum cauchy crvmin csave curv d1 d2 d3 d4 d5 dderiv delsq delta deltaOne deltaTwo den denom densav diff diffa diffb diffc dist distsq dnorm dsq dx errbig f fbeg fopt fracsq frhosq fsave ggfree gisq glagValue gqsq gw hDelta ha hdiag initialTrustRegionRadius min objectiveValue oneOverStepA pqold predsq presav ratio recip rho rhosq scaden scale slbd step stepa stepb stoppingTrustRegionRadius stpsav subd sum suma sumb sumin sumpq sumw sumz temp tmp tmp1 tmp2 value vlag vquad wfixsq xoptsq ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints glag gnew gradientAtTrustRegionCenter hcol hred hs lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift s trialStepPoint trustRegionCenterOffset upperDifference work1 work2 work3 xbdi String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION i ibdsav iflag ih ilbd ip ipt iptMinus1 isbd itest iubd j jp jpt jptMinus1 k kbase knew ksav m max n ndim nfm nfmm nfsav nfx nfxm nh np npt nptm ntrits numEval numberOfInterpolationPoints state tmp1 tmp2 trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2773500981126146	1738	1738	1	add	
91	[BUG] [BUGGY] isMinimize = (getGoalType() == GoalType.MINIMIZE); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] protected RealPointValuePair doOptimize() { final double[] lowerBound = getLowerBound(); final double[] upperBound = getUpperBound();  setup(lowerBound, upperBound); [BUGGY] isMinimize = (getGoalType() == GoalType.MINIMIZE); [BUGGY] currentBest = new ArrayRealVector(getStartPoint()); final double value = bobyqa(lowerBound, upperBound); return new RealPointValuePair(currentBest.getDataRef(), isMinimize ? value : -value); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] doOptimize [RETURN_TYPE] RealPointValuePair  [VARIABLES] boolean isMinimize double[] boundDifference lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO initialTrustRegionRadius stoppingTrustRegionRadius value ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints gradientAtTrustRegionCenter lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift trialStepPoint trustRegionCenterOffset upperDifference String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION numberOfInterpolationPoints trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2672612419124244	241	241	1	replace	
92	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] protected RealPointValuePair doOptimize() { final double[] lowerBound = getLowerBound(); final double[] upperBound = getUpperBound();  setup(lowerBound, upperBound); [BUGGY] [BUGGY] isMinimize = (getGoalType() == GoalType.MINIMIZE); currentBest = new ArrayRealVector(getStartPoint()); final double value = bobyqa(lowerBound, upperBound); return new RealPointValuePair(currentBest.getDataRef(), isMinimize ? value : -value); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] doOptimize [RETURN_TYPE] RealPointValuePair  [VARIABLES] boolean isMinimize double[] boundDifference lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO initialTrustRegionRadius stoppingTrustRegionRadius value ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints gradientAtTrustRegionCenter lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift trialStepPoint trustRegionCenterOffset upperDifference String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION numberOfInterpolationPoints trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2672612419124244	241	241	1	add	
93	[BUG] [BUGGY] currentBest = new ArrayRealVector(getStartPoint()); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] protected RealPointValuePair doOptimize() { final double[] lowerBound = getLowerBound(); final double[] upperBound = getUpperBound();  setup(lowerBound, upperBound); isMinimize = (getGoalType() == GoalType.MINIMIZE); [BUGGY] currentBest = new ArrayRealVector(getStartPoint()); [BUGGY]  final double value = bobyqa(lowerBound, upperBound); return new RealPointValuePair(currentBest.getDataRef(), isMinimize ? value : -value); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] doOptimize [RETURN_TYPE] RealPointValuePair  [VARIABLES] boolean isMinimize double[] boundDifference lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO initialTrustRegionRadius stoppingTrustRegionRadius value ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints gradientAtTrustRegionCenter lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift trialStepPoint trustRegionCenterOffset upperDifference String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION numberOfInterpolationPoints trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2672612419124244	242	242	1	replace	
94	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] protected RealPointValuePair doOptimize() { final double[] lowerBound = getLowerBound(); final double[] upperBound = getUpperBound();  setup(lowerBound, upperBound); isMinimize = (getGoalType() == GoalType.MINIMIZE); [BUGGY] [BUGGY] currentBest = new ArrayRealVector(getStartPoint()); final double value = bobyqa(lowerBound, upperBound); return new RealPointValuePair(currentBest.getDataRef(), isMinimize ? value : -value); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] doOptimize [RETURN_TYPE] RealPointValuePair  [VARIABLES] boolean isMinimize double[] boundDifference lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO initialTrustRegionRadius stoppingTrustRegionRadius value ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints gradientAtTrustRegionCenter lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift trialStepPoint trustRegionCenterOffset upperDifference String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION numberOfInterpolationPoints trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2672612419124244	242	242	1	add	
95	[BUG] [BUGGY] final double value = bobyqa(lowerBound, upperBound); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] protected RealPointValuePair doOptimize() { final double[] lowerBound = getLowerBound(); final double[] upperBound = getUpperBound();  setup(lowerBound, upperBound); isMinimize = (getGoalType() == GoalType.MINIMIZE); currentBest = new ArrayRealVector(getStartPoint()); [BUGGY] final double value = bobyqa(lowerBound, upperBound); [BUGGY]  return new RealPointValuePair(currentBest.getDataRef(), isMinimize ? value : -value); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] doOptimize [RETURN_TYPE] RealPointValuePair  [VARIABLES] boolean isMinimize double[] boundDifference lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO initialTrustRegionRadius stoppingTrustRegionRadius value ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints gradientAtTrustRegionCenter lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift trialStepPoint trustRegionCenterOffset upperDifference String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION numberOfInterpolationPoints trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2672612419124244	244	244	1	replace	
96	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] protected RealPointValuePair doOptimize() { final double[] lowerBound = getLowerBound(); final double[] upperBound = getUpperBound();  setup(lowerBound, upperBound); isMinimize = (getGoalType() == GoalType.MINIMIZE); currentBest = new ArrayRealVector(getStartPoint()); [BUGGY] [BUGGY] final double value = bobyqa(lowerBound, upperBound); return new RealPointValuePair(currentBest.getDataRef(), isMinimize ? value : -value); } [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] doOptimize [RETURN_TYPE] RealPointValuePair  [VARIABLES] boolean isMinimize double[] boundDifference lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO initialTrustRegionRadius stoppingTrustRegionRadius value ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints gradientAtTrustRegionCenter lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift trialStepPoint trustRegionCenterOffset upperDifference String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION numberOfInterpolationPoints trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2672612419124244	244	244	1	add	
97	[BUG] [BUGGY] printMethod(); // XXX final int n = currentBest.getDimension(); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] double[] upperBound) { [BUGGY] printMethod(); // XXX    final int n = currentBest.getDimension(); [BUGGY]  final int n = currentBest.getDimension();        [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] bobyqa [RETURN_TYPE] double  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] boundDifference lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO boundDiff deltaOne deltaTwo initialTrustRegionRadius stoppingTrustRegionRadius value ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints gradientAtTrustRegionCenter lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift trialStepPoint trustRegionCenterOffset upperDifference String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION j n numberOfInterpolationPoints trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2672612419124244	287	289	1	replace	
98	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] double[] upperBound) { [BUGGY] [BUGGY] printMethod(); // XXX    final int n = currentBest.getDimension(); final int n = currentBest.getDimension();        [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] bobyqa [RETURN_TYPE] double  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] boundDifference lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO boundDiff deltaOne deltaTwo initialTrustRegionRadius stoppingTrustRegionRadius value ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints gradientAtTrustRegionCenter lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift trialStepPoint trustRegionCenterOffset upperDifference String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION j n numberOfInterpolationPoints trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2672612419124244	287	289	1	add	
99	[BUG] [BUGGY] final int n = currentBest.getDimension(); [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] double[] upperBound) { printMethod(); // XXX [BUGGY] final int n = currentBest.getDimension(); [BUGGY]        for (int j = 0; j < n; j++) { final double boundDiff = boundDifference[j]; [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] bobyqa [RETURN_TYPE] double  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] boundDifference lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO boundDiff deltaOne deltaTwo initialTrustRegionRadius stoppingTrustRegionRadius value ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints gradientAtTrustRegionCenter lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift trialStepPoint trustRegionCenterOffset upperDifference String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION j n numberOfInterpolationPoints trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2672612419124244	289	289	1	replace	
100	[BUG] [BUGGY] [FE] BOBYQAOptimizer$PathIsExploredException [CONTEXT] double[] upperBound) { printMethod(); // XXX [BUGGY] [BUGGY] final int n = currentBest.getDimension();        for (int j = 0; j < n; j++) { final double boundDiff = boundDifference[j]; [CLASS] BOBYQAOptimizer PathIsExploredException [METHOD] bobyqa [RETURN_TYPE] double  double[] lowerBound double[] upperBound [VARIABLES] boolean isMinimize double[] boundDifference lowerBound upperBound Array2DRowRealMatrix bMatrix interpolationPoints zMatrix double DEFAULT_INITIAL_RADIUS DEFAULT_STOPPING_RADIUS HALF MINUS_ONE ONE ONE_OVER_A_THOUSAND ONE_OVER_EIGHT ONE_OVER_FOUR ONE_OVER_TEN SIXTEEN TEN TWO TWO_HUNDRED_FIFTY ZERO boundDiff deltaOne deltaTwo initialTrustRegionRadius stoppingTrustRegionRadius value ArrayRealVector alternativeNewPoint currentBest fAtInterpolationPoints gradientAtTrustRegionCenter lagrangeValuesAtNewPoint lowerDifference modelSecondDerivativesParameters modelSecondDerivativesValues newPoint originShift trialStepPoint trustRegionCenterOffset upperDifference String PATH_IS_EXPLORED int MINIMUM_PROBLEM_DIMENSION j n numberOfInterpolationPoints trustRegionCenterInterpolationPointIndex long serialVersionUID  	projects/Math38/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java	0.2672612419124244	289	289	1	add	
