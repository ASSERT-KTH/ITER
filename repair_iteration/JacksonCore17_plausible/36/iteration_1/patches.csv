bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  3)  >=  inputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if((  _outputTail  +  3)  >=  inputEnd)  {	  if((    _outputTail    +    3)    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	4	1	replace
2	[BUG]  [BUGGY]  if((  _outputTail  +  3)  >=  inputEnd)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  3)  >=  inputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  3)  >=  inputEnd)  {	  if((    _outputTail    +    3)    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	4	1	replace
3	[BUG]  [BUGGY]  if((  _outputTail  +  6)  >=  _outputEnd)  {  if((  _outputTail  +  6)  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  6)  >=  _outputEnd)  {  if((  _outputTail  +  6)  >=  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    6)    >=    _outputEnd)    {    if((  _outputTail  +  6)  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
4	[BUG]  [BUGGY]  if((  _outputTail  +  6)  >=  _outputEnd)  {  if((  _outputTail  +  6)  >>  _outputEnd)  {  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  6)  >=  _outputEnd)  {  if((  _outputTail  +  6)  >>  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    6)    >=    _outputEnd)    {    if((  _outputTail  +  6)  >>  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
5	[BUG]  [BUGGY]  if((  _outputTail  +  6)  >=  _outputEnd)  {  if((  _outputTail  +  6)!=  _outputEnd)  {  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  6)  >=  _outputEnd)  {  if((  _outputTail  +  6)!=  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    6)    >=    _outputEnd)    {    if((  _outputTail  +  6)!=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
6	[BUG]  [BUGGY]  if((  _outputTail  +  6)  >=  _outputEnd)  {  if((  _outputTail  +  6)  ==  _outputEnd)  {  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  6)  >=  _outputEnd)  {  if((  _outputTail  +  6)  ==  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    6)    >=    _outputEnd)    {    if((  _outputTail  +  6)  ==  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
7	[BUG]  [BUGGY]  if((  _outputTail  +  5)  >=  _outputEnd)  {  if((  _outputTail  +  5)  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  5)  >=  _outputEnd)  {  if((  _outputTail  +  5)  >=  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    5)    >=    _outputEnd)    {    if((  _outputTail  +  5)  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
8	[BUG]  [BUGGY]  if((  _outputTail  +  5)  >=  _outputEnd)  {  if((  _outputTail  +  5)  >>  _outputEnd)  {  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  5)  >=  _outputEnd)  {  if((  _outputTail  +  5)  >>  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    5)    >=    _outputEnd)    {    if((  _outputTail  +  5)  >>  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
9	[BUG]  [BUGGY]  if((  _outputTail  +  5)  >=  _outputEnd)  {  if((  _outputTail  +  5)!=  _outputEnd)  {  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  5)  >=  _outputEnd)  {  if((  _outputTail  +  5)!=  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    5)    >=    _outputEnd)    {    if((  _outputTail  +  5)!=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
10	[BUG]  [BUGGY]  if((  _outputTail  +  5)  >=  _outputEnd)  {  if((  _outputTail  +  5)  ==  _outputEnd)  {  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  5)  >=  _outputEnd)  {  if((  _outputTail  +  5)  ==  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    5)    >=    _outputEnd)    {    if((  _outputTail  +  5)  ==  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
11	[BUG]  [BUGGY]  if((  _outputTail  +  3)  >=  end)  {  if((  _outputTail  +  3)  >=  end)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  3)  >=  end)  {  if((  _outputTail  +  3)  >=  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    3)    >=    end)    {    if((  _outputTail  +  3)  >=  end)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
12	[BUG]  [BUGGY]  if((  _outputTail  +  3)  >=  end)  {  if((  _outputTail  +  3)  >>  end)  {  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  3)  >=  end)  {  if((  _outputTail  +  3)  >>  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    3)    >=    end)    {    if((  _outputTail  +  3)  >>  end)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
13	[BUG]  [BUGGY]  if((  _outputTail  +  3)  >=  end)  {  if((  _outputTail  +  3)!=  end)  {  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  3)  >=  end)  {  if((  _outputTail  +  3)!=  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    3)    >=    end)    {    if((  _outputTail  +  3)!=  end)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
14	[BUG]  [BUGGY]  if((  _outputTail  +  3)  >=  end)  {  if((  _outputTail  +  3)  ==  end)  {  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  3)  >=  end)  {  if((  _outputTail  +  3)  ==  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    3)    >=    end)    {    if((  _outputTail  +  3)  ==  end)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
15	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  5)  >=  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if((  _outputTail  +  5)  >=  end)  {	  if((    _outputTail    +    6)    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	9	1	replace
16	[BUG]  [BUGGY]  if((  _outputTail  +  5)  >=  end)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  5)  >=  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  5)  >=  end)  {	  if((    _outputTail    +    6)    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	9	1	replace
17	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  if(_outputTail  >=  end)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  end)  {  if(_outputTail  >=  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    end)    {    if(_outputTail  >=  end)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
18	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  if(_outputTail  >>  end)  {  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  end)  {  if(_outputTail  >>  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    end)    {    if(_outputTail  >>  end)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
19	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  if(_outputTail!=  end)  {  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  end)  {  if(_outputTail!=  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    end)    {    if(_outputTail!=  end)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
20	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  if(_outputTail  ==  end)  {  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  end)  {  if(_outputTail  ==  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    end)    {    if(_outputTail  ==  end)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
21	[BUG]  [BUGGY]  _flushBuffer();  [CE]  class,  interface,  or  enum  expected  [FE]              JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  _flushBuffer();  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	_flushBuffer();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
22	[BUG]  [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [CE]  cannot  find  symbol  ch  [FE]                JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(ch  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	      	non-compiled	[CE]  cannot  find  symbol  ch	7	None	replace
23	[BUG]  [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  ch  [FE]                  JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(ch  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  cannot  find  symbol  ch	7	None	replace
24	[BUG]  [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [CE]  cannot  find  symbol  ch  [FE]                    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(ch  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	      	non-compiled	[CE]  cannot  find  symbol  ch	7	None	replace
25	[BUG]  [BUGGY]  if((  _outputTail  +  6)  >=  end)  {  if((  _outputTail  +  6)  >=  end)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  6)  >=  end)  {  if((  _outputTail  +  6)  >=  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    6)    >=    end)    {    if((  _outputTail  +  6)  >=  end)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
26	[BUG]  [BUGGY]  if((  _outputTail  +  6)  >=  end)  {  if((  _outputTail  +  6)  >>  end)  {  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  6)  >=  end)  {  if((  _outputTail  +  6)  >>  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    6)    >=    end)    {    if((  _outputTail  +  6)  >>  end)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
27	[BUG]  [BUGGY]  if((  _outputTail  +  6)  >=  end)  {  if((  _outputTail  +  6)!=  end)  {  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  6)  >=  end)  {  if((  _outputTail  +  6)!=  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    6)    >=    end)    {    if((  _outputTail  +  6)!=  end)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
28	[BUG]  [BUGGY]  if((  _outputTail  +  6)  >=  end)  {  if((  _outputTail  +  6)  ==  end)  {  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  6)  >=  end)  {  if((  _outputTail  +  6)  ==  end)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    6)    >=    end)    {    if((  _outputTail  +  6)  ==  end)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
29	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(_outputTail  >=  _outputEnd)  {	  if(_outputTail    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	2	1	replace
30	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  _outputEnd)  {	  if(_outputTail    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	2	1	replace
31	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  inputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(_outputTail  >=  inputEnd)  {	  if(_outputTail    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	2	1	replace
32	[BUG]  [BUGGY]  if(_outputTail  >=  inputEnd)  {  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  inputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  inputEnd)  {	  if(_outputTail    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	2	1	replace
33	[BUG]  [BUGGY]  if(_outputTail  >=  outputEnd)  {  [CE]  cannot  find  symbol  outputEnd  [FE]        JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  outputEnd)  {	  if(_outputTail    >=    end)    {    	non-compiled	[CE]  cannot  find  symbol  outputEnd	2	None	replace
34	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(++offset  >=  inputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(++offset  >=  inputEnd)  {	  if(_outputTail    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	2	2	replace
35	[BUG]  [BUGGY]  if(++offset  >=  inputEnd)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(++offset  >=  inputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(++offset  >=  inputEnd)  {	  if(_outputTail    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	2	2	replace
36	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  len;  }  [CE]  class,  interface,  or  enum  expected  [FE]              JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  len;  }  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  len;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
37	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  }  [CE]  class,  interface,  or  enum  expected  [FE]                JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  }  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
38	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
39	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  if(_outputTail  >=  inputEnd)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  end)  {  if(_outputTail  >=  inputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    end)    {    if(_outputTail  >=  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
40	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  if(_outputTail  >=  outputEnd)  {  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(_outputTail  >=  end)  {  if(_outputTail  >=  outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    end)    {    if(_outputTail  >=  outputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
41	[BUG]  [BUGGY]  if(ch  <  =  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]              JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if(ch  <  =  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(ch  <  =  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [CE]  class,  interface,  or  enum  expected  [FE]                JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	_verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
43	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  3)  <  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if((  _outputTail  +  3)  <  _outputEnd)  {	  if((    _outputTail    +    3)    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	4	1	replace
44	[BUG]  [BUGGY]  if((  _outputTail  +  3)  <  _outputEnd)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }    [BUGGY]  if((  _outputTail  +  3)  <  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  3)  <  _outputEnd)  {	  if((    _outputTail    +    3)    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	4	1	replace
