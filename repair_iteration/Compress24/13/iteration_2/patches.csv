bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Trailer  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  Trailer  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	Trailer  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
2	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]  +  1]);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]  +  1]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]  +  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
3	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length  -  1,  buffer[start  -  1]);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length  -  1,  buffer[start  -  1]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length  -  1,  buffer[start  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
4	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1],  trailer);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1],  trailer);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1],  trailer);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
5	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[offset  -  1]);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[offset  -  1]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[offset  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
6	[BUG]  [BUGGY]  while(start  <  =  end  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
7	[BUG]  [BUGGY]  while(start  <  end  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
8	[BUG]  [BUGGY]  while(start  <  0  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  0  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  0  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
9	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  trailer);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  trailer);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  trailer);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
10	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start  +  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start  +  1);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
11	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-1);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-1);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
12	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  trailer.length);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  trailer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  trailer.length);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
13	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer,  start);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer,  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  trailer,  start);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
14	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start  -  start);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start  -  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start  -  start);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
15	[BUG]  [BUGGY]  while(start  <  =  length  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  length  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  length  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
16	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  -  1  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
17	[BUG]  [BUGGY]  while(end  <  =  start  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  =  start  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  =  start  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
18	[BUG]  [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
19	[BUG]  [BUGGY]  bucket  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  bucket  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	bucket  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
20	[BUG]  [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
21	[BUG]  [BUGGY]  ||(start  <  length  &&  trailer!=  null))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  <  length  &&  trailer!=  null))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  <  length  &&  trailer!=  null))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
22	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	throw  new  IllegalArgumentException( " ");	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
23	[BUG]  [BUGGY]  ||(start  <  length  &&  trailer  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  <  length  &&  trailer  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  <  length  &&  trailer  ==  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
24	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	Thread.currentThread().interrupt();	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
25	[BUG]  [BUGGY]  while(end  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(end    <    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
26	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  ''  ||  trailer!=  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  ''  ||  trailer!=  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  ''  ||  trailer!=  'n'))  {  trailer  =  buffer[end  -  1];	  while(end    <    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
27	[BUG]  [BUGGY]  while(end  <  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(end    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  static  final  byte  trailer  =  this.currentByte[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  static  final  byte  trailer  =  this.currentByte[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	static  final  byte  trailer  =  this.currentByte[end  -  1];	  final    byte    trailer    =    this.currentByte[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  byte  trailer  =  this.currentByte[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  this.currentByte[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  this.currentByte[end  -  1];	  final    byte    trailer    =    this.currentByte[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  static  final  byte  trailer  =  this.currentByte[start  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  static  final  byte  trailer  =  this.currentByte[start  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	static  final  byte  trailer  =  this.currentByte[start  -  1];	  final    byte    trailer    =    this.currentByte[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[start  -  1]  +  length;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[start  -  1]  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[start  -  1]  +  length;	  final    byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  offset;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  offset;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1]  +  offset;	  final    byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  length  +  1;  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  length  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1]  +  length  +  1;	  final    byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  length  -  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1]  +  length  -  1;	  final    byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
35	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  end;  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1]  +  end;	  final    byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
36	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  +  1]  +  offset;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  +  1]  +  offset;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  +  1]  +  offset;	  byte    trailer    =    buffer[start    -    1]    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
37	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  *  offset;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  *  offset;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  *  offset;	  byte    trailer    =    buffer[start    -    1]    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
38	[BUG]  [BUGGY]  byte  trailer  =  buffer[length  -  1]  +  offset;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[length  -  1]  +  offset;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[length  -  1]  +  offset;	  byte    trailer    =    buffer[start    -    1]    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
39	[BUG]  [BUGGY]  byte  trailer  =  buffer[offset  -  1]  +  offset;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[offset  -  1]  +  offset;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[offset  -  1]  +  offset;	  byte    trailer    =    buffer[start    -    1]    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
40	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  clip;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  clip;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  clip;	  byte    trailer    =    buffer[end    -    1]    +    clip;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
41	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  clip.length;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  clip.length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  clip.length;	  byte    trailer    =    buffer[end    -    1]    +    clip;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
42	[BUG]  [BUGGY]  while(trailer  <  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
43	[BUG]  [BUGGY]  while(end  <  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
44	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  ''  &&  trailer!=  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  ''  &&  trailer!=  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  ''  &&  trailer!=  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
45	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
46	[BUG]  [BUGGY]  while(offset  <  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(offset  <  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(offset  <  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
47	[BUG]  [BUGGY]  while(trailer  <  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
48	[BUG]  [BUGGY]  while(start  <  =  0  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  0  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  0  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
49	[BUG]  [BUGGY]  while(start  <  length  ||(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  ||(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  ||(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
50	[BUG]  [BUGGY]  while(start  <  0  ||(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  0  ||(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  0  ||(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
51	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  trailer);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  trailer);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  trailer);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
52	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer,  end);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer,  end);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  trailer,  end);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
53	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
54	[BUG]  [BUGGY]  byte  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
55	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  0);  [CE]  illegal  start  of  expression  [FE]                                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  0);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  0);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
56	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  trailer.length);  [CE]  illegal  start  of  expression  [FE]                                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  trailer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  trailer.length);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
57	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  length  +  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  length  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  length  +  1;	  byte    trailer    =    buffer[start    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  length  -  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  length  -  1;	  byte    trailer    =    buffer[start    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
60	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
61	[BUG]  [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
62	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer!=  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer!=  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer!=  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
63	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[offset  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[offset  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[offset  -  1];	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[offset  +  length  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[offset  +  length  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[offset  +  length  -  1];	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[start  +  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[start  +  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[start  +  1];	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer!=  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer!=  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer!=  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
67	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  ''  ||  trailer  >=  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  ''  ||  trailer  >=  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  ''  ||  trailer  >=  'n'))  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
68	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-1,  length);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-1,  length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-1,  length);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
69	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
70	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  start);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  start);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
71	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  0);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  0);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  0);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
72	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer.length);  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer.length);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
73	[BUG]  [BUGGY]  byte  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  length);  [CE]  illegal  start  of  expression  [FE]                                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  length);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
74	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  lineNumber);  [CE]  illegal  start  of  expression  [FE]                                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  lineNumber);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  lineNumber);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
75	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  ''  ||  trailer!=  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  ''  ||  trailer!=  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  ''  ||  trailer!=  ')')  {  trailer  =  buffer[end  -  1];	  while(end    <    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
76	[BUG]  [BUGGY]  while(offset  <  length  &&  trailer  ==  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(offset  <  length  &&  trailer  ==  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(offset  <  length  &&  trailer  ==  0)  {  end--;	  while(start    <    length    &&    trailer    ==    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
77	[BUG]  [BUGGY]  while(start  <  end  &&  trailer  ==  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&  trailer  ==  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&  trailer  ==  0)  {  end--;	  while(start    <    length    &&    trailer    ==    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
78	[BUG]  [BUGGY]  while(start  <  length  ||  trailer  ==  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  ||  trailer  ==  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  ||  trailer  ==  0)  {  end--;	  while(start    <    length    &&    trailer    ==    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
79	[BUG]  [BUGGY]  while(end  <  length  &&  trailer  ==  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  length  &&  trailer  ==  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  length  &&  trailer  ==  0)  {  end--;	  while(start    <    length    &&    trailer    ==    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
80	[BUG]  [BUGGY]  while(length  <  start  &&  trailer  ==  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(length  <  start  &&  trailer  ==  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(length  <  start  &&  trailer  ==  0)  {  end--;	  while(start    <    length    &&    trailer    ==    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
81	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
82	[BUG]  [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
83	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
84	[BUG]  [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
85	[BUG]  [BUGGY]  while(start  <  end  -  1  ||(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  ||(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  ||(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
86	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer!=  'e'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer!=  'e'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer!=  'e'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
87	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer.length);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  trailer.length);	  int    end    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
88	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  trailer);	  int    end    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
89	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length  -  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length  -  1);	  int    end    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
90	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length  -  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length  -  start);	  int    end    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
91	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length  +  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length  +  1);	  int    end    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
92	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length);	  int    end    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
93	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  start-1;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  start-1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  start-1;	  byte    trailer    =    buffer[end    -    1]    +    start-1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
94	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  end-1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  end-1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  end-1;	  byte    trailer    =    buffer[end    -    1]    +    start-1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
95	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  end-1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  end-1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  end-1;	  byte    trailer    =    buffer[end    -    1]    +    start-1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
96	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer.length  -  start);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer.length  -  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  trailer.length  -  start);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer.length    -    start);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
97	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start  +  1);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start  +  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start  +  1);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer.length    -    start);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
98	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start,  trailer.length);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start,  trailer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start,  trailer.length);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer.length    -    start);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
99	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start-1);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start-1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start-1);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer.length    -    start);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
100	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start  +  1,  trailer.length);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start  +  1,  trailer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start  +  1,  trailer.length);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer.length    -    start);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
101	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
102	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
103	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
104	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  offset  +  length;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  offset  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  offset  +  length;	  byte    trailer    =    buffer[end    -    1]    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
105	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  *  offset;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  *  offset;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  *  offset;	  byte    trailer    =    buffer[end    -    1]    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
106	[BUG]  [BUGGY]  while(trailer  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
107	[BUG]  [BUGGY]  while(offset  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(offset  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(offset  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
108	[BUG]  [BUGGY]  while(start  <  length  ||(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  ||(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  ||(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
109	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  ''  &&  trailer!=  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  ''  &&  trailer!=  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  ''  &&  trailer!=  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
110	[BUG]  [BUGGY]  while(end  <  end  -  1  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  -  1  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer!=    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
111	[BUG]  [BUGGY]  while(start  <  =  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
112	[BUG]  [BUGGY]  while(end  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
113	[BUG]  [BUGGY]  while(start  <  0  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  0  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  0  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
114	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  end  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  end  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  0  ||  end  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
115	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
116	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
117	[BUG]  [BUGGY]  static  final  byte  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  static  final  byte  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	static  final  byte  trailer  =  buffer[end  -  1];	  static    final    byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
118	[BUG]  [BUGGY]  static  final  byte  trailer  =  buffer[length  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  static  final  byte  trailer  =  buffer[length  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	static  final  byte  trailer  =  buffer[length  -  1];	  static    final    byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
119	[BUG]  [BUGGY]  static  final  byte  trailer  =  buffer[start  -  1]  +  length;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  static  final  byte  trailer  =  buffer[start  -  1]  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	static  final  byte  trailer  =  buffer[start  -  1]  +  length;	  static    final    byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
120	[BUG]  [BUGGY]  static  final  byte  trailer  =  buffer[offset  -  1];  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  static  final  byte  trailer  =  buffer[offset  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	static  final  byte  trailer  =  buffer[offset  -  1];	  static    final    byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
121	[BUG]  [BUGGY]  static  final  byte  trailer  =  buffer[start  +  1];  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  static  final  byte  trailer  =  buffer[start  +  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	static  final  byte  trailer  =  buffer[start  +  1];	  static    final    byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
122	[BUG]  [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '.'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
123	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '.'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
124	[BUG]  [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '.'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
125	[BUG]  [BUGGY]  while(start  <  end  -  1  ||(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  ||(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  ||(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '.'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
126	[BUG]  [BUGGY]  result  |=  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  result  |=  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	result  |=  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
127	[BUG]  [BUGGY]  ||(length  >  0  &&  trailer  ==  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(length  >  0  &&  trailer  ==  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(length  >  0  &&  trailer  ==  '-'))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
128	[BUG]  [BUGGY]  ||(length  >  0  &&  trailer  ==  '.'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(length  >  0  &&  trailer  ==  '.'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(length  >  0  &&  trailer  ==  '.'))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
129	[BUG]  [BUGGY]  ||(length  >  0  &&  trailer!=  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(length  >  0  &&  trailer!=  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(length  >  0  &&  trailer!=  '-'))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
130	[BUG]  [BUGGY]  ||(length  >  0  &&  trailer!=  '.'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(length  >  0  &&  trailer!=  '.'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(length  >  0  &&  trailer!=  '.'))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
131	[BUG]  [BUGGY]  ||(length  >  0  &&  trailer  ==  'n'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(length  >  0  &&  trailer  ==  'n'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(length  >  0  &&  trailer  ==  'n'))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
132	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '/'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
133	[BUG]  [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '/'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
134	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '/'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
135	[BUG]  [BUGGY]  while(start  <  end  -  1  ||(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  ||(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  ||(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '/'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
136	[BUG]  [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '/'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
137	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer!=  '/'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer!=  '/'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer!=  '/'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '/'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
138	[BUG]  [BUGGY]  Trailer  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  Trailer  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	Trailer  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
139	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length  -  1,  buffer[end  -  1]);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length  -  1,  buffer[end  -  1]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length  -  1,  buffer[end  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
140	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]  +  1]);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]  +  1]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]  +  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
141	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  start,  length,  buffer[end  -  1]);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  start,  length,  buffer[end  -  1]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  start,  length,  buffer[end  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
142	[BUG]  [BUGGY]  while(start  <  =  start  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  start  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  start  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
143	[BUG]  [BUGGY]  while(offset  <  length  &&  trailer!=  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(offset  <  length  &&  trailer!=  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(offset  <  length  &&  trailer!=  0)  {  end--;	  while(start    <    length    &&    trailer!=    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
144	[BUG]  [BUGGY]  while(end  <  length  &&  trailer!=  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  length  &&  trailer!=  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  length  &&  trailer!=  0)  {  end--;	  while(start    <    length    &&    trailer!=    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
145	[BUG]  [BUGGY]  while(start  <  end  &&  trailer!=  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&  trailer!=  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&  trailer!=  0)  {  end--;	  while(start    <    length    &&    trailer!=    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
146	[BUG]  [BUGGY]  while(start  <  length  ||  trailer!=  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  ||  trailer!=  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  ||  trailer!=  0)  {  end--;	  while(start    <    length    &&    trailer!=    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
147	[BUG]  [BUGGY]  while(length  <  start  &&  trailer!=  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(length  <  start  &&  trailer!=  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(length  <  start  &&  trailer!=  0)  {  end--;	  while(start    <    length    &&    trailer!=    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
148	[BUG]  [BUGGY]  final  byte  trailer  =  trailer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  trailer[start  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  trailer[start  -  1];	  final    byte    trailer    =    this.currentByte[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
149	[BUG]  [BUGGY]  final  byte  trailer  =  this.currentByte[start  +  1];  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  this.currentByte[start  +  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  this.currentByte[start  +  1];	  final    byte    trailer    =    this.currentByte[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
150	[BUG]  [BUGGY]  final  byte  trailer  =  this.currentByte[start  -  1]  +  length;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  this.currentByte[start  -  1]  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  this.currentByte[start  -  1]  +  length;	  final    byte    trailer    =    this.currentByte[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
151	[BUG]  [BUGGY]  final  byte  trailer  =  this.currentByte[offset  -  1];  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  this.currentByte[offset  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  this.currentByte[offset  -  1];	  final    byte    trailer    =    this.currentByte[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
152	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  start.length;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  start.length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  start.length;	  byte    trailer    =    buffer[end    -    1]    +    start.length;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
153	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  end.length;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  end.length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  end.length;	  byte    trailer    =    buffer[end    -    1]    +    start.length;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
154	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start.length  -  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start.length  -  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start.length  -  1;	  byte    trailer    =    buffer[end    -    1]    +    start.length;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
155	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start.length  +  length;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start.length  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start.length  +  length;	  byte    trailer    =    buffer[end    -    1]    +    start.length;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
156	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start  +  1);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start  +  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start  +  1);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
157	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  end);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  end);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  end);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
158	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-1);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-1);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
159	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
160	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-offset);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-offset);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-offset);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
161	[BUG]  [BUGGY]  int  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  trailer  =  buffer[start  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  trailer  =  buffer[start  -  1];	  int    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
162	[BUG]  [BUGGY]  int  trailer  =  buffer[offset  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  trailer  =  buffer[offset  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  trailer  =  buffer[offset  -  1];	  int    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
163	[BUG]  [BUGGY]  int  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  trailer  =  buffer[end  -  1];	  int    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
164	[BUG]  [BUGGY]  long  trailer  =  buffer[length  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  long  trailer  =  buffer[length  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	long  trailer  =  buffer[length  -  1];	  int    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
165	[BUG]  [BUGGY]  while(end  <  end  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
166	[BUG]  [BUGGY]  while(trailer  <  start  ||(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  start  ||(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  start  ||(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
167	[BUG]  [BUGGY]  byte  trailer  =  buffer[offset  +  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[offset  +  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[offset  +  1];	  byte    trailer    =    buffer[offset    -    1];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
168	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  length  +  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  length  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start  +  length  +  1;	  byte    trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
169	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  start  +  length;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  start  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  start  +  length;	  byte    trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
170	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  length  +  2;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  length  +  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start  +  length  +  2;	  byte    trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
171	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  offset;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  offset;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start  +  offset;	  byte    trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
172	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  length  -  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start  +  length  -  1;	  byte    trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
173	[BUG]  [BUGGY]  while(start  <  =  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
174	[BUG]  [BUGGY]  while(trailer  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
175	[BUG]  [BUGGY]  while(end  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
176	[BUG]  [BUGGY]  while(end  <  =  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  =  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  =  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
177	[BUG]  [BUGGY]  byte  trailer  =  this.currentByte[start  -  1]  +  length;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  this.currentByte[start  -  1]  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  this.currentByte[start  -  1]  +  length;	  byte    trailer    =    this.currentByte[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
178	[BUG]  [BUGGY]  byte  trailer  =  this.currentByte[offset  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  this.currentByte[offset  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  this.currentByte[offset  -  1];	  byte    trailer    =    this.currentByte[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
179	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  >  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  >  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  length  >  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    length    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
180	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    length    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
181	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    length    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
182	[BUG]  [BUGGY]  while(offset  <  end  -  1  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(offset  <  end  -  1  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(offset  <  end  -  1  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    length    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
183	[BUG]  [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  length  >  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  length  >  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&(trailer  ==  0  ||  length  >  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    length    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
184	[BUG]  [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    length    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
185	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  >=  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  >=  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  length  >=  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    length    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
186	[BUG]  [BUGGY]  while(trailer  <  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
187	[BUG]  [BUGGY]  while(start  <  =  0  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  0  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  0  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
188	[BUG]  [BUGGY]  while(start  <  0  ||(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  0  ||(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  0  ||(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
189	[BUG]  [BUGGY]  while(start  <  end  -  1  &&  trailer!=  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&  trailer!=  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&  trailer!=  '.')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    ==    '.')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
190	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    ==    '.')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
191	[BUG]  [BUGGY]  while(end  <  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    ==    '.')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
192	[BUG]  [BUGGY]  while(start  <  end  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    ==    '.')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
193	[BUG]  [BUGGY]  while(trailer  <  end  -  1  &&  end  ==  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  end  -  1  &&  end  ==  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  end  -  1  &&  end  ==  '.')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    ==    '.')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
194	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  buffer[start  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  buffer[start  -  1];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
195	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  Trailer  trailer  =  buffer[start  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	Trailer  trailer  =  buffer[start  -  1];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
196	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  length;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  buffer[end  -  1]  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  buffer[end  -  1]  +  length;	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
197	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  start;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  buffer[end  -  1]  +  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  buffer[end  -  1]  +  start;	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
198	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  Trailer  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	Trailer  trailer  =  buffer[end  -  1];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
199	[BUG]  [BUGGY]  trailer  =  new  byte[length  -  1];  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  new  byte[length  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  new  byte[length  -  1];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
200	[BUG]  [BUGGY]  while(trailer  <  start  ||(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  start  ||(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  start  ||(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
201	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  ''  ||  trailer!=  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&(trailer  ==  ''  ||  trailer!=  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  ''  ||  trailer!=  'n'))  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
202	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer.length-1,'');  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer.length-1,'');  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer.length-1,'');	  trailer    =    exceptionMessage(buffer,    offset,    length,    end-1,'');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
203	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  start-1,  '');  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  start-1,  '');  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  start-1,  '');	  trailer    =    exceptionMessage(buffer,    offset,    length,    end-1,'');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
204	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  0,  '');  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  0,  '');  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  0,  '');	  trailer    =    exceptionMessage(buffer,    offset,    length,    end-1,'');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
205	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start  +  1;	  byte    trailer    =    buffer[end    -    1]    +    length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
206	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  offset  +  1;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  offset  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  offset  +  1;	  byte    trailer    =    buffer[end    -    1]    +    length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
207	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  *  2  +  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  *  2  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  length  *  2  +  1;	  byte    trailer    =    buffer[end    -    1]    +    length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
208	[BUG]  [BUGGY]  while(start  <  =  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
209	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
210	[BUG]  [BUGGY]  while(end  <  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
211	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
212	[BUG]  [BUGGY]  while(start  <  =  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
213	[BUG]  [BUGGY]  while(trailer  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
214	[BUG]  [BUGGY]  while(end  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
215	[BUG]  [BUGGY]  while(end  <  =  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  =  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  =  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
216	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  1);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  1);	  int    end    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
217	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length  -  1,  0);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length  -  1,  0);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length  -  1,  0);	  int    end    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
218	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  2);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  2);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  2);	  int    end    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
219	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  0,  trailer.length);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  0,  trailer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  0,  trailer.length);	  int    end    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
220	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  0,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  0,  buffer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  0,  buffer.length);	  int    end    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
221	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  3);  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  3);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  3);	  int    end    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
222	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end  +  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end  +  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end  +  1);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    end);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
223	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
224	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer.length);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer.length);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
225	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-2);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-2);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-2);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
226	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  currentByte);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  currentByte);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  currentByte);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
227	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
228	[BUG]  [BUGGY]  byte  trailer  =  buffer[length  -  1]  +  start;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[length  -  1]  +  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[length  -  1]  +  start;	  byte    trailer    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
229	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  *  start;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  *  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  *  start;	  byte    trailer    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
230	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer!=  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer!=  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer!=  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
231	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  currentByte);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  currentByte);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  currentByte);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
232	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  start);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  start);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
233	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer.length);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
234	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length  +  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length  +  1);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
235	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  this.currentByte);  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  this.currentByte);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  this.currentByte);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
236	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  end);  [CE]  illegal  start  of  expression  [FE]                                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  end);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  end);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
237	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length-1);  [CE]  illegal  start  of  expression  [FE]                                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length-1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length-1);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
238	[BUG]  [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
239	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
240	[BUG]  [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
241	[BUG]  [BUGGY]  while(start  <  =  end  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
242	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  ''  ||  trailer!=  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&(trailer  ==  ''  ||  trailer!=  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  ''  ||  trailer!=  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
243	[BUG]  [BUGGY]  while(start  <  end  -  1  &&  trailer!=  'n')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&  trailer!=  'n')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&  trailer!=  'n')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    ==    'n')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
244	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  end  -  1  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    ==    'n')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
245	[BUG]  [BUGGY]  while(end  <  end  -  1  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  -  1  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    ==    'n')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
246	[BUG]  [BUGGY]  while(start  <  end  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    ==    'n')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
247	[BUG]  [BUGGY]  int  end  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  System.currentTimeMillis();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  System.currentTimeMillis();	  long    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
248	[BUG]  [BUGGY]  long  end  =  System.currentTimeMillis()  -  start;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  long  end  =  System.currentTimeMillis()  -  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	long  end  =  System.currentTimeMillis()  -  start;	  long    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
249	[BUG]  [BUGGY]  long  end  =  System.currentTimeMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  long  end  =  System.currentTimeMillis()  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	long  end  =  System.currentTimeMillis()  +  1;	  long    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
250	[BUG]  [BUGGY]  long  end  =  System.currentTimeMillis()  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  long  end  =  System.currentTimeMillis()  /  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	long  end  =  System.currentTimeMillis()  /  BYTE_MASK;	  long    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
251	[BUG]  [BUGGY]  long  end  =  System.currentTimeMillis()  +  start;  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  long  end  =  System.currentTimeMillis()  +  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	long  end  =  System.currentTimeMillis()  +  start;	  long    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
252	[BUG]  [BUGGY]  short  end  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  short  end  =  System.currentTimeMillis();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	short  end  =  System.currentTimeMillis();	  long    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
253	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[start  -  1]  +  end;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[start  -  1]  +  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[start  -  1]  +  end;	  final    byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
254	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  start  +  length;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  start  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1]  +  start  +  length;	  final    byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
255	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[start  -  1]  +  start;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[start  -  1]  +  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[start  -  1]  +  start;	  final    byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
256	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  start.length;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  start.length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1]  +  start.length;	  final    byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
257	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  clip;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  clip;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1]  +  clip;	  final    byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
258	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  +  1]  +  end;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  +  1]  +  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  +  1]  +  end;	  byte    trailer    =    buffer[end    -    1]    +    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
259	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  end.length;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  end.length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  end.length;	  byte    trailer    =    buffer[end    -    1]    +    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
260	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  1);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  1);	  trailer    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
261	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length  -  1,  0);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length  -  1,  0);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length  -  1,  0);	  trailer    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
262	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  2);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  2);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  2);	  trailer    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
263	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  0,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  0,  buffer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  0,  buffer.length);	  trailer    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
264	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  3);  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  3);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  3);	  trailer    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
265	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  0,  0);  [CE]  illegal  start  of  expression  [FE]                                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  0,  0);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  0,  0);	  trailer    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
266	[BUG]  [BUGGY]  while(start  <  =  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
267	[BUG]  [BUGGY]  while(trailer  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
268	[BUG]  [BUGGY]  while(end  <  =  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  =  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  =  start  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
269	[BUG]  [BUGGY]  while(end  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
270	[BUG]  [BUGGY]  byte  trailer  =  getCurrentToken().length;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  getCurrentToken().length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  getCurrentToken().length;	  byte    trailer    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
271	[BUG]  [BUGGY]  byte  trailer  =  getCurrentToken()  +  1;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  getCurrentToken()  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  getCurrentToken()  +  1;	  byte    trailer    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
272	[BUG]  [BUGGY]  byte  trailer  =  getCurrentOffset();  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  getCurrentOffset();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  getCurrentOffset();	  byte    trailer    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
273	[BUG]  [BUGGY]  byte  trailer  =  getCurrentCharacter();  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  getCurrentCharacter();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  getCurrentCharacter();	  byte    trailer    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
274	[BUG]  [BUGGY]  long  trailer  =  getCurrentToken();  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  long  trailer  =  getCurrentToken();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	long  trailer  =  getCurrentToken();	  byte    trailer    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
275	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  -  2;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  -  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  length  -  2;	  byte    trailer    =    buffer[end    -    1]    +    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
276	[BUG]  [BUGGY]  byte  trailer  =  this.currentByte[length  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  this.currentByte[length  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  this.currentByte[length  -  1];	  byte    trailer    =    this.currentByte[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
277	[BUG]  [BUGGY]  final  byte  trailer  =  this.currentByte[end  -  1]  +  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  this.currentByte[end  -  1]  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  this.currentByte[end  -  1]  +  1;	  final    byte    trailer    =    this.currentByte[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
278	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length  -  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length  -  start);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
279	[BUG]  [BUGGY]  while(start  <  =  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
280	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  '.'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  '.'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  '.'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '.'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
281	[BUG]  [BUGGY]  while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '.'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
282	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
283	[BUG]  [BUGGY]  byte  trailer  =  getCurrentStart();  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  getCurrentStart();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  getCurrentStart();	  byte    trailer    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
284	[BUG]  [BUGGY]  byte  trailer  =  getCurrentStartToken();  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  getCurrentStartToken();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  getCurrentStartToken();	  byte    trailer    =    getCurrentToken();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
285	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  0,  0);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  0,  0);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  0,  0);	  int    end    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
286	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  offset-1;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  offset-1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  offset-1;	  byte    trailer    =    buffer[end    -    1]    +    start-1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
287	[BUG]  [BUGGY]  byte  trailer  =  buffer[offset  -  1]  +  length;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[offset  -  1]  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[offset  -  1]  +  length;	  byte    trailer    =    buffer[start    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
288	[BUG]  [BUGGY]  static  final  byte  trailer  =  buffer[start  -  start];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  static  final  byte  trailer  =  buffer[start  -  start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	static  final  byte  trailer  =  buffer[start  -  start];	  static    final    byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
289	[BUG]  [BUGGY]  while(start  >=  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  >=  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  >=  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
290	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  'a'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  'a'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  'a'))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
291	[BUG]  [BUGGY]  while(trailer  <  =  0  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  =  0  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  =  0  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
292	[BUG]  [BUGGY]  while(trailer  >=  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  >=  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  >=  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
293	[BUG]  [BUGGY]  while(trailer  >=  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  >=  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  >=  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
294	[BUG]  [BUGGY]  final  byte  trailer  =  this.currentByte[length  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  this.currentByte[length  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  this.currentByte[length  -  1];	  final    byte    trailer    =    this.currentByte[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
295	[BUG]  [BUGGY]  final  byte  trailer  =  this.currentByte[start  -  1]  +  1;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  this.currentByte[start  -  1]  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  this.currentByte[start  -  1]  +  1;	  final    byte    trailer    =    this.currentByte[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
296	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  ==  'e')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&  trailer  ==  'e')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&  trailer  ==  'e')  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
297	[BUG]  [BUGGY]  while(end  <  end  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  end  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(end    <    end    -    1    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
298	[BUG]  [BUGGY]  while(end  <  length  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  length  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  length  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(end    <    end    -    1    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
299	[BUG]  [BUGGY]  while(end  <  start  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(end  <  start  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  start  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(end    <    end    -    1    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
300	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  offset  +  length;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  offset  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  offset  +  length;	  byte    trailer    =    buffer[start    -    1]    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
301	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  start);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  start);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
302	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  this.currentByte);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  this.currentByte);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  this.currentByte);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
303	[BUG]  [BUGGY]  while(trailer  <  =  0  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  =  0  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  =  0  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
304	[BUG]  [BUGGY]  while(trailer  >=  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  >=  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  >=  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
305	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
306	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
307	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  safeThan  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	safeThan  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
308	[BUG]  [BUGGY]  safeThan  <  =  0  ||  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  safeThan  <  =  0  ||  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	safeThan  <  =  0  ||  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
309	[BUG]  [BUGGY]  ||(start  >  0  &&  trailer  ==  '.'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  >  0  &&  trailer  ==  '.'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  >  0  &&  trailer  ==  '.'))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
310	[BUG]  [BUGGY]  ||(start  >  0  &&  end  <  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  >  0  &&  end  <  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  >  0  &&  end  <  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
311	[BUG]  [BUGGY]  ||(start  >  0  &&  trailer  ==  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  >  0  &&  trailer  ==  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  >  0  &&  trailer  ==  '-'))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
312	[BUG]  [BUGGY]  ||(start  >  0  &&  trailer!=  '.'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  >  0  &&  trailer!=  '.'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  >  0  &&  trailer!=  '.'))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
313	[BUG]  [BUGGY]  while(start  <  start  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  start  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  start  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    ==    '.')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
314	[BUG]  [BUGGY]  while(start  <  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[start  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[start  -  1];	  while(start    <    end    -    1    &&    trailer    ==    '.')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
315	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  start,  buffer[end  -  1]);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  start,  buffer[end  -  1]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  start,  buffer[end  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
316	[BUG]  [BUGGY]  while(start  <  length  &&  end  >=  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&  end  >=  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&  end  >=  0)  {  end--;	  while(start    <    length    &&    trailer!=    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
317	[BUG]  [BUGGY]  while(start  >=  length  &&  trailer!=  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  >=  length  &&  trailer!=  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  >=  length  &&  trailer!=  0)  {  end--;	  while(start    <    length    &&    trailer!=    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
318	[BUG]  [BUGGY]  while(start  <  =  length  &&  trailer!=  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  length  &&  trailer!=  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  length  &&  trailer!=  0)  {  end--;	  while(start    <    length    &&    trailer!=    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
319	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  0,  start);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  0,  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  0,  start);	  trailer    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
320	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length  -  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length  -  1);	  trailer    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
321	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
322	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
323	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  end  >  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  end  >  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  0  ||  end  >  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
324	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-2,  length);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-2,  length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-2,  length);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
325	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  start);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  start);	  int    end    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
326	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  +  offset;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  +  offset;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  length  +  offset;	  byte    trailer    =    buffer[end    -    1]    +    start    +    length;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
327	[BUG]  [BUGGY]  while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
328	[BUG]  [BUGGY]  while(start  <  0  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  0  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  0  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
329	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[length  -  1]  +  start;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[length  -  1]  +  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[length  -  1]  +  start;	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
330	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[load  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[load  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[load  -  1];	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
331	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  'e'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  'e'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  'e'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
332	[BUG]  [BUGGY]  while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
333	[BUG]  [BUGGY]  if(length  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  if(length  <  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  <  start)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
334	[BUG]  [BUGGY]  safeThan  <  =(length  <  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  safeThan  <  =(length  <  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	safeThan  <  =(length  <  1))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
335	[BUG]  [BUGGY]  if(length  <  =  start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  if(length  <  =  start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  <  =  start)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
336	[BUG]  [BUGGY]  ||(start  <  length)&&  trailer!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  <  length)&&  trailer!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  <  length)&&  trailer!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
337	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  start-1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  start-1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1]  +  start-1;	  final    byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
338	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  *  end;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  *  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  *  end;	  byte    trailer    =    buffer[end    -    1]    +    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
339	[BUG]  [BUGGY]  byte  trailer  =  buffer[length  -  1]  +  end;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[length  -  1]  +  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[length  -  1]  +  end;	  byte    trailer    =    buffer[end    -    1]    +    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
340	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start.charAt(start);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start.charAt(start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start.charAt(start);	  byte    trailer    =    buffer[end    -    1]    +    start.length;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
341	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start.getByte();  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start.getByte();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start.getByte();	  byte    trailer    =    buffer[end    -    1]    +    start.length;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
342	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end  -  start);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end  -  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end  -  start);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
343	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end  +  1);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end  +  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end  +  1);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
344	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length  -  1,  buffer,  end);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length  -  1,  buffer,  end);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length  -  1,  buffer,  end);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
345	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  '/'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  '/'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  '/'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '/'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
346	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '/'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
347	[BUG]  [BUGGY]  while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    '/'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
348	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  ','))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  ','))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  ','))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
349	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  '-'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  '-'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  '-'))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
350	[BUG]  [BUGGY]  while(start  <  length  &&  end  >  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&  end  >  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&  end  >  0)  {  end--;	  while(start    <    length    &&    trailer    ==    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
351	[BUG]  [BUGGY]  while(start  <  =  length  &&  trailer  ==  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  length  &&  trailer  ==  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  length  &&  trailer  ==  0)  {  end--;	  while(start    <    length    &&    trailer    ==    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
352	[BUG]  [BUGGY]  while(start  <  length  &&  end  ==  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&  end  ==  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&  end  ==  0)  {  end--;	  while(start    <    length    &&    trailer    ==    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
353	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  ''  ||  trailer  ==  ','))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&(trailer  ==  ''  ||  trailer  ==  ','))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  ''  ||  trailer  ==  ','))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
354	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  '');  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  '');  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  '');	  trailer    =    exceptionMessage(buffer,    offset,    length,    end-1,'');    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
355	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end  -  start);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end  -  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end  -  start);	  byte[]    trailer    =    exceptionMessage(buffer,    offset,    length,    buffer,    end);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
356	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[start  -  1]  +  offset;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[start  -  1]  +  offset;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[start  -  1]  +  offset;	  final    byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
357	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end,  buffer[start  -  1]);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end,  buffer[start  -  1]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  end,  buffer[start  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
358	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start)+  1;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start)+  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start)+  1;	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer.length    -    start);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
359	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  *  clip;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  *  clip;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  *  clip;	  byte    trailer    =    buffer[end    -    1]    +    clip;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
360	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  *  length;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  *  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1]  *  length;	  final    byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
361	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-offset);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-offset);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start-offset);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
362	[BUG]  [BUGGY]  while(start  <  =  0  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  0  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  0  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
363	[BUG]  [BUGGY]  while(start  <  =  length  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  length  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  length  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    length    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
364	[BUG]  [BUGGY]  while(start  <  start  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  start  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  start  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    length    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
365	[BUG]  [BUGGY]  while(start  <  end  &&  trailer  ==  'e')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&  trailer  ==  'e')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&  trailer  ==  'e')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
366	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'E'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'E'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'E'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    'e'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
367	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  &  end;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  &  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  &  end;	  byte    trailer    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
368	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  *  end;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  *  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  *  end;	  byte    trailer    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
369	[BUG]  [BUGGY]  ||(start  <  length  &&  trailer  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  <  length  &&  trailer  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  <  length  &&  trailer  <  =  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
370	[BUG]  [BUGGY]  ||(start  <  length  &&  trailer  <  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  <  length  &&  trailer  <  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  <  length  &&  trailer  <  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(start    <    length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
371	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  end);	  trailer    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
372	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  start);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  start);	  trailer    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
373	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer.length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer.length);	  trailer    =    exceptionMessage(buffer,    offset,    length,    0);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
374	[BUG]  [BUGGY]  while(start  <  =  length  -  1  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  length  -  1  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  length  -  1  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
375	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end[start  -  1]);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end[start  -  1]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  end[start  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
376	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1])+  1;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1])+  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1])+  1;	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
377	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ','))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ','))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ','))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
378	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer,  end-1,  length);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer,  end-1,  length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  trailer,  end-1,  length);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
379	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  length  -  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  length  -  1);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
380	[BUG]  [BUGGY]  Byte  trailer  =  buffer[start  -  1]  +  end;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  Byte  trailer  =  buffer[start  -  1]  +  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	Byte  trailer  =  buffer[start  -  1]  +  end;	  byte    trailer    =    buffer[end    -    1]    +    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
381	[BUG]  [BUGGY]  final  int  trailer  =  buffer[length  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  int  trailer  =  buffer[length  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  int  trailer  =  buffer[length  -  1];	  final    byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
382	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  '-'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  '-'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  '-'))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
383	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  'A'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  'A'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  'A'))  {  trailer  =  buffer[end  -  1];	  while(start    <    length    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
384	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  'A'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  'A'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  'A'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
385	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  /  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  /  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  length  /  1;	  byte    trailer    =    buffer[end    -    1]    +    length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
386	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer.length  -  start  +  1);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  trailer.length  -  start  +  1);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  trailer.length  -  start  +  1);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer.length    -    start);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
387	[BUG]  [BUGGY]  while(start  <  =  length  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  length  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  length  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    0    ||    trailer    ==    ''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
388	[BUG]  [BUGGY]  final  byte  trailer  =  trailer[this.currentByte  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  trailer[this.currentByte  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  trailer[this.currentByte  -  1];	  final    byte    trailer    =    this.currentByte[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
389	[BUG]  [BUGGY]  while(start  <  end  &&  length  ==  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  &&  length  ==  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&  length  ==  0)  {  end--;	  while(start    <    length    &&    trailer    ==    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
390	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  >=  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&  trailer  >=  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&  trailer  >=  0)  {  end--;	  while(start    <    length    &&    trailer    ==    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
391	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  &  length;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  &  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  &  length;	  byte    trailer    =    buffer[start    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
392	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  &  length;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  &  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1]  &  length;	  final    byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
393	[BUG]  [BUGGY]  while(trailer  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  '-'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(trailer  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  '-'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'  ||  trailer  ==  '-'))  {  trailer  =  buffer[end  -  1];	  while(trailer    <    end    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
394	[BUG]  [BUGGY]  int  end  =  length  exceptionMessage(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  length  exceptionMessage(buffer,  offset,  length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  length  exceptionMessage(buffer,  offset,  length);	  int    end    =    exceptionMessage(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
395	[BUG]  [BUGGY]  while(start  <  start  &&  trailer!=  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  start  &&  trailer!=  0)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  start  &&  trailer!=  0)  {  end--;	  while(start    <    length    &&    trailer!=    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
396	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!=  null)  {  end--;  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  length  &&  trailer!=  null)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&  trailer!=  null)  {  end--;	  while(start    <    length    &&    trailer!=    0)    {    end--;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
397	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  &  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  &  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  &  BYTE_MASK;	  byte    trailer    =    buffer[start    -    1]    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
398	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  start]  +  length;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  start]  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  start]  +  length;	  byte    trailer    =    buffer[start    -    1]    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
399	[BUG]  [BUGGY]  while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  start  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
400	[BUG]  [BUGGY]  while(start  <  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  }	  while(start    <    end    -    1    &&    trailer    ==    '.')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
401	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	Trailer  <  T>  trailer  =  buffer[end  -  1];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
402	[BUG]  [BUGGY]  while(start  <  =  length  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  length  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  length  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
403	[BUG]  [BUGGY]  while(start  <  start  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  start  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  start  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
404	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  &  start;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  byte  trailer  =  buffer[start  -  1]  &  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  &  start;	  byte    trailer    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
405	[BUG]  [BUGGY]  while(start  <  =  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    start    &&(trailer    ==    ''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
406	[BUG]  [BUGGY]  final  byte  trailer  =  trailer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  final  byte  trailer  =  trailer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  trailer[end  -  1];	  final    byte    trailer    =    this.currentByte[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
407	[BUG]  [BUGGY]  while(start  <  end  -  1  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  end  -  1  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  }	  while(end    <    end    -    1    &&    trailer    ==    '')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
408	[BUG]  [BUGGY]  while(start  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
409	[BUG]  [BUGGY]  ||(start  <  0  &&  trailer  <  =  '.')||(end  >  0  &&  trailer  <  =  'z'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  <  0  &&  trailer  <  =  '.')||(end  >  0  &&  trailer  <  =  'z'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  <  0  &&  trailer  <  =  '.')||(end  >  0  &&  trailer  <  =  'z'))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
410	[BUG]  [BUGGY]  ||(start  <  0  &&  trailer  <  =  '.')||(end  >  0  &&  trailer  <  =  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  <  0  &&  trailer  <  =  '.')||(end  >  0  &&  trailer  <  =  '-'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  <  0  &&  trailer  <  =  '.')||(end  >  0  &&  trailer  <  =  '-'))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
411	[BUG]  [BUGGY]  ||  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
412	[BUG]  [BUGGY]  ||(start  <  0  &&  trailer  <  =  '.')||(end  >  0  &&  trailer  <  =  '9'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  <  0  &&  trailer  <  =  '.')||(end  >  0  &&  trailer  <  =  '9'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  <  0  &&  trailer  <  =  '.')||(end  >  0  &&  trailer  <  =  '9'))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
413	[BUG]  [BUGGY]  ||(start  >  0  &&  trailer  ==''))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  >  0  &&  trailer  ==''))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  >  0  &&  trailer  ==''))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
414	[BUG]  [BUGGY]  ||(start  <  0  &&  trailer  <  =  '.')||(end  >  0  &&  trailer  <  =  'Z'))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  ||(start  <  0  &&  trailer  <  =  '.')||(end  >  0  &&  trailer  <  =  'Z'))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	||(start  <  0  &&  trailer  <  =  '.')||(end  >  0  &&  trailer  <  =  'Z'))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
415	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start  +  1,  trailer);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start  +  1,  trailer);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start  +  1,  trailer);	  int    end    =    exceptionMessage(buffer,    offset,    length,    buffer,    start);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
416	[BUG]  [BUGGY]  while(start  <  =  length  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      start++;  }  else  {  break;  }  }          [BUGGY]  while(start  <  =  length  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  length  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    =    end    -    1    &&(trailer    ==    ''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
