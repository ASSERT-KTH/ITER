bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  length;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  length;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  length;	  byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  offset;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  offset;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  offset;	  byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  +  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  +  1;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  length  +  1;	  byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length  -  1;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  length  -  1;	  byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  byte  trailer  =  buffer[offset  -  1];  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[offset  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[offset  -  1];	  byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
6	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  final  byte  trailer  =  buffer[start  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[start  -  1];	  final    byte    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  final  byte  trailer  =  this.currentByte[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  final  byte  trailer  =  this.currentByte[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  this.currentByte[end  -  1];	  final    byte    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[length  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  final  byte  trailer  =  buffer[length  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[length  -  1];	  final    byte    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  static  final  byte  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  static  final  byte  trailer  =  buffer[start  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	static  final  byte  trailer  =  buffer[start  -  1];	  final    byte    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  final  byte  trailer  =  this.currentByte[start  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  final  byte  trailer  =  this.currentByte[start  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  this.currentByte[start  -  1];	  final    byte    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  length;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  length;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1]  +  length;	  final    byte    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '.'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  '/'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  end;  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  end;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  end;	  byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  length;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start  +  length;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start  +  length;	  byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  start;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  start;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  start;	  byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start.length;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start.length;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start.length;	  byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  clip;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  clip;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  clip;	  byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  while(start  <  end  -  1  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  -  1  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&  trailer!=  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  length  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  =  end  -  1  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  while(end  <  end  -  1  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(end  <  end  -  1  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
26	[BUG]  [BUGGY]  while(start  <  end  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
27	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  if(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  while(start  <  length  &&  trailer  ==  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  length  &&  trailer  ==  0)  {  end--;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&  trailer  ==  0)  {  end--;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  while(start  <  length  &&  trailer!=  0)  {  end--;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  length  &&  trailer!=  0)  {  end--;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&  trailer!=  0)  {  end--;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  0);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  0);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  0);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end-1,'');  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end-1,'');  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  end-1,'');	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
41	[BUG]  [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  length  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
42	[BUG]  [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(end  <  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(end  <  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
43	[BUG]  [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  =  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(trailer  <  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  end  -  1  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  int  trailer  =  buffer[length  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  int  trailer  =  buffer[length  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  trailer  =  buffer[length  -  1];	  byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  end;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  end;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  end;	  byte    trailer    =    buffer[end    -    1]    +    length;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
47	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  start;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  final  byte  trailer  =  buffer[end  -  1]  +  start;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1]  +  start;	  final    byte    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start-1;  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start-1;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start-1;	  byte    trailer    =    buffer[end    -    1]    +    start;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  while(trailer  <  end  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(trailer  <  end  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  end  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  start);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
54	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  start);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte[]  trailer  =  exceptionMessage(buffer,  offset,  length);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte[]  trailer  =  exceptionMessage(buffer,  offset,  length);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  0  ||  trailer  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
59	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  length  ==  ''))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
60	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==  'e'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==    0    ||    trailer    ==''))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
61	[BUG]  [BUGGY]  while(start  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
62	[BUG]  [BUGGY]  while(trailer  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(trailer  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(trailer  <  end  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
63	[BUG]  [BUGGY]  byte  trailer  =  buffer[load  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[load  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[load  -  1];	  byte    trailer    =    buffer[length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  while(start  <  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&  trailer  ==  '.')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  while(start  <  start  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  start  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  start  &&  trailer  ==  '')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  offset;  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  buffer[start  -  1]  +  offset;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1]  +  offset;	  byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
67	[BUG]  [BUGGY]  while(start  <  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  start  &&(trailer  ==  ''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    ')')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
68	[BUG]  [BUGGY]  byte  trailer  =  this.currentByte[start  -  1];  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  this.currentByte[start  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  this.currentByte[start  -  1];	  byte    trailer    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
69	[BUG]  [BUGGY]  if(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  if(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	if(start  <  length)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
70	[BUG]  [BUGGY]  long  end  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  long  end  =  System.currentTimeMillis();  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	long  end  =  System.currentTimeMillis();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
71	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer.length  -  start);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  byte  trailer  =  getCurrentToken();  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  byte  trailer  =  getCurrentToken();  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  getCurrentToken();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
73	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  0);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  0);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  0);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  length);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  length);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	int  end  =  exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  length);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  while(start  <  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  start  &&(trailer  ==  ''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&(trailer    ==''    ||    trailer    ==    'n'))    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  while(start  <  end  -  1  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    start++;  }  else  {  break;  }  }        [BUGGY]  while(start  <  end  -  1  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&  trailer  ==  'n')  {  trailer  =  buffer[end  -  1];	  while(start    <    end    -    1    &&    trailer    =='')    {    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
