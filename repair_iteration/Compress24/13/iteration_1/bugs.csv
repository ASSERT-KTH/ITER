bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  start++;  }  else  {  break;  }  }      [BUGGY]  byte  trailer  =  buffer[start  -  1];  [BUGGY]  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[start  -  1];	byte  trailer  =  buffer[end  -  1];  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
2	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length;  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException  [CONTEXT]  start++;  }  else  {  break;  }  }      [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  length;  [BUGGY]  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  length;	byte  trailer  =  buffer[end  -  1];  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
3	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException  [CONTEXT]  start++;  }  else  {  break;  }  }      [BUGGY]  final  byte  trailer  =  buffer[end  -  1];  [BUGGY]  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	final  byte  trailer  =  buffer[end  -  1];	byte  trailer  =  buffer[end  -  1];  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
4	[BUG]  [BUGGY]  byte  trailer  =  buffer[length  -  1];  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException  [CONTEXT]  start++;  }  else  {  break;  }  }      [BUGGY]  byte  trailer  =  buffer[length  -  1];  [BUGGY]  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[length  -  1];	byte  trailer  =  buffer[end  -  1];  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException  [CONTEXT]  start++;  }  else  {  break;  }  }      [BUGGY]    [BUGGY]  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	  	byte  trailer  =  buffer[end  -  1];  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
6	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start;  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  start++;  }  else  {  break;  }  }      [BUGGY]  byte  trailer  =  buffer[end  -  1]  +  start;  [BUGGY]  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	byte  trailer  =  buffer[end  -  1]  +  start;	byte  trailer  =  buffer[end  -  1];  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
7	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==''))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException  [CONTEXT]  start++;  }  else  {  break;  }  }      [BUGGY]  while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==''))  {  trailer  =  buffer[end  -  1];  [BUGGY]  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==  0  ||  trailer  ==''))  {  trailer  =  buffer[end  -  1];	byte  trailer  =  buffer[end  -  1];  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
8	[BUG]  [BUGGY]  while(start  <  end  -  1  &&  trailer  =='')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException  [CONTEXT]  start++;  }  else  {  break;  }  }      [BUGGY]  while(start  <  end  -  1  &&  trailer  =='')  {  trailer  =  buffer[end  -  1];  [BUGGY]  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&  trailer  =='')  {  trailer  =  buffer[end  -  1];	byte  trailer  =  buffer[end  -  1];  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
9	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException  [CONTEXT]  start++;  }  else  {  break;  }  }      [BUGGY]  while(start  <  end  -  1  &&(trailer  ==''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];  [BUGGY]  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==''  ||  trailer  ==  'n'))  {  trailer  =  buffer[end  -  1];	byte  trailer  =  buffer[end  -  1];  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
10	[BUG]  [BUGGY]  while(start  <  end  -  1  &&(trailer  ==''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException  [CONTEXT]  start++;  }  else  {  break;  }  }      [BUGGY]  while(start  <  end  -  1  &&(trailer  ==''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];  [BUGGY]  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  while  (start  <  end  -  1  &&  (trailer  ==  0  ||  trailer  ==  '  '))  {  end--;  trailer  =  buffer[end  -  1];  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	128	128	1	replace	while(start  <  end  -  1  &&(trailer  ==''  ||  trailer  ==  ')')  {  trailer  =  buffer[end  -  1];	byte  trailer  =  buffer[end  -  1];  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
