bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  buffer.length;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  buffer.length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  buffer.length;	  int    end    =    offset    +    length    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  buffer.length  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  buffer.length  -  1;	  int    end    =    offset    +    length    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  buffer.length  -  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  buffer.length  -  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  buffer.length  -  BYTE_MASK;	  int    end    =    offset    +    length    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  buffer.length  -  2;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  buffer.length  -  2;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  buffer.length  -  2;	  int    end    =    offset    +    length    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  buffer.length  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  buffer.length  +  1;	  int    end    =    offset    +    length    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  buffer[offset.length  -  1];  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  buffer[offset.length  -  1];  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  buffer[offset.length  -  1];	  int    end    =    offset    +    length    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  while(offset  <  length)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(offset  <  length)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(offset  <  length)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  if(length  <  1)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  1)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  1)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  BYTE_MASK  +  4;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  BYTE_MASK  +  4;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  BYTE_MASK  +  4;	  int    end    =    offset    +    length    /    BYTE_MASK    +    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  BYTE_MASK  +  1L;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  BYTE_MASK  +  1L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  BYTE_MASK  +  1L;	  int    end    =    offset    +    length    /    BYTE_MASK    +    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  FALLBACK_ENCODING  +  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  FALLBACK_ENCODING  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  FALLBACK_ENCODING  +  1;	  int    end    =    offset    +    length    /    BYTE_MASK    +    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  BYTE_MASK  +  3;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  BYTE_MASK  +  3;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  BYTE_MASK  +  3;	  int    end    =    offset    +    length    /    BYTE_MASK    +    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  int  end  =  buffer.length  +  length  *  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  buffer.length  +  length  *  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  buffer.length  +  length  *  1;	  int    end    =    offset    +    length    *    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
17	[BUG]  [BUGGY]  int  end  =  offset  +  length  +  2L;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  +  2L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  +  2L;	  int    end    =    offset    +    length    +    1L;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
18	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  1L;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  1L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  1L;	  int    end    =    offset    +    length    +    1L;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
19	[BUG]  [BUGGY]  int  end  =  offset  +  length  +  4;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  +  4;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  +  4;	  int    end    =    offset    +    length    +    1L;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
20	[BUG]  [BUGGY]  int  end  =  offset  +  length  +  3;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  +  3;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  +  3;	  int    end    =    offset    +    length    +    1L;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
21	[BUG]  [BUGGY]  int  end  =  offset  +  length  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  +  buffer.length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  +  buffer.length;	  int    end    =    offset    +    length    /    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
22	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  *  buffer.length;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  *  buffer.length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  *  buffer.length;	  int    end    =    offset    +    length    /    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
23	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  +  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  +  buffer.length  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  +  buffer.length  +  1;	  int    end    =    offset    +    length    /    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
24	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  +  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  +  buffer.length  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  +  buffer.length  -  1;	  int    end    =    offset    +    length    /    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
25	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  +  buffer[start].length;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  +  buffer[start].length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  +  buffer[start].length;	  int    end    =    offset    +    length    /    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
26	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  buffer.length  *  FALLBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  buffer.length  *  FALLBACK_ENCODING;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  buffer.length  *  FALLBACK_ENCODING;	  int    end    =    offset    +    length    *    FALLBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
27	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING  +  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  FALLBACK_ENCODING  +  BYTE_MASK;	  int    end    =    offset    +    length    *    FALLBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
28	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING  +  buffer.length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  FALLBACK_ENCODING  +  buffer.length;	  int    end    =    offset    +    length    *    FALLBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
29	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING  +  1;  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  FALLBACK_ENCODING  +  1;	  int    end    =    offset    +    length    *    FALLBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
30	[BUG]  [BUGGY]  int  end  =  offset  +  length.length  -  1L;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length.length  -  1L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length.length  -  1L;	  int    end    =    offset    +    length.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
31	[BUG]  [BUGGY]  int  end  =  offset  +  length.length  /  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length.length  /  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length.length  /  1;	  int    end    =    offset    +    length.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
32	[BUG]  [BUGGY]  int  end  =  offset  +  length.length  -  4;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length.length  -  4;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length.length  -  4;	  int    end    =    offset    +    length.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  offset,  length);	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    offset,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    offset,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
35	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    offset,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
36	[BUG]  [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    offset,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
37	[BUG]  [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer.length)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    offset,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    offset,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
39	[BUG]  [BUGGY]  if(length  <  2)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  2)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  2)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    offset,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
40	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  *  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  *  BYTE_MASK  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  *  BYTE_MASK  +  1;	  int    end    =    offset    +    length    /    2    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
41	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  *  FALLBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  *  FALLBACK_ENCODING;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  *  FALLBACK_ENCODING;	  int    end    =    offset    +    length    /    2    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
42	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  4  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  4  *  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  4  *  BYTE_MASK;	  int    end    =    offset    +    length    /    2    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
43	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2L  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2L  *  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2L  *  BYTE_MASK;	  int    end    =    offset    +    length    /    2    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
44	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  -  1;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  -  1;	  int    end    =    offset    +    length    *    2    -    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  4  -  1;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  4  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  4  -  1;	  int    end    =    offset    +    length    *    2    -    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
46	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  +  1L;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  +  1L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  +  1L;	  int    end    =    offset    +    length    /    2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
47	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  1  +  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  1  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  1  +  1;	  int    end    =    offset    +    length    /    2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
48	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  4  +  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  4  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  4  +  1;	  int    end    =    offset    +    length    /    2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
49	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  *  2  +  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  *  2  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  *  2  +  1;	  int    end    =    offset    +    length    /    2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
50	[BUG]  [BUGGY]  int  end  =  buffer.length  +  length  /  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  buffer.length  +  length  /  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  buffer.length  +  length  /  1;	  int    end    =    buffer.length    +    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
51	[BUG]  [BUGGY]  byte  end  =  buffer.length  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte  end  =  buffer.length  +  length  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte  end  =  buffer.length  +  length  -  1;	  int    end    =    buffer.length    +    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
52	[BUG]  [BUGGY]  int  end  =  buffer.length  +  offset  -  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  buffer.length  +  offset  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  buffer.length  +  offset  -  1;	  int    end    =    buffer.length    +    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
53	[BUG]  [BUGGY]  int  end  =  buffer.length  +  length;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  buffer.length  +  length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  buffer.length  +  length;	  int    end    =    buffer.length    +    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
54	[BUG]  [BUGGY]  int  end  =  buffer.length  +  length  -  2;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  buffer.length  +  length  -  2;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  buffer.length  +  length  -  2;	  int    end    =    buffer.length    +    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
55	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  4;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  4;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  +  4;	  int    end    =    offset    +    length    *    BYTE_MASK    +    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
56	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  1L;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  1L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  +  1L;	  int    end    =    offset    +    length    *    BYTE_MASK    +    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
57	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  3;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  3;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  +  3;	  int    end    =    offset    +    length    *    BYTE_MASK    +    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
58	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  FALLBACK_ENCODING  +  2;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  FALLBACK_ENCODING  +  2;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  FALLBACK_ENCODING  +  2;	  int    end    =    offset    +    length    /    BYTE_MASK    +    2;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  /  BYTE_BACK_ENCODING  +  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  /  BYTE_BACK_ENCODING  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  /  BYTE_BACK_ENCODING  +  1;	  int    end    =    offset    +    length    *    BYTE_MASK    /    BYTE_BACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
60	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING  /  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  FALLBACK_ENCODING  /  BYTE_MASK;	  int    end    =    offset    +    length    *    BYTE_MASK    /    BYTE_BACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
61	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  /  FALLBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  /  FALLBACK_ENCODING;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  /  FALLBACK_ENCODING;	  int    end    =    offset    +    length    *    BYTE_MASK    /    BYTE_BACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
62	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  /  BYTE_BACK_ENCODING  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  /  BYTE_BACK_ENCODING  +  buffer.length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  /  BYTE_BACK_ENCODING  +  buffer.length;	  int    end    =    offset    +    length    *    BYTE_MASK    /    BYTE_BACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
63	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_BACK_ENCODING  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_BACK_ENCODING  /  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_BACK_ENCODING  /  BYTE_MASK;	  int    end    =    offset    +    length    *    BYTE_MASK    /    BYTE_BACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
64	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  BYTE_BACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  BYTE_BACK_ENCODING;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  BYTE_BACK_ENCODING;	  int    end    =    offset    +    length    *    BYTE_MASK    /    BYTE_BACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
65	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  4  +  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  4  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  4  +  1;	  int    end    =    offset    +    length    *    4;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
66	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  4  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  4  +  buffer.length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  4  +  buffer.length;	  int    end    =    offset    +    length    *    4;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length);	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
69	[BUG]  [BUGGY]  if(length  <  =  0)  {  if(length  >  buffer.length)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  0)  {  if(length  >  buffer.length)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  0)  {  if(length  >  buffer.length)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
70	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
71	[BUG]  [BUGGY]  if(length  <  2)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  2)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  2)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
72	[BUG]  [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length  +  1);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length  +  1);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer.length)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length  +  1);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
73	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  FALLBACK_ENCODING  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  FALLBACK_ENCODING  *  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  FALLBACK_ENCODING  *  BYTE_MASK;	  int    end    =    offset    +    length    /    FALLBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
74	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  FALLBACK_ENCODING.length;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  FALLBACK_ENCODING.length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  FALLBACK_ENCODING.length;	  int    end    =    offset    +    length    /    FALLBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
75	[BUG]  [BUGGY]  int  end  =  offset  +  length.length  /  2;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length.length  /  2;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length.length  /  2;	  int    end    =    offset    +    length.length    -    2;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
76	[BUG]  [BUGGY]  int  end  =  offset  +  length.length;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length.length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length.length;	  int    end    =    offset    +    length.length    -    2;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
77	[BUG]  [BUGGY]  int  end  =  offset  +  length.length  -  3;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length.length  -  3;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length.length  -  3;	  int    end    =    offset    +    length.length    -    2;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
78	[BUG]  [BUGGY]  int  end  =  offset  +  length.length  -  2L;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length.length  -  2L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length.length  -  2L;	  int    end    =    offset    +    length.length    -    2;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
79	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2L;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2L;	  int    end    =    offset    +    length    -    2L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
80	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  3;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  3;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  3;	  int    end    =    offset    +    length    -    2L;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
81	[BUG]  [BUGGY]  while(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
82	[BUG]  [BUGGY]  if(length  <  =  0)  {  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  0)  {  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  0)  {  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
83	[BUG]  [BUGGY]  if(length  >  buffer[start])  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer[start])  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer[start])  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
84	[BUG]  [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
85	[BUG]  [BUGGY]  if(length  <  2)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  2)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  2)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
86	[BUG]  [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
87	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_SIZE;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_SIZE;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_SIZE;	  int    end    =    offset    +    length    /    BYTE_SIZE;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
88	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  BYTE_SIZE  +  1;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  BYTE_SIZE  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  BYTE_SIZE  +  1;	  int    end    =    offset    +    length    /    BYTE_SIZE;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
89	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  5;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  5;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  5;	  int    end    =    offset    +    length    -    1L;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
90	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  4  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  4  +  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  4  +  BYTE_MASK;	  int    end    =    offset    +    length    *    2    +    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
91	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  2  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  2  /  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  2  /  BYTE_MASK;	  int    end    =    offset    +    length    *    2    +    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
92	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  2  +  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  2  +  BYTE_MASK  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  2  +  BYTE_MASK  +  1;	  int    end    =    offset    +    length    *    2    +    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
93	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  2  +  4;  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  2  +  4;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  2  +  4;	  int    end    =    offset    +    length    *    2    +    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
94	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  buffer.length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	result  =  parseOctal(buffer,  offset,  length,  buffer.length);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
95	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  result  =  parseOctal(buffer,  offset,  length  -  1);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	result  =  parseOctal(buffer,  offset,  length  -  1);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
96	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  0);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  0);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	result  =  parseOctal(buffer,  offset,  length,  0);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
97	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  result  =  parseOctal(buffer,  offset,  length  +  1);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	result  =  parseOctal(buffer,  offset,  length  +  1);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
98	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  2);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  2);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	result  =  parseOctal(buffer,  offset,  length,  2);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
99	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  1);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  result  =  parseOctal(buffer,  offset,  length,  1);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	result  =  parseOctal(buffer,  offset,  length,  1);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
100	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length  -  2);  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  result  =  parseOctal(buffer,  offset,  length  -  2);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	result  =  parseOctal(buffer,  offset,  length  -  2);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
101	[BUG]  [BUGGY]  if(length  <  =  0)  {  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  0)  {  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  0)  {  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    0L;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
102	[BUG]  [BUGGY]  if(length  <  2)  {  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  2)  {  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  2)  {  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    0L;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
103	[BUG]  [BUGGY]  if(length  <  2)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  2)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  2)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    0L;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
104	[BUG]  [BUGGY]  if(length  <  2  ||  length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  2  ||  length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  2  ||  length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    0L;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
105	[BUG]  [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0;  }  [CE]  illegal  start  of  expression  [FE]                                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0;  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0;  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    0L;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
106	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  2  +  1L;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  2  +  1L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  2  +  1L;	  int    end    =    offset    +    length    *    2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
107	[BUG]  [BUGGY]  ||  length  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||  length  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||  length  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
108	[BUG]  [BUGGY]  ||(length  <  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(length  <  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(length  <  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
109	[BUG]  [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(offset  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
110	[BUG]  [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(offset  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
111	[BUG]  [BUGGY]  ||(length  <  0  &&  buffer[offset]  ==  0))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(length  <  0  &&  buffer[offset]  ==  0))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(length  <  0  &&  buffer[offset]  ==  0))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
112	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  *  4;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  *  4;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  *  4;	  int    end    =    offset    +    length    /    2    +    4;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
113	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  3  +  4;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  3  +  4;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  3  +  4;	  int    end    =    offset    +    length    /    2    +    4;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
114	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  1  +  4;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  1  +  4;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  1  +  4;	  int    end    =    offset    +    length    /    2    +    4;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
115	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  2  +  buffer.length  -  offset;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  2  +  buffer.length  -  offset;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  2  +  buffer.length  -  offset;	  int    end    =    offset    +    length    *    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
116	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  2  +  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  2  +  buffer.length  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  2  +  buffer.length  -  1;	  int    end    =    offset    +    length    *    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
117	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  2  +  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  2  +  buffer.length  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  2  +  buffer.length  +  1;	  int    end    =    offset    +    length    *    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
118	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  2  -  buffer.length;  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  2  -  buffer.length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  2  -  buffer.length;	  int    end    =    offset    +    length    *    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
119	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  -  1;	  int    end    =    offset    +    length    *    BYTE_MASK    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
120	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  BYTE_MASK  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  BYTE_MASK  +  buffer.length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  BYTE_MASK  +  buffer.length;	  int    end    =    offset    +    length    *    BYTE_MASK    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
121	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  +  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  +  1;	  int    end    =    offset    +    length    *    BYTE_MASK    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
122	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  -  2;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  -  2;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  -  2;	  int    end    =    offset    +    length    *    BYTE_MASK    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
123	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  *  2;  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  *  2;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  *  2;	  int    end    =    offset    +    length    *    BYTE_MASK    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
124	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  BYTE_MASK  -  1;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  BYTE_MASK  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  BYTE_MASK  -  1;	  int    end    =    offset    +    length    *    BYTE_MASK    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
125	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  /  1;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  /  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  /  1;	  int    end    =    offset    +    length    *    BYTE_MASK    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
126	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING  -  1;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  FALLBACK_ENCODING  -  1;	  int    end    =    offset    +    length    *    BYTE_MASK    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
127	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  /  2  -  1;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  /  2  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  /  2  -  1;	  int    end    =    offset    +    length    *    BYTE_MASK    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
128	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  -  1L;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  -  1L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  -  1L;	  int    end    =    offset    +    length    *    BYTE_MASK    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
129	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  -  2;  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  -  2;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  -  2;	  int    end    =    offset    +    length    *    BYTE_MASK    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
130	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  3;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  3;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  3;	  int    end    =    offset    +    length    /    4;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
131	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  2  /  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  2  /  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  2  /  1;	  int    end    =    offset    +    length    /    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
132	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  1);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  -  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
133	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  start);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  -  start);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
134	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
135	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  offset);  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  offset);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  -  offset);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
136	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  length);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result,  length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  result,  length);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  result);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  result);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
138	[BUG]  [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
139	[BUG]  [BUGGY]  if(length  <  1)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  1)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  1)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
140	[BUG]  [BUGGY]  while(offset  <  length)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(offset  <  length)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(offset  <  length)  {  if(length  <  2)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
141	[BUG]  [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  0)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
142	[BUG]  [BUGGY]  if(length  <  =  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
143	[BUG]  [BUGGY]  ||(length  >  buffer.length  &&  offset  <  =  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(length  >  buffer.length  &&  offset  <  =  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(length  >  buffer.length  &&  offset  <  =  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
144	[BUG]  [BUGGY]  ||(length  >  buffer.length  -  offset))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(length  >  buffer.length  -  offset))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(length  >  buffer.length  -  offset))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
145	[BUG]  [BUGGY]  while(offset  >  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(offset  >  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(offset  >  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
146	[BUG]  [BUGGY]  ||(offset  <  length  &&  buffer.length  >  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(offset  <  length  &&  buffer.length  >  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(offset  <  length  &&  buffer.length  >  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
147	[BUG]  [BUGGY]  ||(length  >  buffer.length  &&  offset  <  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(length  >  buffer.length  &&  offset  <  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(length  >  buffer.length  &&  offset  <  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
148	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  /  2;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  /  2;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  /  2;	  int    end    =    offset    +    length    *    BYTE_MASK    +    2;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
149	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING  +  2;  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING  +  2;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  FALLBACK_ENCODING  +  2;	  int    end    =    offset    +    length    *    BYTE_MASK    +    2;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
150	[BUG]  [BUGGY]  ||(length  <  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(length  <  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(length  <  0  &&  buffer[start]  ==  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
151	[BUG]  [BUGGY]  ||(length  <  0  &&  buffer[start]  ==  0,  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(length  <  0  &&  buffer[start]  ==  0,  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(length  <  0  &&  buffer[start]  ==  0,  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
152	[BUG]  [BUGGY]  ||  length  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||  length  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||  length  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
153	[BUG]  [BUGGY]  ||(offset  <  0  &&  length  >  buffer.length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(offset  <  0  &&  length  >  buffer.length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(offset  <  0  &&  length  >  buffer.length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
154	[BUG]  [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
155	[BUG]  [BUGGY]  ||(length  <  0  &&  buffer[offset]  ==  0,  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(length  <  0  &&  buffer[offset]  ==  0,  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(length  <  0  &&  buffer[offset]  ==  0,  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
156	[BUG]  [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(offset  <  0)  {  throw  new  IllegalArgumentException( " ");	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
157	[BUG]  [BUGGY]  int  end  =  offset  +  length  +  1  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  +  1  +  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  +  1  +  BYTE_MASK;	  int    end    =    offset    +    length    /    2    +    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
158	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  5;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  5;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  5;	  int    end    =    offset    +    length    /    5;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
159	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  SHORTBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  SHORTBACK_ENCODING;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  SHORTBACK_ENCODING;	  int    end    =    offset    +    length    *    SHORTBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
160	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  buffer.length  *  SHORTBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  buffer.length  *  SHORTBACK_ENCODING;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  buffer.length  *  SHORTBACK_ENCODING;	  int    end    =    offset    +    length    *    SHORTBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
161	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length  +  1);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length  +  1);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length  +  1);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
162	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  size);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  size);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  size);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
163	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  2);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  2);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  2);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
164	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buff,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buff,  offset,  length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buff,  offset,  length);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
165	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  1);  [CE]  illegal  start  of  expression  [FE]                                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  1);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  1);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
166	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  length);  [CE]  illegal  start  of  expression  [FE]                                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  length);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
167	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  4  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  4  +  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  4  +  BYTE_MASK;	  int    end    =    offset    +    length    /    4;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
168	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  +  2;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  +  2;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  +  2;	  int    end    =    offset    +    length    *    BYTE_MASK    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
169	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer[offset.length  -  1];  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer[offset.length  -  1];  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  +  buffer[offset.length  -  1];	  int    end    =    offset    +    length    *    BYTE_MASK    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
170	[BUG]  [BUGGY]  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  1 ");  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  1 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  1 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
171	[BUG]  [BUGGY]  if(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
172	[BUG]  [BUGGY]  if(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(offset  <  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2. ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
173	[BUG]  [BUGGY]  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2.0 ");  }  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2.0 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2.0 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
174	[BUG]  [BUGGY]  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  1. ");  }  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  1. ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  1. ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
175	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  2  +  5;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  2  +  5;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  2  +  5;	  int    end    =    offset    +    length    *    2    +    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
176	[BUG]  [BUGGY]  float  end  =  buffer.length  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  float  end  =  buffer.length  +  length  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	float  end  =  buffer.length  +  length  -  1;	  int    end    =    buffer.length    +    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
177	[BUG]  [BUGGY]  char  end  =  buffer.length  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  char  end  =  buffer.length  +  length  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	char  end  =  buffer.length  +  length  -  1;	  int    end    =    buffer.length    +    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
178	[BUG]  [BUGGY]  int  end  =  buffer.length  +  length  -  1L;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  buffer.length  +  length  -  1L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  buffer.length  +  length  -  1L;	  int    end    =    buffer.length    +    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
179	[BUG]  [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  1 ");  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  1 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  1 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
180	[BUG]  [BUGGY]  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  10 ");  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  10 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  10 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
181	[BUG]  [BUGGY]  if(length  >=  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >=  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >=  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
182	[BUG]  [BUGGY]  if(offset  >  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(offset  >  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(offset  >  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
183	[BUG]  [BUGGY]  if(length  ==  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  ==  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  ==  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
184	[BUG]  [BUGGY]  if(length  >  buffer.length  ||  offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer.length  ||  offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer.length  ||  offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
185	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  BYTE_SIZE  +  2;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  BYTE_SIZE  +  2;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  BYTE_SIZE  +  2;	  int    end    =    offset    +    length    /    BYTE_SIZE;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
186	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  2  +  buffer.length  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  2  +  buffer.length  +  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  2  +  buffer.length  +  BYTE_MASK;	  int    end    =    offset    +    length    *    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
187	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  +  5;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  +  5;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  +  5;	  int    end    =    offset    +    length    /    2    +    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
188	[BUG]  [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
189	[BUG]  [BUGGY]  ||(length  <  0  &&  buffer[offset]  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(length  <  0  &&  buffer[offset]  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(length  <  0  &&  buffer[offset]  ==  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
190	[BUG]  [BUGGY]  ||(length  <  0  &&  buffer[offset  +  length]  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(length  <  0  &&  buffer[offset  +  length]  ==  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(length  <  0  &&  buffer[offset  +  length]  ==  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
191	[BUG]  [BUGGY]  if(length  <  3)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  3)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  3)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
192	[BUG]  [BUGGY]  ||(length  <  =  0  &&  buffer[offset]  ==  0))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  ||(length  <  =  0  &&  buffer[offset]  ==  0))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	||(length  <  =  0  &&  buffer[offset]  ==  0))  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
193	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  3  -  1;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  3  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  3  -  1;	  int    end    =    offset    +    length    *    2    -    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
194	[BUG]  [BUGGY]  result  =  parseOctal(buffer,  offset,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  result  =  parseOctal(buffer,  offset,  length  -  start);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	result  =  parseOctal(buffer,  offset,  length  -  start);	  result    =    parseOctal(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
195	[BUG]  [BUGGY]  if(offset  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(offset  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(offset  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
196	[BUG]  [BUGGY]  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  1 ");  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  1 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  0)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  1 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
197	[BUG]  [BUGGY]  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  0)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
198	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  buffer[offset].length;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  buffer[offset].length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  buffer[offset].length;	  int    end    =    offset    +    length    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
199	[BUG]  [BUGGY]  int  end  =  offset  +  length  +  3L;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  +  3L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  +  3L;	  int    end    =    offset    +    length    +    1L;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
200	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  *  1;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  *  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  *  1;	  int    end    =    offset    +    length    /    2    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
201	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  10  +  4;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  10  +  4;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  10  +  4;	  int    end    =    offset    +    length    /    2    +    4;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
202	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  MILLIS_ENCODING;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  MILLIS_ENCODING;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  MILLIS_ENCODING;	  int    end    =    offset    +    length    *    SHORTBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
203	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
204	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  start);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  start);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
205	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  FALLBACK_ENCODING  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  FALLBACK_ENCODING  +  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  FALLBACK_ENCODING  +  BYTE_MASK;	  int    end    =    offset    +    length    /    FALLBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
206	[BUG]  [BUGGY]  readFully(buffer,  offset,  length)  {  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  readFully(buffer,  offset,  length)  {  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	readFully(buffer,  offset,  length)  {  if(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
207	[BUG]  [BUGGY]  readFully(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  readFully(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	readFully(buffer,  offset,  length)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
208	[BUG]  [BUGGY]  if(length  <  3)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  3)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  3)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
209	[BUG]  [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    0L;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
210	[BUG]  [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    0L;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
211	[BUG]  [BUGGY]  if(length  >=  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >=  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >=  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    0L;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
212	[BUG]  [BUGGY]  if(length  >  buffer[start])  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer[start])  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer[start])  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0L;  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    0L;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
213	[BUG]  [BUGGY]  int  end  =  offset  /  length  *  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  /  length  *  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  /  length  *  1;	  int    end    =    offset    +    length    *    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
214	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  3;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  3;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  3;	  int    end    =    offset    +    length    *    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
215	[BUG]  [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  0)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
216	[BUG]  [BUGGY]  if(length  >  buffer[start])  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer[start])  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer[start])  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
217	[BUG]  [BUGGY]  if(length  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
218	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  4  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  4  +  buffer.length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  4  +  buffer.length;	  int    end    =    offset    +    length    /    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
219	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  +  buffer[start];  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  +  buffer[start];  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  +  buffer[start];	  int    end    =    offset    +    length    /    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
220	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  *  BYTE_MASK  +  buffer.length;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  *  BYTE_MASK  +  buffer.length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  *  BYTE_MASK  +  buffer.length;	  int    end    =    offset    +    length    /    2    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
221	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  *  BYTE_MASK  +  4;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  *  BYTE_MASK  +  4;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  *  BYTE_MASK  +  4;	  int    end    =    offset    +    length    /    2    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
222	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  SHORTBACK_ENCODING  -  1;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  SHORTBACK_ENCODING  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  SHORTBACK_ENCODING  -  1;	  int    end    =    offset    +    length    *    BYTE_MASK    -    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
223	[BUG]  [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    offset,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
224	[BUG]  [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  0)  {  System.arraycopy(buffer,  offset,  buffer,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    offset,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
225	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    offset,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
226	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  offset,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    offset,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
227	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  buffer.length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  buffer.length);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
228	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length  -  1);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length  -  1);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
229	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  false);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  false);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  false);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
230	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length  +  2);  [CE]  illegal  start  of  expression  [FE]                                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length  +  2);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length  +  2);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
231	[BUG]  [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  1);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
232	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
233	[BUG]  [BUGGY]  if(length  >=  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >=  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >=  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
234	[BUG]  [BUGGY]  int  end  =  offset  *  length  *  FALLBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  *  length  *  FALLBACK_ENCODING;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  *  length  *  FALLBACK_ENCODING;	  int    end    =    offset    +    length    *    FALLBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
235	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING,  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  FALLBACK_ENCODING,  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  FALLBACK_ENCODING,  BYTE_MASK;	  int    end    =    offset    +    length    *    FALLBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
236	[BUG]  [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer.length)  {  System.arraycopy(buffer,  0,  buffer,  offset,  length,  length);  System.arraycopy(buffer,  0,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
237	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  2  +  buffer.length  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  2  +  buffer.length  *  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  2  +  buffer.length  *  BYTE_MASK;	  int    end    =    offset    +    length    /    2    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
238	[BUG]  [BUGGY]  long  end  =  buffer.length  +  length  -  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  long  end  =  buffer.length  +  length  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	long  end  =  buffer.length  +  length  -  1;	  int    end    =    buffer.length    +    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
239	[BUG]  [BUGGY]  int  end  =  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  buffer.length  -  1;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  buffer.length  -  1;	  int    end    =    buffer.length    +    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
240	[BUG]  [BUGGY]  if(length  <  2)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0;  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  2)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0;  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  2)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  return  0;  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    return    0L;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
241	[BUG]  [BUGGY]  int  end  =  offset  +  length  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  +  BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  +  BYTE_MASK;	  int    end    =    offset    +    length    /    2    +    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
242	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  1L;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  1L;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  1L;	  int    end    =    offset    +    length    +    1L;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
243	[BUG]  [BUGGY]  while(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
244	[BUG]  [BUGGY]  while(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(length  <  2)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  }	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
245	[BUG]  [BUGGY]  while(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(length  <  0)  {  throw  new  IllegalArgumentException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
246	[BUG]  [BUGGY]  aughtInvalidOctalException( "Length "+length+ "  must  be  at  least  2 ");  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  aughtInvalidOctalException( "Length "+length+ "  must  be  at  least  2 ");  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	aughtInvalidOctalException( "Length "+length+ "  must  be  at  least  2 ");	  if(length    <    =    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
247	[BUG]  [BUGGY]  int  end  =  offset  +  length  /  HORTBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  /  HORTBACK_ENCODING;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  /  HORTBACK_ENCODING;	  int    end    =    offset    +    length    *    SHORTBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
248	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  MILLIS_BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  MILLIS_BYTE_MASK;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  MILLIS_BYTE_MASK;	  int    end    =    offset    +    length    *    SHORTBACK_ENCODING;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
249	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  2);  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  -  2);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  -  2);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
250	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  2);  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  +  2);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  +  2);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
251	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  *  2);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length  *  2);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length  *  2);	  System.arraycopy(buffer,    offset,    buffer,    0,    length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
252	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  buffer.length  -  4;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  buffer.length  -  4;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  buffer.length  -  4;	  int    end    =    offset    +    length    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
253	[BUG]  [BUGGY]  int  end  =  offset  +  length  -  buffer.length  -  start;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  -  buffer.length  -  start;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  -  buffer.length  -  start;	  int    end    =    offset    +    length    -    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
254	[BUG]  [BUGGY]  if(length  <  2  ||  length  >  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  2  ||  length  >  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  2  ||  length  >  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
255	[BUG]  [BUGGY]  if(length  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
256	[BUG]  [BUGGY]  while(length  >  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(length  >  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(length  >  buffer.length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
257	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	throw  new  IllegalArgumentException( " ");	  if(length    >    buffer.length)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
258	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  +  length;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  +  length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  +  buffer.length  +  length;	  int    end    =    offset    +    length    *    BYTE_MASK    +    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
259	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  [Delete]  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	[Delete]	  if(length    <    0)    {    throw    new    IllegalArgumentException(   "Length       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
260	[BUG]  [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	while(offset  <  length)  {  throw  new  IllegalArgumentException( "Length  of "+length+ "  must  be  at  least  2 ");  }	  if(length    <    2)    {    throw    new    IllegalArgumentException(   "Length    of       "+length+   "    must    be    at    least    2   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
261	[BUG]  [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  >  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  offset,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    length);    System.arraycopy(buffer,    0,    buffer,    offset,    length);    System.arraycopy(buffer,    offset,    buffer,    offset,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
262	[BUG]  [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  length;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  int  end  =  offset  +  length  *  BYTE_MASK  +  length;  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	int  end  =  offset  +  length  *  BYTE_MASK  +  length;	  int    end    =    offset    +    length    *    2    +    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
263	[BUG]  [BUGGY]  if(length  <  =  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  if(length  <  =  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	if(length  <  =  buffer.length)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  System.arraycopy(buffer,  offset,  buffer,  0,  length);  }	  if(length    >    buffer.length)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    System.arraycopy(buffer,    offset,    buffer,    0,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
264	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  this.currentByte);  [CE]  illegal  start  of  expression  [FE]                                IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  this.currentByte);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  this.currentByte);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
265	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  result);  [CE]  illegal  start  of  expression  [FE]                                  IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  result);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  result);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
266	[BUG]  [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  true);  [CE]  illegal  start  of  expression  [FE]                                    IllegalArgumentException      [CONTEXT]      public  static  long  parseOctal(final  byte[]  buffer,  final  int  offset,  final  int  length)  {  longresult  =  0;      [BUGGY]  byte[]  buffer  =  parseByte(buffer,  offset,  length,  true);  [BUGGY]      int  start  =  offset;  if  (length  <  2){  throw  new  IllegalArgumentException(     "Length       "+length+     "  must  be  at  least  2     ");  }  if  (buffer[start]  ==  0)  {  return  0L;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress24/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.4472135954999579	104	104	1	replace	byte[]  buffer  =  parseByte(buffer,  offset,  length,  true);	  byte[]    buffer    =    parseByte(buffer,    offset,    length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
