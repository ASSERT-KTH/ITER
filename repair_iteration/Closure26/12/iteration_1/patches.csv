bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  return  filename  +  a$$module$test;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename  +  a$$module$test;  }	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null)  {  return  filename  +  a$$module$test;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  filename  +  a$$module$test;  }	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  if(filename.startsWith( "module$test "))  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.startsWith( "module$test "))  {  return  filename  +  a$$module$test;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "module$test "))  {  return  filename  +  a$$module$test;  }	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename  +  a$$module$test.substring(0,  filename.length()  -  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  filename.length()  -  1);	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename  +  a$$module$test.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  filenamePrefix.length()  -  1);	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  filename  =  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.length()  -  2));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  result.append(filename.substring(0,  filename.length()  -  2));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.length()  -  2));	  return    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  result.append(filename.substring(0,  filename.length()  -  2);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.length()  -  2);	  return    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  result  =  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  1);	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filename.length()  -  1);	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  result  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(0,  filename.length()  -  1);	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  filename;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  filename;  }	  if(filename!=    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  filename;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  filename;  }	  if(filename!=    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf('$')  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null  ||  filename.indexOf('$')  ==  0)  {  return  filename;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf('$')  ==  0)  {  return  filename;  }	  if(filename!=    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf(filenamePrefix)  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null  ||  filename.indexOf(filenamePrefix)  ==  0)  {  return  filename;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf(filenamePrefix)  ==  0)  {  return  filename;  }	  if(filename!=    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  normalizeSourceName(filename);  }	  if(filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  filename;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  filename;  }	  if(filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  filename;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  filename;  }	  if(filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  filename;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  filename;  }	  if(filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  result.append(filename.substring(0,  filename.length()));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.length()));	  return    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  result.append(filename.substring(0,  filename.length()  -  1));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.length()  -  1));	  return    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  return  filename.trim()  +  a$$module$test;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.trim()  +  a$$module$test;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim()  +  a$$module$test;	  return    filename.trim();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.trim();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  return  filename.trim();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename.trim();  }	  return    filename.trim();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  if(filename.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  if(filename.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  result.append(filename.substring(0,  filename.length()  -  3);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.length()  -  3);	  return    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.ENGLISH);	  return    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  return  filename.toLowerCase();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename.toLowerCase();  }	  return    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.endsWith( ".java "))  {  return  filename.toLowerCase();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  return  filename.toLowerCase();  }	  return    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.toLowerCase(Locale.getDefault());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.getDefault());	  return    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  if(filename.startsWith( ".java "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.startsWith( ".java "))  {  return  filename.toLowerCase();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( ".java "))  {  return  filename.toLowerCase();  }	  return    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filenamePrefix.length()  -  1);	  return    filename.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  filename  =  filename.substring(1);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  filename  =  filename.substring(1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(1);	  return    filename.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.toLowerCase()  +  1;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase()  +  1;	  return    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
44	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length())+  1;  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.length())+  1;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length())+  1;	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
45	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.length()  +  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  +  1);	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.length()));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()));	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  DEFAULT_FILENAME_PREFIX;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null)  {  return  DEFAULT_FILENAME_PREFIX;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  DEFAULT_FILENAME_PREFIX;  }	  if(filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  if(filename!=  null)  {  return  DEFAULT_FILENAME_PREFIX;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  return  DEFAULT_FILENAME_PREFIX;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  DEFAULT_FILENAME_PREFIX;  }	  if(filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  DEFAULT_FILENAME_SEPARATOR;  }	  if(filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  if(filename!=  null)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  DEFAULT_FILENAME_SEPARATOR;  }	  if(filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
51	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  ||  filename  ==  null)  {  return  filename;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename  ==  null)  {  return  filename;  }	  if(filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
55	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	System.arraycopy(filename,  0,  currentFilename,  0,  filename.length());	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
58	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test;  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  File.separatorChar  +  a$$module$test;	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename  +  a$$module$test.substring(0,  filename.length()  -  2);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  filename.length()  -  2);	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename  +  a$$module$test.substring(1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(1);	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename  +  a$$module$test.substring(0,  filename.length()  -  3);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  filename.length()  -  3);	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  return  filename.trim().toLowerCase();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.trim().toLowerCase();  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim().toLowerCase();	  return    filename.trim();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
64	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  +  2);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.length()  +  2);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  +  2);	  return    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
65	[BUG]  [BUGGY]  returns  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  returns  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	returns  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
66	[BUG]  [BUGGY]  if(filename!=  null)  {  return  sourceName;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  return  sourceName;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  sourceName;  }	  if(filename!=    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
67	[BUG]  [BUGGY]  if(filename!=  null)  {  return  this.filename;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  return  this.filename;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  this.filename;  }	  if(filename!=    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
68	[BUG]  [BUGGY]  return  new  String(filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  new  String(filename.substring(0,  filename.length()));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  new  String(filename.substring(0,  filename.length()));	  return    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
69	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.length();  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length();	  return    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
70	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }	  if(filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
71	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName();  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  normalizeSourceName();  }	  if(filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }	  if(filename!=    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
73	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()).trim();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.length()).trim();  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()).trim();	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  if(filename.indexOf('$')  >=  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.indexOf('$')  >=  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  >=  0)  {  return  filename  +  a$$module$test;  }	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
75	[BUG]  [BUGGY]  return  filename  +  module$test;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename  +  module$test;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  module$test;	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
76	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  a$$module$test.length());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename  +  a$$module$test.substring(0,  a$$module$test.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  a$$module$test.length());	  return    filename    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
77	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
78	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
79	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
80	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
82	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  2);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.'));  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.'));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.lastIndexOf('.'));	  return    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
85	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(   "module$test   ");var  module$test={};var  a$$module$test=1    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename,  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename,  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
