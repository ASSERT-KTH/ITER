bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(filename.startsWith( "module$test   ")||  filename.startsWith( "module$test   "))  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "module$test   ")||  filename.startsWith( "module$test   "))  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "module$test   ")||  filename.startsWith( "module$test   "))  {  return  filename  +  a$$module$test;  }	  if(filename.startsWith(   "module$test   "))    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  ||  filename.startsWith( "module$test   "))  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.startsWith( "module$test   "))  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.startsWith( "module$test   "))  {  return  filename  +  a$$module$test;  }	  if(filename.startsWith(   "module$test   "))    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  if(module$test.startsWith( "module$test   "))  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test.startsWith( "module$test   "))  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test.startsWith( "module$test   "))  {  return  filename  +  a$$module$test;  }	  if(filename.startsWith(   "module$test   "))    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  if(filename.startsWith( ".module$test "))  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( ".module$test "))  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( ".module$test "))  {  return  filename  +  a$$module$test;  }	  if(filename.startsWith(   "module$test   "))    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }	  result.append(filename.substring(0,    filename.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
6	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  else  {  normalizeSourceName(filename);  }	  result.append(filename.substring(0,    filename.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
7	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }	  result.append(filename.substring(0,    filename.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
8	[BUG]  [BUGGY]  filename.append(filename.substring(0,  filename.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.append(filename.substring(0,  filename.length()  -  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.append(filename.substring(0,  filename.length()  -  1));	  result.append(filename.substring(0,    filename.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
9	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filename.length()  +  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.length()  +  1));	  result.append(filename.substring(0,    filename.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
10	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault()  +  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.getDefault()  +  1);	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
11	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.toLowerCase(Locale.getDefault());  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename.toLowerCase(Locale.getDefault());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename.toLowerCase(Locale.getDefault());  }	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
12	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  true);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  true);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.getDefault(),  true);	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
13	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  false);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  false);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.getDefault(),  false);	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
14	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  module);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.getDefault(),  module);	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
15	[BUG]  [BUGGY]  String  currentFilename  =  filename.toLowerCase(Locale.getDefault());  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.toLowerCase(Locale.getDefault());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.toLowerCase(Locale.getDefault());	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
16	[BUG]  [BUGGY]  result  =  filename.substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(0,  filenamePrefix.length()  -  1);	  result    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
17	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(0,  filename.length()  +  1);	  result    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
18	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(0,  filename.length();	  result    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
19	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filenamePrefix.length());	  return    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
20	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filenamePrefix.length());	  return    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
21	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filenamePrefix.length());	  return    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
22	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filenamePrefix.length()  -  1);	  return    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
23	[BUG]  [BUGGY]  result  =  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(0,  filenamePrefix.length());	  return    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
24	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  filename.toLowerCase();  }	  if(filename!=    null)    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
25	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  filename.toLowerCase();  }	  if(filename!=    null)    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
26	[BUG]  [BUGGY]  if(filename!=  null)  {  filename  =  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  filename  =  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  filename  =  filename.toLowerCase();  }	  if(filename!=    null)    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
27	[BUG]  [BUGGY]  filename  =  filename.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.toLowerCase();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.toLowerCase();	  if(filename!=    null)    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
28	[BUG]  [BUGGY]  ||  filename.toLowerCase()!=  null)  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.toLowerCase()!=  null)  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.toLowerCase()!=  null)  {  return  filename.toLowerCase();  }	  if(filename!=    null)    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
29	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()));  }	  result.append(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
30	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()));  }	  result.append(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
31	[BUG]  [BUGGY]  result.append(filename.substring(0,  filenamePrefix.length()));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filenamePrefix.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filenamePrefix.length()));	  result.append(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
32	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()));  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()));  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()));  }  else  {  normalizeSourceName(filename);  }	  result.append(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
33	[BUG]  [BUGGY]  return  filename  +  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  filename.substring(0,  filenamePrefix.length());	  return    filename    +    a$$module$test.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  a$$module$test.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  filenamePrefix.length());	  return    filename    +    a$$module$test.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
35	[BUG]  [BUGGY]  return  filename  +  module$test.substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  module$test.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  module$test.substring(0,  filenamePrefix.length()  -  1);	  return    filename    +    a$$module$test.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
36	[BUG]  [BUGGY]  return  filename  +  filename.substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  filename.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  filename.substring(0,  filenamePrefix.length()  -  1);	  return    filename    +    a$$module$test.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  return  filename  +  module$test.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  module$test.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  module$test.substring(0,  filenamePrefix.length());	  return    filename    +    a$$module$test.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  return  filename  +  filenamePrefix.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  filenamePrefix.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  filenamePrefix.substring(0,  filename.length()  -  1);	  return    filename    +    a$$module$test.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  this.filename;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  this.filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  this.filename;  }	  if(filename!=    null)    {    return    this.filename;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
40	[BUG]  [BUGGY]  if(this.filename!=  null)  {  if(filename!=  null)  {  return  this.filename;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(this.filename!=  null)  {  if(filename!=  null)  {  return  this.filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(this.filename!=  null)  {  if(filename!=  null)  {  return  this.filename;  }	  if(filename!=    null)    {    return    this.filename;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
41	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  this.filename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  this.filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  this.filename;  }	  if(filename!=    null)    {    return    this.filename;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
42	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf('$')  ==  0)  {  return  this.filename;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf('$')  ==  0)  {  return  this.filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf('$')  ==  0)  {  return  this.filename;  }	  if(filename!=    null)    {    return    this.filename;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
43	[BUG]  [BUGGY]  if(this.filename!=  null)  {  if(filename!=  null)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(this.filename!=  null)  {  if(filename!=  null)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(this.filename!=  null)  {  if(filename!=  null)  {  return  filename;  }	  if(filename!=    null)    {    return    this.filename;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
44	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf('/')  ==  0)  {  return  this.filename;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf('/')  ==  0)  {  return  this.filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf('/')  ==  0)  {  return  this.filename;  }	  if(filename!=    null)    {    return    this.filename;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
45	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
46	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
47	[BUG]  [BUGGY]  if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
48	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
49	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
50	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
51	[BUG]  [BUGGY]  return  filename  +  module$test.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  module$test.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  module$test.substring(0,  filename.length()  -  1);	  return    filename    +    module$test;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
52	[BUG]  [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  module$test;  }	  return    filename    +    module$test;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
53	[BUG]  [BUGGY]  return  filename  +  module$test.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  module$test.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  module$test.substring(0,  filename.length()  -  2);	  return    filename    +    module$test;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
54	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  return  filename  +  module$test;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  ==  0)  {  return  filename  +  module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  return  filename  +  module$test;  }	  return    filename    +    module$test;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
55	[BUG]  [BUGGY]  return  filename.trim()  /  a$$$module$test;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  /  a$$$module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim()  /  a$$$module$test;	  return    filename.trim()    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
56	[BUG]  [BUGGY]  return  filename.trim()  +  module$test;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim()  +  module$test;	  return    filename.trim()    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
57	[BUG]  [BUGGY]  return  filename.trim()  /  a$$module$test;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  /  a$$module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim()  /  a$$module$test;	  return    filename.trim()    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
58	[BUG]  [BUGGY]  return  filename.trim()  +  a$$module$test+filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  a$$module$test+filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim()  +  a$$module$test+filename.substring(0,  filename.length()  -  1);	  return    filename.trim()    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
59	[BUG]  [BUGGY]  return  filename.trim()  +  a$$module$test,  a$$$module$test;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  a$$module$test,  a$$$module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim()  +  a$$module$test,  a$$$module$test;	  return    filename.trim()    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
60	[BUG]  [BUGGY]  return  filename.trim()  +  a$$module$test+filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  a$$module$test+filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim()  +  a$$module$test+filename.substring(0,  filename.length()  -  2);	  return    filename.trim()    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
61	[BUG]  [BUGGY]  if(requiredFilename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(requiredFilename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(requiredFilename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename    ==    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
62	[BUG]  [BUGGY]  if(filename.endsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename    ==    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
63	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename    ==    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
64	[BUG]  [BUGGY]  if(filename.endsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename    ==    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
65	[BUG]  [BUGGY]  if(!module$test.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(!module$test.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(!module$test.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename    ==    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
66	[BUG]  [BUGGY]  if(module$test!=  null)  {  if(filename.indexOf('$')  >=  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test!=  null)  {  if(filename.indexOf('$')  >=  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test!=  null)  {  if(filename.indexOf('$')  >=  0)  {  return  filename  +  a$$module$test;  }	  if(filename.indexOf('$')    >=    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
67	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf('$')  >=  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf('$')  >=  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  null)  {  if(filename.indexOf('$')  >=  0)  {  return  filename  +  a$$module$test;  }	  if(filename.indexOf('$')    >=    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
68	[BUG]  [BUGGY]  if(filename.indexOf('$')!=  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')!=  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')!=  0)  {  return  filename  +  a$$module$test;  }	  if(filename.indexOf('$')    >=    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
69	[BUG]  [BUGGY]  if(module$test.indexOf('$')  >=  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test.indexOf('$')  >=  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test.indexOf('$')  >=  0)  {  return  filename  +  a$$module$test;  }	  if(filename.indexOf('$')    >=    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
70	[BUG]  [BUGGY]  if(filename.indexOf('$')  >=  0)  {  return  filename  +  module$test;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  >=  0)  {  return  filename  +  module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  >=  0)  {  return  filename  +  module$test;  }	  if(filename.indexOf('$')    >=    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
71	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename!=  null)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename!=  null)  {  return  filename;  }	  ||    filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
72	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename  ==  null)  {  return  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename  ==  null)  {  return  a$$module$test;  }	  ||    filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
73	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename!=  null)  {  return  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename!=  null)  {  return  a$$module$test;  }	  ||    filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
74	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename  ==  null)  {  return  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename  ==  null)  {  return  filename.substring(0,  filename.length()  -  1);  }	  ||    filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
75	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  new  String(filename.substring(0,  filename.length()  -  1));  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename  ==  null)  {  return  new  String(filename.substring(0,  filename.length()  -  1));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename  ==  null)  {  return  new  String(filename.substring(0,  filename.length()  -  1));  }	  ||    filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
76	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename  ==  null)  {  return  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename  ==  null)  {  return  filename.substring(0,  filename.length()  -  2);  }	  ||    filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
77	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  filename  +  module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  filename  +  module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  filename  +  module$test;  }	  if(filename    ==    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
78	[BUG]  [BUGGY]  if(module$test  ==  null)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  null)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  null)  {  return  filename  +  a$$module$test;  }	  if(filename    ==    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
79	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename  +  module$test;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename  +  module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename  +  module$test;  }	  if(filename    ==    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
80	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  module$test  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  module$test  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  module$test  +  a$$module$test;  }	  if(filename    ==    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
81	[BUG]  [BUGGY]  if(filename!=  null)  {  return  module$test  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  module$test  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  module$test  +  a$$module$test;  }	  if(filename    ==    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
82	[BUG]  [BUGGY]  if(module$test!=  null)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test!=  null)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test!=  null)  {  return  filename  +  a$$module$test;  }	  if(filename!=    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
83	[BUG]  [BUGGY]  char  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  char  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	char  currentFilename  =  filename.substring(0,  filename.length()  -  1);	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
84	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()  +  1);	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
85	[BUG]  [BUGGY]  File  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  File  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	File  currentFilename  =  filename.substring(0,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
86	[BUG]  [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
87	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf( "module$test   ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf( "module$test   ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  null)  {  if(filename.indexOf( "module$test   ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
88	[BUG]  [BUGGY]  if(module$test!=  null)  {  if(filename.indexOf( "module$test   ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test!=  null)  {  if(filename.indexOf( "module$test   ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test!=  null)  {  if(filename.indexOf( "module$test   ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
89	[BUG]  [BUGGY]  if(module$test.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
90	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
91	[BUG]  [BUGGY]  filename  =  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);	  if(filename    ==    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
92	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename  ==  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename  ==  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
93	[BUG]  [BUGGY]  String  currentFilename  =  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);	  if(filename    ==    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
94	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename,  MODULE_NAME_SEPARATOR);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename,  MODULE_NAME_SEPARATOR);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  normalizeSourceName(filename,  MODULE_NAME_SEPARATOR);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
95	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename,  MODULE_NAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename,  MODULE_NAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  normalizeSourceName(filename,  MODULE_NAME_PREFIX);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
96	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  >=  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  >=  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('$')  >=  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.indexOf('$')    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
97	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')!=  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')!=  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('$')!=  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.indexOf('$')    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
98	[BUG]  [BUGGY]  ||  filename.indexOf('$')  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.indexOf('$')  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.indexOf('$')  ==  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.indexOf('$')    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
99	[BUG]  [BUGGY]  filename  =  filename.indexOf('$')  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.indexOf('$')  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.indexOf('$')  ==  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.indexOf('$')    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
100	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  <  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  <  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('$')  <  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.indexOf('$')    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
101	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.indexOf(filenamePrefix)  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  &&  filename.indexOf(filenamePrefix)  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  &&  filename.indexOf(filenamePrefix)  ==  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf(filenamePrefix)    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
102	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  1);	  if(filename!=    null    ||    filename.indexOf(filenamePrefix)    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
103	[BUG]  [BUGGY]  filename  =  filename.indexOf(filenamePrefix)+  1;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.indexOf(filenamePrefix)+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.indexOf(filenamePrefix)+  1;	  if(filename!=    null    ||    filename.indexOf(filenamePrefix)    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
104	[BUG]  [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	Filename  filename  =  filename.substring(0,  filename.length()  -  1);	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
105	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  filename  =  filename.substring(0,  filename.length()  -  1);	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
106	[BUG]  [BUGGY]  File  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  File  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	File  filename  =  filename.substring(0,  filename.length()  -  1);	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
107	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
108	[BUG]  [BUGGY]  if(filename.endsWith( "java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( "java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( "java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
109	[BUG]  [BUGGY]  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.substring(0,  filename.length()  -  1);	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
110	[BUG]  [BUGGY]  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.substring(0,  filename.length()  -  2);	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
111	[BUG]  [BUGGY]  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.substring(0,  filename.length()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.substring(0,  filename.length()  +  1);	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
112	[BUG]  [BUGGY]  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.substring(0,  filename.length()  -  4);	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
113	[BUG]  [BUGGY]  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.substring(0,  filename.length()  -  3);	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
114	[BUG]  [BUGGY]  filename.delete(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.delete(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.delete(0,  filename.length());	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
115	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename!=  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename!=  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
116	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  MODULE_NAME_SEPARATOR);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  MODULE_NAME_SEPARATOR);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  normalizeSourceName(filename,  MODULE_NAME_SEPARATOR);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
117	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  MODULE_NAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  MODULE_NAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  normalizeSourceName(filename,  MODULE_NAME_PREFIX);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
118	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filename.length()  -  2);	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
119	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filename.length()  -  4);	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
120	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filename.length()  +  1);	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
121	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filename.length()  -  3);	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
122	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
123	[BUG]  [BUGGY]  if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
124	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
125	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
126	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename.toLowerCase(Locale.ENGLISH);  }	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
127	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.ENGLISH,  a$$module$test);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
128	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  0);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  0);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.ENGLISH,  0);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
129	[BUG]  [BUGGY]  String  currentFilename  =  filename.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.toLowerCase(Locale.ENGLISH);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.toLowerCase(Locale.ENGLISH);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
130	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  filename.toLowerCase(Locale.ENGLISH);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  filename.toLowerCase(Locale.ENGLISH);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  filename.toLowerCase(Locale.ENGLISH);  }	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
131	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  true);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  true);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.ENGLISH,  true);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
132	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filename.length()));	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
133	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filename.length();	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
134	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  2);	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
135	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  4);	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
136	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  3);	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
137	[BUG]  [BUGGY]  char  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  char  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	char  currentFilename  =  filename.substring(0,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
138	[BUG]  [BUGGY]  return  filename.trim().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim().toLowerCase(Locale.ENGLISH);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim().toLowerCase(Locale.ENGLISH);	  return    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
139	[BUG]  [BUGGY]  return  filename.trim().toLowerCase(Locale.getDefault());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim().toLowerCase(Locale.getDefault());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim().toLowerCase(Locale.getDefault());	  return    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
140	[BUG]  [BUGGY]  return  filename.trim().toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim().toLowerCase()  +  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim().toLowerCase()  +  1;	  return    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
141	[BUG]  [BUGGY]  String  currentFilename  =  filename.trim().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.trim().toLowerCase();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.trim().toLowerCase();	  return    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
142	[BUG]  [BUGGY]  return  filename.trim().toLowerCase(Locale.US);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim().toLowerCase(Locale.US);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim().toLowerCase(Locale.US);	  return    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
143	[BUG]  [BUGGY]  return  filename.trim().substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim().substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim().substring(0,  filename.length()  -  1);	  return    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
144	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
145	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
146	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	For(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
147	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
148	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(filename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
149	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  filename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  filename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  filename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  filename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  filename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  filename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
150	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.indexOf('$')  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  &&  filename.indexOf('$')  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  &&  filename.indexOf('$')  ==  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf('$')    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
151	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf('$')  >=  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf('$')  >=  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf('$')  >=  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf('$')    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
152	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  normalizeSourceName(filename);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
153	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  normalizeSourceName(filename);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
154	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  normalizeSourceName(filename);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
155	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "module$test ")  >=  0)  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "module$test ")  >=  0)  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf( "module$test ")  >=  0)  {  return  normalizeSourceName(filename);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
156	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  -1)  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  -1)  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  -1)  {  return  normalizeSourceName(filename);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
157	[BUG]  [BUGGY]  return  filename  +  module$test.substring(0,  a$$module$test.length());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  module$test.substring(0,  a$$module$test.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  module$test.substring(0,  a$$module$test.length());	  return    filename    +    a$$module$test.substring(0,    a$$module$test.length());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
158	[BUG]  [BUGGY]  return  filename  +  module$test.substring(0,  a$$$module$test.length());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  module$test.substring(0,  a$$$module$test.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  module$test.substring(0,  a$$$module$test.length());	  return    filename    +    a$$module$test.substring(0,    a$$module$test.length());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
159	[BUG]  [BUGGY]  return  filename.substring(0,  a$$module$test.length());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  a$$module$test.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  a$$module$test.length());	  return    filename    +    a$$module$test.substring(0,    a$$module$test.length());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
160	[BUG]  [BUGGY]  return  module$test.substring(0,  a$$$module$test.length());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  module$test.substring(0,  a$$$module$test.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  module$test.substring(0,  a$$$module$test.length());	  return    filename    +    a$$module$test.substring(0,    a$$module$test.length());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
161	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  a$$module$test.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  a$$module$test.substring(0,  a$$module$test.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  a$$module$test.length()  -  1);	  return    filename    +    a$$module$test.substring(0,    a$$module$test.length());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
162	[BUG]  [BUGGY]  return  module$test  +  a$$$module$test.substring(0,  a$$$module$test.length());  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  module$test  +  a$$$module$test.substring(0,  a$$$module$test.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  module$test  +  a$$$module$test.substring(0,  a$$$module$test.length());	  return    filename    +    a$$module$test.substring(0,    a$$module$test.length());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
163	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  a$$module$test.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  filename.length());	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
164	[BUG]  [BUGGY]  return  filename  +  module$test.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  module$test.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  module$test.substring(0,  filename.length());	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
165	[BUG]  [BUGGY]  return  filename  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  filename.substring(0,  filename.length());	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
166	[BUG]  [BUGGY]  filename  +  a$$module$test.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  +  a$$module$test.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  +  a$$module$test.substring(0,  filename.length());	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
167	[BUG]  [BUGGY]  return  a$$$module$test.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  a$$$module$test.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  a$$$module$test.substring(0,  filename.length());	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
168	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename!=  null)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename!=  null)  {  return  DEFAULT_FILENAME_SEPARATOR;  }	  if(filename!=    null)    {    return    DEFAULT_FILENAME_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
169	[BUG]  [BUGGY]  if(filename!=  null)  {  return  DEFAULT_FILENAME_SEPARATOR  +  filename;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  DEFAULT_FILENAME_SEPARATOR  +  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  DEFAULT_FILENAME_SEPARATOR  +  filename;  }	  if(filename!=    null)    {    return    DEFAULT_FILENAME_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
170	[BUG]  [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  else  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  else  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  else  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
171	[BUG]  [BUGGY]  if(filename.indexOf(module$test)  ==  -1)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  else  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf(module$test)  ==  -1)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  else  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf(module$test)  ==  -1)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  else  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
172	[BUG]  [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
173	[BUG]  [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  else  {  System.arraycopy(filename,  0,  a$$module$test,  0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  else  {  System.arraycopy(filename,  0,  a$$module$test,  0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  else  {  System.arraycopy(filename,  0,  a$$module$test,  0,  filename.length());  }	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
174	[BUG]  [BUGGY]  if(filename.indexOf(module$test)  ==  -1)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf(module$test)  ==  -1)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf(module$test)  ==  -1)  {  return  filename  +  a$$module$test.substring(0,  filename.length());  }	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
175	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  filename.trim();  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  filename.trim();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  filename.trim();  }	  if(filename!=    null)    {    return    filename.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
176	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.trim().length()  ==  0)  {  return  filename.trim();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.trim().length()  ==  0)  {  return  filename.trim();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.trim().length()  ==  0)  {  return  filename.trim();  }	  if(filename!=    null)    {    return    filename.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
177	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  filename.trim();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  filename.trim();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  filename.trim();  }	  if(filename!=    null)    {    return    filename.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
178	[BUG]  [BUGGY]  if(filename!=  null)  {  filename  =  filename.trim();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  filename  =  filename.trim();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  filename  =  filename.trim();  }	  if(filename!=    null)    {    return    filename.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
179	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
180	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
181	[BUG]  [BUGGY]  if(filename!=  null)  {  filename  =  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  filename  =  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  filename  =  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
182	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename!=  null)  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename!=  null)  {  return  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
183	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  -1)  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  -1)  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  -1)  {  return  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
184	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  normalizeSourceName();  }	  if(filename    ==    null)    {    return    normalizeSourceName();    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
185	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  normalizeSourceName();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  normalizeSourceName();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  normalizeSourceName();  }	  if(filename    ==    null)    {    return    normalizeSourceName();    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
186	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  normalizeSourceName();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  normalizeSourceName();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  normalizeSourceName();  }	  if(filename    ==    null)    {    return    normalizeSourceName();    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
187	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  normalizeSourceName();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  normalizeSourceName();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  normalizeSourceName();  }	  if(filename    ==    null)    {    return    normalizeSourceName();    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
188	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  normalizeSourceName();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  normalizeSourceName();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  normalizeSourceName();  }	  if(filename    ==    null)    {    return    normalizeSourceName();    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
189	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('/')  ==  0)  {  return  normalizeSourceName();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('/')  ==  0)  {  return  normalizeSourceName();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('/')  ==  0)  {  return  normalizeSourceName();  }	  if(filename    ==    null)    {    return    normalizeSourceName();    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
190	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename  ==  null)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename  ==  null)  {  return  DEFAULT_FILENAME_SEPARATOR;  }	  if(filename    ==    null)    {    return    DEFAULT_FILENAME_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
191	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  DEFAULT_FILENAME_SEPARATOR  +  filename;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  DEFAULT_FILENAME_SEPARATOR  +  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  DEFAULT_FILENAME_SEPARATOR  +  filename;  }	  if(filename    ==    null)    {    return    DEFAULT_FILENAME_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
192	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  1).trim();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  1).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  1).trim();	  return    filename.substring(0,    filename.length()).trim();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
193	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  2).trim();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  2).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  2).trim();	  return    filename.substring(0,    filename.length()).trim();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
194	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  4).trim();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  4).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  4).trim();	  return    filename.substring(0,    filename.length()).trim();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
195	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrefix.length()).trim();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenamePrefix.length()).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filenamePrefix.length()).trim();	  return    filename.substring(0,    filename.length()).trim();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
196	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  128).trim();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  128).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  128).trim();	  return    filename.substring(0,    filename.length()).trim();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
197	[BUG]  [BUGGY]  if(filename.startsWith( ".java ")||  filename.startsWith( ".java "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( ".java ")||  filename.startsWith( ".java "))  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( ".java ")||  filename.startsWith( ".java "))  {  return  filename.toLowerCase();  }	  if(filename.startsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
198	[BUG]  [BUGGY]  if(filename.startsWith( "java "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "java "))  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "java "))  {  return  filename.toLowerCase();  }	  if(filename.startsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
199	[BUG]  [BUGGY]  ||  filename.startsWith( ".java "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.startsWith( ".java "))  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.startsWith( ".java "))  {  return  filename.toLowerCase();  }	  if(filename.startsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
200	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
201	[BUG]  [BUGGY]  if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
202	[BUG]  [BUGGY]  if(filename.endsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
203	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
204	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
205	[BUG]  [BUGGY]  if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
206	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
207	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
208	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  null)  {  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }	  if(filename.indexOf('$')    ==    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
209	[BUG]  [BUGGY]  if(module$test!=  null)  {  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test!=  null)  {  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test!=  null)  {  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }	  if(filename.indexOf('$')    ==    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
210	[BUG]  [BUGGY]  if(module$test.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }	  if(filename.indexOf('$')    ==    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
211	[BUG]  [BUGGY]  ||  filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }	  if(filename.indexOf('$')    ==    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
212	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  1));	  return    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
213	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  2));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  2));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  2));	  return    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
214	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()));	  return    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
215	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  +  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  +  1));	  return    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
216	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrefix.length()));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenamePrefix.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filenamePrefix.length()));	  return    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
217	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf('.'));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf('.'));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.lastIndexOf('.'));	  return    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
218	[BUG]  [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  1));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.lastIndexOf('.',  1));	  return    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
219	[BUG]  [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  0));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  0));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.lastIndexOf('.',  0));	  return    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
220	[BUG]  [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.')+  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.')+  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.lastIndexOf('.')+  1);	  return    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
221	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.'));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.'));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.'));	  return    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
222	[BUG]  [BUGGY]  if(module$test  ==  null  ||  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  null  ||  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  null  ||  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
223	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf(module$test)  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf(module$test)  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf(module$test)  ==  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
224	[BUG]  [BUGGY]  if(filename  ==  null  &&  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  &&  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  &&  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
225	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  module$test;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  module$test;  }	  if(filename    ==    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
226	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('module$test')  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('module$test')  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('module$test')  ==  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
227	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf( "module$test   ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf( "module$test   ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  null)  {  if(filename.indexOf( "module$test   ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
228	[BUG]  [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
229	[BUG]  [BUGGY]  if(module$test!=  null)  {  if(filename.indexOf( "module$test   ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test!=  null)  {  if(filename.indexOf( "module$test   ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test!=  null)  {  if(filename.indexOf( "module$test   ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
230	[BUG]  [BUGGY]  if(module$test.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
231	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
232	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
233	[BUG]  [BUGGY]  if(filename.endsWith( ".java ")||  filename.endsWith( ".java "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( ".java ")||  filename.endsWith( ".java "))  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java ")||  filename.endsWith( ".java "))  {  return  filename.toLowerCase();  }	  if(filename.endsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
234	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.endsWith( ".java "))  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.endsWith( ".java "))  {  return  filename.toLowerCase();  }	  if(filename.endsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
235	[BUG]  [BUGGY]  if(filename.endsWith( "java   "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( "java   "))  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( "java   "))  {  return  filename.toLowerCase();  }	  if(filename.endsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
236	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  1)+  1;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  1)+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  1)+  1;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
237	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  +  1)+  1;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  +  1)+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  +  1)+  1;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
238	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length())+  1;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length())+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.length())+  1;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
239	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length())+  1;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length())+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filename.length())+  1;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
240	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrefix.length())+  1;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenamePrefix.length())+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filenamePrefix.length())+  1;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
241	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length())+  2;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length())+  2;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length())+  2;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
242	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.length());	  result.append(filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
243	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  result.append(filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
244	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  System.arraycopy(filename,  0,  filename.length()  +  1,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  System.arraycopy(filename,  0,  filename.length()  +  1,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  System.arraycopy(filename,  0,  filename.length()  +  1,  filename.length());  }	  result.append(filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
245	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }	  result.append(filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
246	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  normalizeSourceName(filename);  }	  result.append(filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
247	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  System.arraycopy(filename,  0,  filename.length()  -  1,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  System.arraycopy(filename,  0,  filename.length()  -  1,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  System.arraycopy(filename,  0,  filename.length()  -  1,  filename.length());  }	  result.append(filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
248	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  return  new  String(filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  return  new  String(filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  3);  }  else  {  return  new  String(filename.substring(0,  filename.length()  -  1);  }	  result.append(filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
249	[BUG]  [BUGGY]  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
250	[BUG]  [BUGGY]  if(module.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
251	[BUG]  [BUGGY]  Integer  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Integer  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	Integer  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
252	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
253	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.lastIndexOf('.');  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.lastIndexOf('.');  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.lastIndexOf('.');  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
254	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  DEFAULT_FILENAME_PREFIX;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  DEFAULT_FILENAME_PREFIX;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  DEFAULT_FILENAME_PREFIX;  }	  if(filename    ==    null)    {    return    DEFAULT_FILENAME_PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
255	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  DEFAULT_FILENAME_PREFIX;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename  ==  null)  {  return  DEFAULT_FILENAME_PREFIX;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename  ==  null)  {  return  DEFAULT_FILENAME_PREFIX;  }	  if(filename    ==    null)    {    return    DEFAULT_FILENAME_PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
256	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  DEFAULT_FILENAME_PREFIX  +  filename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  DEFAULT_FILENAME_PREFIX  +  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  DEFAULT_FILENAME_PREFIX  +  filename;  }	  if(filename    ==    null)    {    return    DEFAULT_FILENAME_PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
257	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(0,  filename.length()  -  2);	  result    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
258	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(0,  filename.length()  -  4);	  result    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
259	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(0,  filename.length()  -  3);	  result    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
260	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  /  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  /  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  /  1);	  return    filename.substring(0,    filename.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
261	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  sourceName;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  sourceName;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  sourceName;  }	  if(filename!=    null)    {    return    sourceName;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
262	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  sourceName;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  sourceName;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  sourceName;  }	  if(filename!=    null)    {    return    sourceName;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
263	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  DEFAULT_FILENAME_PREFIX;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename!=  null)  {  return  DEFAULT_FILENAME_PREFIX;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename!=  null)  {  return  DEFAULT_FILENAME_PREFIX;  }	  if(filename!=    null)    {    return    DEFAULT_FILENAME_PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
264	[BUG]  [BUGGY]  if(filename!=  null)  {  return  DEFAULT_FILENAME_PREFIX  +  filename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  DEFAULT_FILENAME_PREFIX  +  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  DEFAULT_FILENAME_PREFIX  +  filename;  }	  if(filename!=    null)    {    return    DEFAULT_FILENAME_PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
265	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
266	[BUG]  [BUGGY]  if(requiredFilename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(requiredFilename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(requiredFilename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename!=    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
267	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename!=    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
268	[BUG]  [BUGGY]  if(!module$test.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(!module$test.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(!module$test.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename!=    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
269	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(2);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(2);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(2);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename!=    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
270	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename!=    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
271	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  &&  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  &&  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
272	[BUG]  [BUGGY]  if(module$test!=  null  ||  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test!=  null  ||  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test!=  null  ||  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
273	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf(module$test)  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf(module$test)  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf(module$test)  ==  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
274	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }	  result.append(filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
275	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }	  result.append(filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
276	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  else  {  System.arraycopy(filename,  0,  filename.length()  -  1,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  else  {  System.arraycopy(filename,  0,  filename.length()  -  1,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  else  {  System.arraycopy(filename,  0,  filename.length()  -  1,  filename.length());  }	  result.append(filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
277	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  else  {  normalizeSourceName(filename);  }	  result.append(filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
278	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  else  {  System.arraycopy(filename,  0,  filename.length()  +  1,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  else  {  System.arraycopy(filename,  0,  filename.length()  +  1,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  else  {  System.arraycopy(filename,  0,  filename.length()  +  1,  filename.length());  }	  result.append(filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
279	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  else  {  System.arraycopy(filename,  0,  filename.length()  -  1,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  else  {  System.arraycopy(filename,  0,  filename.length()  -  1,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  2);  }  else  {  System.arraycopy(filename,  0,  filename.length()  -  1,  filename.length());  }	  result.append(filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
280	[BUG]  [BUGGY]  returns  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  returns  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	returns  filename.substring(0,  filename.length()  -  1);	  returns    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
281	[BUG]  [BUGGY]  files.add(filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  files.add(filename.substring(0,  filename.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	files.add(filename.substring(0,  filename.length()));	  returns    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
282	[BUG]  [BUGGY]  returns  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  returns  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	returns  filename.substring(0,  filename.length()  -  2);	  returns    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
283	[BUG]  [BUGGY]  files.add(filename.substring(0,  filename.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  files.add(filename.substring(0,  filename.length()  -  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	files.add(filename.substring(0,  filename.length()  -  1));	  returns    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
284	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
285	[BUG]  [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	Filename  filename  =  filename.substring(0,  filename.length());	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
286	[BUG]  [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Filename  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	Filename  filename  =  filename.substring(0,  filename.length()  -  2);	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
287	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "./ "))  {  currentFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "./ "))  {  currentFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "./ "))  {  currentFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename.startsWith(   "/   "))    {    currentFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
288	[BUG]  [BUGGY]  if(filename.startsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename.startsWith(   "/   "))    {    currentFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
289	[BUG]  [BUGGY]  if(filename.endsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename.startsWith(   "/   "))    {    currentFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
290	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( ".js "))  {  currentFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( ".js "))  {  currentFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( ".js "))  {  currentFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename.startsWith(   "/   "))    {    currentFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
291	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( ".java "))  {  currentFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( ".java "))  {  currentFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( ".java "))  {  currentFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename.startsWith(   "/   "))    {    currentFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
292	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( ".jar "))  {  currentFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( ".jar "))  {  currentFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( ".jar "))  {  currentFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename.startsWith(   "/   "))    {    currentFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
293	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	System.arraycopy(filename,  0,  currentFilename,  0,  filename.length()  -  1);	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
294	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	System.arraycopy(filename,  0,  currentFilename,  0,  filename.length()  -  2);	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
295	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	System.arraycopy(filename,  0,  currentFilename,  0,  filenamePrefix.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
296	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  requiredFilename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  requiredFilename,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	System.arraycopy(filename,  0,  requiredFilename,  0,  filename.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
297	[BUG]  [BUGGY]  System.arraycopy(currentFilename,  0,  filename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(currentFilename,  0,  filename,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	System.arraycopy(currentFilename,  0,  filename,  0,  filename.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
298	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  filename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  filename,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	System.arraycopy(filename,  0,  currentFilename,  filename,  0,  filename.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
299	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
300	[BUG]  [BUGGY]  if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
301	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test.substring(1);  }	  return    filename    +    a$$module$test.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
302	[BUG]  [BUGGY]  return  filename  +  module$test.substring(1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  module$test.substring(1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  module$test.substring(1);	  return    filename    +    a$$module$test.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
303	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(2);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  a$$module$test.substring(2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(2);	  return    filename    +    a$$module$test.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
304	[BUG]  [BUGGY]  if(filename!=  null  &&  filename.length()  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  &&  filename.length()  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  &&  filename.length()  ==  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.length()    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
305	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  2);	  if(filename!=    null    ||    filename.length()    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
306	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2));  }	  result.append(filename.substring(0,    filename.length()    -    2));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
307	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.length()  +  2));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filename.length()  +  2));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.length()  +  2));	  result.append(filename.substring(0,    filename.length()    -    2));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
308	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2));  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2));  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2));  }  else  {  normalizeSourceName(filename);  }	  result.append(filename.substring(0,    filename.length()    -    2));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
309	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2));  }  else  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2));  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  >  0)  {  result.append(filename.substring(0,  filename.length()  -  2));  }  else  {  compiler.reportCodeChange();  }	  result.append(filename.substring(0,    filename.length()    -    2));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
310	[BUG]  [BUGGY]  return  new  String(filename.substring(0,  filename.length()  -  1));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  new  String(filename.substring(0,  filename.length()  -  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  new  String(filename.substring(0,  filename.length()  -  1));	  return    new    String(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
311	[BUG]  [BUGGY]  return  new  String(filename.substring(0,  filename.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  new  String(filename.substring(0,  filename.length()  +  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  new  String(filename.substring(0,  filename.length()  +  1));	  return    new    String(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
312	[BUG]  [BUGGY]  if(filename.length()  >  0)  {  return  new  String(filename.substring(0,  filename.length()));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  >  0)  {  return  new  String(filename.substring(0,  filename.length()));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  >  0)  {  return  new  String(filename.substring(0,  filename.length()));  }	  return    new    String(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
313	[BUG]  [BUGGY]  return  new  String(filename.substring(0,  filename.length()  -  2));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  new  String(filename.substring(0,  filename.length()  -  2));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  new  String(filename.substring(0,  filename.length()  -  2));	  return    new    String(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
314	[BUG]  [BUGGY]  return  new  String(filename.substring(0,  filenamePrefix.length()));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  new  String(filename.substring(0,  filenamePrefix.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  new  String(filename.substring(0,  filenamePrefix.length()));	  return    new    String(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
315	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()!=  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.length()!=  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.length()!=  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.length()    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
316	[BUG]  [BUGGY]  ||  filename.length()  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.length()  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.length()  ==  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.length()    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
317	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }	  if(filename.indexOf('$')    ==    0)    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
318	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  }	  if(filename.indexOf('$')    ==    0)    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
319	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filenamePrefix.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filenamePrefix.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filenamePrefix.length()  -  1);  }  else  {  normalizeSourceName(filename);  }	  if(filename.indexOf('$')    ==    0)    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
320	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.indexOf('$')    ==    0)    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
321	[BUG]  [BUGGY]  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
322	[BUG]  [BUGGY]  if(module.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
323	[BUG]  [BUGGY]  Integer  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Integer  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	Integer  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
324	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
325	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.lastIndexOf('.');  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.lastIndexOf('.');  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.lastIndexOf('.');  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
326	[BUG]  [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length()  -  1);  }	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
327	[BUG]  [BUGGY]  return  filename  +  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  filename.substring(0,  filename.length()  -  1);	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
328	[BUG]  [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length()  -  1);  }  else  {  return  filename  +  a$$module$test.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length()  -  1);  }  else  {  return  filename  +  a$$module$test.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf(module$test)  ==  0)  {  return  filename  +  a$$module$test.substring(0,  filename.length()  -  1);  }  else  {  return  filename  +  a$$module$test.substring(0,  filename.length()  -  1);  }	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
329	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  +  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filenamePrefix.length()  +  1);	  filename    =    filename.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
330	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  3);	  filename    =    filename.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
331	[BUG]  [BUGGY]  return  filename  +  File.separatorChar  +  module$test;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  File.separatorChar  +  module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  File.separatorChar  +  module$test;	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
332	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename  +  File.separatorChar  +  a$$module$test;  }	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
333	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  else  {  System.arraycopy(filename,  0,  a$$module$test,  0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  else  {  System.arraycopy(filename,  0,  a$$module$test,  0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  else  {  System.arraycopy(filename,  0,  a$$module$test,  0,  filename.length());  }	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
334	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  else  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  else  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  else  {  return  filename  +  File.separatorChar  +  a$$module$test;  }	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
335	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename  +  File.separatorChar  +  a$$module$test;  }  else  {  normalizeSourceName(filename);  }	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
336	[BUG]  [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test+filename;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test+filename;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  File.separatorChar  +  a$$module$test+filename;	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
337	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename,  filename.substring(0,  filenamePrefix.length());	  return    filename,    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
338	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename,  filename.substring(0,  filename.length()  -  1);	  return    filename,    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
339	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename,  filename.substring(0,  filename.length()  -  2);	  return    filename,    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
340	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename,  filename.substring(0,  filename.length()  -  4);	  return    filename,    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
341	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.substring(0,  filename.length()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename,  filename.substring(0,  filename.length()  +  1);	  return    filename,    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
342	[BUG]  [BUGGY]  return  filename.toUpperCase();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toUpperCase();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toUpperCase();	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
343	[BUG]  [BUGGY]  return  filename.toLowerCase(),  1;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(),  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(),  1;	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
344	[BUG]  [BUGGY]  return  filename.toLowerCase()  /  1;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  /  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase()  /  1;	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
345	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  2;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  +  2;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase()  +  2;	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
346	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.length()  -  1);	  result.append(filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
347	[BUG]  [BUGGY]  filename.append(filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.append(filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.append(filename.substring(0,  filename.length());	  result.append(filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
348	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault()  +  File.separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault()  +  File.separator);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.getDefault()  +  File.separator);	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
349	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  filename);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.getDefault(),  filename);	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
350	[BUG]  [BUGGY]  if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename.startsWith(   "/   "))    {    currentFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
351	[BUG]  [BUGGY]  if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "./ "))  {  currentFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "./ "))  {  currentFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "./ "))  {  currentFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename.startsWith(   "/   "))    {    currentFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
352	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "./ "))  {  currentFilename  =  currentFilename.substring(2);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "./ "))  {  currentFilename  =  currentFilename.substring(2);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "./ "))  {  currentFilename  =  currentFilename.substring(2);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename.startsWith(   "/   "))    {    currentFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
353	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(0,  filename.length()));	  result    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
354	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()).trim();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length()).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(0,  filename.length()).trim();	  result    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
355	[BUG]  [BUGGY]  filename.append(filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.append(filename.substring(0,  filename.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.append(filename.substring(0,  filename.length()));	  result.append(filename.substring(0,    filename.length()    -    2));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
356	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.length()  1));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filename.length()  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.length()  1));	  result.append(filename.substring(0,    filename.length()    -    2));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
357	[BUG]  [BUGGY]  return  filename.trim().toLowerCase(false);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim().toLowerCase(false);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim().toLowerCase(false);	  return    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
358	[BUG]  [BUGGY]  return  filename.trim().toLowerCase(true);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim().toLowerCase(true);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim().toLowerCase(true);	  return    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
359	[BUG]  [BUGGY]  return  filename.trim().substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim().substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim().substring(0,  filename.length()  -  2);	  return    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
360	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.ENGLISH  +  1);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
361	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  File.separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  File.separator);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.ENGLISH  +  File.separator);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
362	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  File.separatorChar  +  filename);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  File.separatorChar  +  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.ENGLISH  +  File.separatorChar  +  filename);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
363	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  File.separatorChar  +  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  File.separatorChar  +  filenamePrefix);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.ENGLISH  +  File.separatorChar  +  filenamePrefix);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
364	[BUG]  [BUGGY]  return  filename  +  filename.substring(1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  filename.substring(1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  filename.substring(1);	  return    filename    +    a$$module$test.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
365	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  a$$module$test);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  a$$module$test.substring(0,  a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  a$$module$test);	  return    filename    +    a$$module$test.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
366	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  a$$module$test.substring(0,  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  1);	  return    filename    +    a$$module$test.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
367	[BUG]  [BUGGY]  return  filename.substring(0,  filenameName.length());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenameName.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filenameName.length());	  return    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
368	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }	  if(filename.indexOf('$')    ==    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
369	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  -1)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  ==  -1)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  -1)  {  return  filename  +  a$$module$test;  }	  if(filename.indexOf('$')    ==    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
370	[BUG]  [BUGGY]  result  =  filename.substring(1,  filename.length());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(1,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(1,  filename.length());	  result    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
371	[BUG]  [BUGGY]  return  new  String(filename.substring(1,  filename.length()));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  new  String(filename.substring(1,  filename.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  new  String(filename.substring(1,  filename.length()));	  return    new    String(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
372	[BUG]  [BUGGY]  return  new  String(filename,  filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  new  String(filename,  filename.substring(0,  filename.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  new  String(filename,  filename.substring(0,  filename.length()));	  return    new    String(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
373	[BUG]  [BUGGY]  return  new  String(filename.substring(0,  filename.length()  +  2));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  new  String(filename.substring(0,  filename.length()  +  2));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  new  String(filename.substring(0,  filename.length()  +  2));	  return    new    String(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
374	[BUG]  [BUGGY]  if(filename.startsWith( "module$ "))  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "module$ "))  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "module$ "))  {  return  filename  +  a$$module$test;  }	  if(filename.startsWith(   "module$test   "))    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
375	[BUG]  [BUGGY]  if(filename.startsWith( "module$test ")||  filename.startsWith( "module$ "))  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "module$test ")||  filename.startsWith( "module$ "))  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "module$test ")||  filename.startsWith( "module$ "))  {  return  filename  +  a$$module$test;  }	  if(filename.startsWith(   "module$test   "))    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
376	[BUG]  [BUGGY]  if(filename.startsWith( ".module$ "))  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( ".module$ "))  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( ".module$ "))  {  return  filename  +  a$$module$test;  }	  if(filename.startsWith(   "module$test   "))    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
377	[BUG]  [BUGGY]  return  filename  +  filename;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  filename;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  filename;	  return    filename    +    module$test;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
378	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf( ".module$test ")  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf( ".module$test ")  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf( ".module$test ")  ==  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
379	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
380	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
381	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
382	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
383	[BUG]  [BUGGY]  filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
384	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  REQUIRE_FILENAME_PREFIX;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  REQUIRE_FILENAME_PREFIX;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  REQUIRE_FILENAME_PREFIX;  }	  if(filename    ==    null)    {    return    DEFAULT_FILENAME_PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
385	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  filename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  filename,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	System.arraycopy(filename,  0,  filename,  0,  filename.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
386	[BUG]  [BUGGY]  if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
387	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  module$test;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf( "module$test ")  ==  0)  {  return  module$test;  }	  if(filename!=    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
388	[BUG]  [BUGGY]  filename  =  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
389	[BUG]  [BUGGY]  ||  filename.indexOf( "module$test ")  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.indexOf( "module$test ")  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.indexOf( "module$test ")  ==  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
390	[BUG]  [BUGGY]  null  =  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  null  =  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	null  =  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);	  if(filename    ==    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
391	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_SEPARATOR);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_SEPARATOR);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_SEPARATOR);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
392	[BUG]  [BUGGY]  return  filename.substring(0,  filename.indexOf('.')+  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.indexOf('.')+  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.indexOf('.')+  1);	  return    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
393	[BUG]  [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  -1));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  -1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.lastIndexOf('.',  -1));	  return    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
394	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  EXPORTS);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  EXPORTS);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  normalizeSourceName(filename,  EXPORTS);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
395	[BUG]  [BUGGY]  if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename    ==    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
396	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(2);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(2);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(2);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename    ==    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
397	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
398	[BUG]  [BUGGY]  return  filename  +  toSourceName(filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  toSourceName(filename.substring(0,  filename.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  toSourceName(filename.substring(0,  filename.length()));	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
399	[BUG]  [BUGGY]  return  filename  +  files.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  files.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  files.substring(0,  filename.length());	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
400	[BUG]  [BUGGY]  return  filename  +  def.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  def.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  def.substring(0,  filename.length());	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
401	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
402	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
403	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCode  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCode  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCode	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
404	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
405	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ".java "))  {  return  normalizeSourceName();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.endsWith( ".java "))  {  return  normalizeSourceName();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.endsWith( ".java "))  {  return  normalizeSourceName();  }	  if(filename    ==    null)    {    return    normalizeSourceName();    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
406	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  normalizeSourceName();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename  ==  null)  {  return  normalizeSourceName();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename  ==  null)  {  return  normalizeSourceName();  }	  if(filename    ==    null)    {    return    normalizeSourceName();    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
407	[BUG]  [BUGGY]  if(filename.startsWith( ".java ")||  filename.startsWith( ".js "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( ".java ")||  filename.startsWith( ".js "))  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( ".java ")||  filename.startsWith( ".js "))  {  return  filename.toLowerCase();  }	  if(filename.startsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
408	[BUG]  [BUGGY]  File  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  File  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	File  currentFilename  =  filename.substring(0,  filename.length()  -  1);	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
409	[BUG]  [BUGGY]  return  filename  +  test.substring(0,  a$$module$test.length());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  test.substring(0,  a$$module$test.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  test.substring(0,  a$$module$test.length());	  return    filename    +    a$$module$test.substring(0,    a$$module$test.length());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
410	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  module$test.length());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  a$$module$test.substring(0,  module$test.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  module$test.length());	  return    filename    +    a$$module$test.substring(0,    a$$module$test.length());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
411	[BUG]  [BUGGY]  return  module$test  +  filename.substring(0,  a$$module$test.length());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  module$test  +  filename.substring(0,  a$$module$test.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  module$test  +  filename.substring(0,  a$$module$test.length());	  return    filename    +    a$$module$test.substring(0,    a$$module$test.length());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
412	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  3).trim();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  3).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  3).trim();	  return    filename.substring(0,    filename.length()).trim();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
413	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  ==  -1)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  ==  -1)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('$')  ==  -1)  {  return  filename;  }	  if(filename    ==    null    ||    filename.indexOf('$')    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
414	[BUG]  [BUGGY]  filename.append('n');  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.append('n');  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.append('n');	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
415	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length())+  1;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length())+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filenamePrefix.length())+  1;	  filename    =    filename.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
416	[BUG]  [BUGGY]  if(filename!=  null)  {  return  EXPORTS;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  EXPORTS;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  EXPORTS;  }	  if(filename!=    null)    {    return    DEFAULT_FILENAME_PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
417	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  else  {  System.arraycopy(filename,  0,  filename,  0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  else  {  System.arraycopy(filename,  0,  filename,  0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  else  {  System.arraycopy(filename,  0,  filename,  0,  filename.length());  }	  result.append(filename.substring(0,    filename.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
418	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  else  {  String  currentFilename  =  currentFilename.substring(0,  filename.length()  -  1);  System.arraycopy(currentFilename,  0,  currentFilename,  currentF  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  else  {  String  currentFilename  =  currentFilename.substring(0,  filename.length()  -  1);  System.arraycopy(currentFilename,  0,  currentFilename,  currentF  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  else  {  String  currentFilename  =  currentFilename.substring(0,  filename.length()  -  1);  System.arraycopy(currentFilename,  0,  currentFilename,  currentF	  result.append(filename.substring(0,    filename.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
419	[BUG]  [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  else  {  String  currentFilename  =  currentFilename.substring(0,  filename.length()  -  1);  System.arraycopy(currentFilename,  0,  currentFilename,  currentFilename  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  else  {  String  currentFilename  =  currentFilename.substring(0,  filename.length()  -  1);  System.arraycopy(currentFilename,  0,  currentFilename,  currentFilename  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.length()  ==  0)  {  result.append(filename.substring(0,  filename.length()  -  1));  }  else  {  String  currentFilename  =  currentFilename.substring(0,  filename.length()  -  1);  System.arraycopy(currentFilename,  0,  currentFilename,  currentFilename	  result.append(filename.substring(0,    filename.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
420	[BUG]  [BUGGY]  return  filename.trim()  +  1;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim()  +  1;	  return    filename.trim()    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
421	[BUG]  [BUGGY]  return  filename.trim()  +  a$$module$test  *  module$test;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  a$$module$test  *  module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim()  +  a$$module$test  *  module$test;	  return    filename.trim()    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
422	[BUG]  [BUGGY]  return  filename.trim()  +  a$$module$test+  1;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  a$$module$test+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim()  +  a$$module$test+  1;	  return    filename.trim()    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
423	[BUG]  [BUGGY]  if(sourceName!=  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(sourceName!=  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(sourceName!=  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }	  if(filename.indexOf('$')    ==    0)    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
424	[BUG]  [BUGGY]  if(filename.indexOf('$')  >=  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  >=  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  >=  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }	  if(filename.indexOf('$')    ==    0)    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
425	[BUG]  [BUGGY]  if(sourceName!=  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(sourceName!=  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(sourceName!=  null)  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  }	  if(filename.indexOf('$')    ==    0)    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
426	[BUG]  [BUGGY]  filename  =  filename.substring(1,  filename.length());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(1,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(1,  filename.length());	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
427	[BUG]  [BUGGY]  returns  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  returns  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	returns  filename.substring(0,  filename.length()  -  4);	  returns    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
428	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  filename  +  a$$module$test.substring(0,  filenamePrefix.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  filename  +  a$$module$test.substring(0,  filenamePrefix.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  filename  +  a$$module$test.substring(0,  filenamePrefix.length()  -  1);  }	  if(filename    ==    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
429	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename  +  a$$module$test.substring(0,  filenamePrefix.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename  +  a$$module$test.substring(0,  filenamePrefix.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename  +  a$$module$test.substring(0,  filenamePrefix.length()  -  1);  }	  if(filename    ==    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
430	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
431	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
432	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	for(String  currentFilename  :  filename.substring(0,  currentFilename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
433	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
434	[BUG]  [BUGGY]  if(filename!=  null)  {  return  super.normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  super.normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  super.normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    this.filename;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
435	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  this.filename;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.length()  ==  0)  {  return  this.filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.length()  ==  0)  {  return  this.filename;  }	  if(filename!=    null)    {    return    this.filename;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
436	[BUG]  [BUGGY]  ||  filename!=  null)  {  return  this.filename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename!=  null)  {  return  this.filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename!=  null)  {  return  this.filename;  }	  if(filename!=    null)    {    return    this.filename;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
437	[BUG]  [BUGGY]  return  filename  +  File.separatorChar  +  2  *  a$$module$test;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  File.separatorChar  +  2  *  a$$module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  File.separatorChar  +  2  *  a$$module$test;	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
438	[BUG]  [BUGGY]  return  filename  +  File.separatorChar  +  1;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  File.separatorChar  +  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  File.separatorChar  +  1;	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
439	[BUG]  [BUGGY]  return  filename  +  File.separatorChar  +  new  String(a$$module$test);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  File.separatorChar  +  new  String(a$$module$test);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  File.separatorChar  +  new  String(a$$module$test);	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
440	[BUG]  [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test  +  filenamePrefix;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test  +  filenamePrefix;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  File.separatorChar  +  a$$module$test  +  filenamePrefix;	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
441	[BUG]  [BUGGY]  if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename!=    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
442	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename  ==  null)  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename  ==  null)  {  return  normalizeSourceName(filename);  }	  ||    filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
443	[BUG]  [BUGGY]  result.append(filename.substring(1,  filename.length()));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(1,  filename.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(1,  filename.length()));	  result.append(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
444	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.lastIndexOf('.')));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filename.lastIndexOf('.')));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.lastIndexOf('.')));	  result.append(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
445	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  null)  {  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
446	[BUG]  [BUGGY]  if(module$test!=  null)  {  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test!=  null)  {  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test!=  null)  {  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
447	[BUG]  [BUGGY]  if(filename.indexOf('$')  <  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  <  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  <  0)  {  return  filename  +  a$$module$test;  }	  if(filename.indexOf('$')    >=    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
448	[BUG]  [BUGGY]  if(filename.endsWith( ".java ")||  filename.startsWith( ".java "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( ".java ")||  filename.startsWith( ".java "))  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java ")||  filename.startsWith( ".java "))  {  return  filename.toLowerCase();  }	  if(filename.endsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
449	[BUG]  [BUGGY]  filename.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.toLowerCase();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.toLowerCase();	  if(filename.endsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
450	[BUG]  [BUGGY]  filename  =  filename.trim();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.trim();	  if(filename!=    null)    {    return    filename.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
451	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.toString();  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename.toString();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename.toString();  }	  if(filename!=    null)    {    return    filename.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
452	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename.substring(1);  }	  if(filename!=    null)    {    return    filename.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
453	[BUG]  [BUGGY]  if(filename  >=  null)  {  return  filename.trim();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  >=  null)  {  return  filename.trim();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  >=  null)  {  return  filename.trim();  }	  if(filename!=    null)    {    return    filename.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
454	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length())+  1  +  a$$module$test;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length())+  1  +  a$$module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length())+  1  +  a$$module$test;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
455	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  2)+  1;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  2)+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  2)+  1;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
456	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||(filename!=  null  &&  filename.length()  >  0))  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||(filename!=  null  &&  filename.length()  >  0))  {  return  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
457	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".java ")))  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||(filename!=  null  &&  filename.endsWith( ".java ")))  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||(filename!=  null  &&  filename.endsWith( ".java ")))  {  return  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
458	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.indexOf('$')  ==  0))  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||(filename!=  null  &&  filename.indexOf('$')  ==  0))  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||(filename!=  null  &&  filename.indexOf('$')  ==  0))  {  return  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
459	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.indexOf( "$ ")  ==  0))  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||(filename!=  null  &&  filename.indexOf( "$ ")  ==  0))  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||(filename!=  null  &&  filename.indexOf( "$ ")  ==  0))  {  return  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
460	[BUG]  [BUGGY]  filename  =  normalizeSourceName(filename);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  normalizeSourceName(filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  normalizeSourceName(filename);	  if(filename    ==    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
461	[BUG]  [BUGGY]  null  =  normalizeSourceName(filename);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  null  =  normalizeSourceName(filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	null  =  normalizeSourceName(filename);	  if(filename    ==    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
462	[BUG]  [BUGGY]  return  filename  +  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  filename.substring(0,  filename.length()  -  2);	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
463	[BUG]  [BUGGY]  return  filename  +  toSourceName(filename.substring(0,  filename.length()  -  2));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  toSourceName(filename.substring(0,  filename.length()  -  2));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  toSourceName(filename.substring(0,  filename.length()  -  2));	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
464	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
465	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
466	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
467	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
468	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCode  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCode  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCode	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
469	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
470	[BUG]  [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.report  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.report  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.report	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
471	[BUG]  [BUGGY]  return  filename,  filename.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.toLowerCase();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename,  filename.toLowerCase();	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
472	[BUG]  [BUGGY]  return  filename.toLowerCase()  -  1;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  -  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase()  -  1;	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
473	[BUG]  [BUGGY]  returns  filename.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  returns  filename.toLowerCase();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	returns  filename.toLowerCase();	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
474	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.toUpperCase();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename.toUpperCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename.toUpperCase();  }	  if(filename!=    null)    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
475	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
476	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename,  filename.substring(0,  filename.length()  -  3);	  return    filename,    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
477	[BUG]  [BUGGY]  return  filename  +  filenamePrefix.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  filenamePrefix.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  filenamePrefix.substring(0,  filenamePrefix.length());	  return    filename    +    a$$module$test.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
478	[BUG]  [BUGGY]  File  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  File  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	File  filename  =  filename.substring(0,  filename.length()  -  2);	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
479	[BUG]  [BUGGY]  File  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  File  filename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	File  filename  =  filename.substring(0,  filename.length());	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
480	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename  +   "$module$test ";  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename  +   "$module$test ";  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename  +   "$module$test ";  }	  if(filename!=    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
481	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrettyPrint.length());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenamePrettyPrint.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filenamePrettyPrint.length());	  return    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
482	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.length()  2));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filename.length()  2));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.length()  2));	  result.append(filename.substring(0,    filename.length()    -    2));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
483	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.length()).trim());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filename.length()).trim());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.length()).trim());	  result.append(filename.substring(0,    filename.length()    -    2));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
484	[BUG]  [BUGGY]  if(!module.isEmpty())  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(!module.isEmpty())  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(!module.isEmpty())  {  if(filename.indexOf('$')  ==  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }	  if(filename.indexOf('$')    ==    0)    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
485	[BUG]  [BUGGY]  if(filename.indexOf('$')  <  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  <  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  <  0)  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  else  {  normalizeSourceName(filename);  }	  if(filename.indexOf('$')    ==    0)    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
486	[BUG]  [BUGGY]  return  new  String(filename.substring(0,  filename.lastIndexOf('.')));  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  new  String(filename.substring(0,  filename.lastIndexOf('.')));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  new  String(filename.substring(0,  filename.lastIndexOf('.')));	  return    new    String(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
487	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX,  requiredFilename);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX,  requiredFilename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX,  requiredFilename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
488	[BUG]  [BUGGY]  return  filename.trim().toLowerCase(lenient);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim().toLowerCase(lenient);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim().toLowerCase(lenient);	  return    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
489	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.length()  ==  0)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.length()  ==  0)  {  return  DEFAULT_FILENAME_SEPARATOR;  }	  if(filename    ==    null)    {    return    DEFAULT_FILENAME_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
490	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('/')  ==  0)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('/')  ==  0)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('/')  ==  0)  {  return  DEFAULT_FILENAME_SEPARATOR;  }	  if(filename    ==    null)    {    return    DEFAULT_FILENAME_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
491	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "filename ")  ==  0)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "filename ")  ==  0)  {  return  DEFAULT_FILENAME_SEPARATOR;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf( "filename ")  ==  0)  {  return  DEFAULT_FILENAME_SEPARATOR;  }	  if(filename    ==    null)    {    return    DEFAULT_FILENAME_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
492	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  MODULE_NAME_SEPARATOR;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  MODULE_NAME_SEPARATOR;  }	  if(filename    ==    null)    {    return    DEFAULT_FILENAME_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
493	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  1,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  1,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	System.arraycopy(filename,  0,  currentFilename,  1,  filename.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
494	[BUG]  [BUGGY]  if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(requiredFilename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
495	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
496	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
497	[BUG]  [BUGGY]  return  module$test  +  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  module$test  +  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  module$test  +  filename.substring(0,  filename.length()  -  1);	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
498	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length())+  1;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length())+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result  =  filename.substring(0,  filename.length())+  1;	  result    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
499	[BUG]  [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  module));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  module));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.lastIndexOf('.',  module));	  return    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
500	[BUG]  [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  MAX_VALUE_SEPARATOR));  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  MAX_VALUE_SEPARATOR));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.lastIndexOf('.',  MAX_VALUE_SEPARATOR));	  return    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
501	[BUG]  [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  '/'));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  '/'));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.lastIndexOf('.',  '/'));	  return    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
502	[BUG]  [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  len));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  len));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.lastIndexOf('.',  len));	  return    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
503	[BUG]  [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  2));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.',  2));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.lastIndexOf('.',  2));	  return    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
504	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "$test ")  ==  0)  {  return  normalizeSourceName();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "$test ")  ==  0)  {  return  normalizeSourceName();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf( "$test ")  ==  0)  {  return  normalizeSourceName();  }	  if(filename    ==    null)    {    return    normalizeSourceName();    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
505	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  >=  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.length()  >=  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.length()  >=  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.length()    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
506	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.length()  <  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.length()  <  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.length()  <  0)  {  return  filename;  }	  if(filename    ==    null    ||    filename.length()    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
507	[BUG]  [BUGGY]  ||  filename  ==  null)  {  return  new  String(filename.substring(0,  filename.length()  -  2));  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename  ==  null)  {  return  new  String(filename.substring(0,  filename.length()  -  2));  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename  ==  null)  {  return  new  String(filename.substring(0,  filename.length()  -  2));  }	  ||    filename    ==    null)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
508	[BUG]  [BUGGY]  if(filename.indexOf('$')  >=  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  >=  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  >=  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
509	[BUG]  [BUGGY]  if(filename.indexOf('$')  <  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  <  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  <  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
510	[BUG]  [BUGGY]  if(module!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
511	[BUG]  [BUGGY]  if(module!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
512	[BUG]  [BUGGY]  if(module!=  null)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module!=  null)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module!=  null)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  ++i)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    ++i)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
513	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  1,  filename.length()).trim();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  1,  filename.length()).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  1,  filename.length()).trim();	  return    filename.substring(0,    filename.length()).trim();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
514	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.indexOf( "$test ")  >=  0))  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||(filename!=  null  &&  filename.indexOf( "$test ")  >=  0))  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||(filename!=  null  &&  filename.indexOf( "$test ")  >=  0))  {  return  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
515	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.indexOf( "$test ")  ==  0))  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||(filename!=  null  &&  filename.indexOf( "$test ")  ==  0))  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||(filename!=  null  &&  filename.indexOf( "$test ")  ==  0))  {  return  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
516	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  requiredFilename);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  requiredFilename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  normalizeSourceName(filename,  requiredFilename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
517	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.indexOf( "$module$test ")  >=  0))  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||(filename!=  null  &&  filename.indexOf( "$module$test ")  >=  0))  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||(filename!=  null  &&  filename.indexOf( "$module$test ")  >=  0))  {  return  normalizeSourceName(filename);  }	  if(filename!=    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
518	[BUG]  [BUGGY]  if(filename.endsWith( "java/lang/Object "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( "java/lang/Object "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( "java/lang/Object "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename!=    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
519	[BUG]  [BUGGY]  if(filename.startsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename!=    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
520	[BUG]  [BUGGY]  if(filename.startsWith( "java/lang/ "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "java/lang/ "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "java/lang/ "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename!=  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename!=    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
521	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  filename  +  a$$module$test;  }	  if(filename    ==    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
522	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename  +  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename  +  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  normalizeSourceName(filename  +  a$$module$test);  }	  if(filename    ==    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
523	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename,  filename  +  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename,  filename  +  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  normalizeSourceName(filename,  filename  +  a$$module$test);  }	  if(filename    ==    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
524	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  <  0)  {  return  filename  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  <  0)  {  return  filename  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('$')  <  0)  {  return  filename  +  a$$module$test;  }	  if(filename    ==    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
525	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    2);    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
526	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  else  {  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  else  {  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length());  }  else  {  normalizeSourceName(filename);  }	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    else    {    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
527	[BUG]  [BUGGY]  return  module$test  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  module$test  +  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  module$test  +  filename.substring(0,  filename.length());	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
528	[BUG]  [BUGGY]  return  filename  +  className.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  className.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  className.substring(0,  filename.length());	  return    filename    +    a$$module$test.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
529	[BUG]  [BUGGY]  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.substring(0,  filenamePrefix.length());	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
530	[BUG]  [BUGGY]  filename.append('/');  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.append('/');  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename.append('/');	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
531	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
532	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()).trim();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filename.length()).trim();	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
533	[BUG]  [BUGGY]  if(filename.startsWith( "java/lang/ "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "java/lang/ "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "java/lang/ "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename.startsWith(   "/   "))    {    currentFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
534	[BUG]  [BUGGY]  if(filename.indexOf( "java/lang/Object ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf( "java/lang/Object ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf( "java/lang/Object ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename.startsWith( "/ "))  {  currentFilename  =  currentFilename.substring	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename.startsWith(   "/   "))    {    currentFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
535	[BUG]  [BUGGY]  if(filename.indexOf('.')  ==  0)  {  if(filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('.')  ==  0)  {  if(filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('.')  ==  0)  {  if(filename.endsWith( ".java "))  {  currentFilename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename.startsWith(   "/   "))    {    currentFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
536	[BUG]  [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  null)  {  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  null)  {  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
537	[BUG]  [BUGGY]  if(module$test!=  null)  {  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test!=  null)  {  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test!=  null)  {  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  compiler.reportCodeChange();  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
538	[BUG]  [BUGGY]  if(module.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  module$test.length()  -  1);  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  module$test.length()  -  1);  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module.indexOf( "module$test ")  ==  0)  {  String  currentFilename  =  filename.substring(0,  module$test.length()  -  1);  compiler.reportCodeChange();  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
539	[BUG]  [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length());  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length());  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf(module$test)  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length());  compiler.reportCodeChange();  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
540	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  a$$module$test).trim();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  a$$module$test.substring(0,  a$$module$test).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  a$$module$test).trim();	  return    filename    +    a$$module$test.substring(1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
541	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  module);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  module);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.ENGLISH,  module);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
542	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH).trim();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.ENGLISH).trim();	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
543	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH)+  1;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH)+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.ENGLISH)+  1;	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
544	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  sourceName);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  sourceName);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.ENGLISH,  sourceName);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
545	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename.substring(0,  filename.length()  -  1);  }	  if(filename!=    null)    {    return    filename.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
546	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.substring(0,  filename.length()  -  2);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename.substring(0,  filename.length()  -  2);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename.substring(0,  filename.length()  -  2);  }	  if(filename!=    null)    {    return    filename.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
547	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.substring(0,  filenamePrefix.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename.substring(0,  filenamePrefix.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename.substring(0,  filenamePrefix.length()  -  1);  }	  if(filename!=    null)    {    return    filename.trim();    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
548	[BUG]  [BUGGY]  if(filename.endsWith( "java/lang/Object "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( "java/lang/Object "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( "java/lang/Object "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename    ==    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
549	[BUG]  [BUGGY]  if(filename.startsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename    ==    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
550	[BUG]  [BUGGY]  if(filename.startsWith( "java/lang/ "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "java/lang/ "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "java/lang/ "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  if(currentFilename  ==  null)  {  requiredFilename  =  currentFilename.substring(1);  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    if(currentFilename    ==    null)    {    requiredFilename    =    currentFilename.substring(1);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
551	[BUG]  [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length());  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length());  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( ".java "))  {  String  currentFilename  =  filename.substring(0,  filename.length());  return  currentFilename;  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
552	[BUG]  [BUGGY]  if(filename.startsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "java "))  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	  if(filename.endsWith(   ".java   "))    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
553	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf('$')  <  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf('$')  <  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf('$')  <  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf('$')    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
554	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf( "filename ")  ==  0)  {  return  this.filename;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf( "filename ")  ==  0)  {  return  this.filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf( "filename ")  ==  0)  {  return  this.filename;  }	  if(filename!=    null)    {    return    this.filename;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
555	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf( "filename ")  >=  0)  {  return  this.filename;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf( "filename ")  >=  0)  {  return  this.filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf( "filename ")  >=  0)  {  return  this.filename;  }	  if(filename!=    null)    {    return    this.filename;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
556	[BUG]  [BUGGY]  return  module$test  +  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  module$test  +  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  module$test  +  filename.substring(0,  filenamePrefix.length());	  return    filename    +    a$$module$test.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
557	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf(filenamePrefix)  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf(filenamePrefix)  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf(filenamePrefix)  ==  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf(filenamePrefix)    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
558	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf('/')  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf('/')  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf('/')  ==  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf(filenamePrefix)    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
559	[BUG]  [BUGGY]  if(filename!=  null  ||  filename.indexOf('n')  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null  ||  filename.indexOf('n')  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null  ||  filename.indexOf('n')  ==  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf(filenamePrefix)    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
560	[BUG]  [BUGGY]  return  filename  +  a$$module$test.substring(0,  a$$module$test.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  a$$module$test.substring(0,  a$$module$test.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test.substring(0,  a$$module$test.length()  -  2);	  return    filename    +    a$$module$test.substring(0,    a$$module$test.length());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
561	[BUG]  [BUGGY]  return  filename  +  filename.substring(0,  a$$module$test.length());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  filename.substring(0,  a$$module$test.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  filename.substring(0,  a$$module$test.length());	  return    filename    +    a$$module$test.substring(0,    a$$module$test.length());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
562	[BUG]  [BUGGY]  if(filename.startsWith( "java/lang/ "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "java/lang/ "))  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "java/lang/ "))  {  return  filename.toLowerCase();  }	  if(filename.startsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
563	[BUG]  [BUGGY]  if(filename.startsWith( "java/lang/Object "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "java/lang/Object "))  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "java/lang/Object "))  {  return  filename.toLowerCase();  }	  if(filename.startsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
564	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenameName.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filenameName.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	filename  =  filename.substring(0,  filenameName.length()  -  2);	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
565	[BUG]  [BUGGY]  return  filename.trim()  +  a$$module$test,  a$$module$test;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  a$$module$test,  a$$module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim()  +  a$$module$test,  a$$module$test;	  return    filename.trim()    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
566	[BUG]  [BUGGY]  return  filename.trim()  -  a$$module$test;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  -  a$$module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim()  -  a$$module$test;	  return    filename.trim()    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
567	[BUG]  [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test,  module$test;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test,  module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  File.separatorChar  +  a$$module$test,  module$test;	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
568	[BUG]  [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test,  a$$module$test;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test,  a$$module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  File.separatorChar  +  a$$module$test,  a$$module$test;	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
569	[BUG]  [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test=(filename.length()  >  0)?  filename.substring(0,  filename.length()  -  1):  filename  +  File.separatorChar  +  a$$module$test;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test=(filename.length()  >  0)?  filename.substring(0,  filename.length()  -  1):  filename  +  File.separatorChar  +  a$$module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  File.separatorChar  +  a$$module$test=(filename.length()  >  0)?  filename.substring(0,  filename.length()  -  1):  filename  +  File.separatorChar  +  a$$module$test;	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
570	[BUG]  [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test=(filename.length()  >  0)?  filename.substring(0,  filename.length()  -  2):  filename  +  File.separatorChar  +  a$$module$test;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test=(filename.length()  >  0)?  filename.substring(0,  filename.length()  -  2):  filename  +  File.separatorChar  +  a$$module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  File.separatorChar  +  a$$module$test=(filename.length()  >  0)?  filename.substring(0,  filename.length()  -  2):  filename  +  File.separatorChar  +  a$$module$test;	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
571	[BUG]  [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test=(filename.length()  >  0)?  filename.substring(0,  filename.length()  -  1):  filename;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  File.separatorChar  +  a$$module$test=(filename.length()  >  0)?  filename.substring(0,  filename.length()  -  1):  filename;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  File.separatorChar  +  a$$module$test=(filename.length()  >  0)?  filename.substring(0,  filename.length()  -  1):  filename;	  return    filename    +    File.separatorChar    +    a$$module$test;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
572	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  sourceName;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  sourceName;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('$')  ==  0)  {  return  sourceName;  }	  if(filename    ==    null    ||    filename.indexOf('$')    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
573	[BUG]  [BUGGY]  if(filename.startsWith( "module$test   "))  {  return  module$test  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "module$test   "))  {  return  module$test  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "module$test   "))  {  return  module$test  +  a$$module$test;  }	  if(filename.startsWith(   "module$test   "))    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
574	[BUG]  [BUGGY]  if(filename.startsWith( "module$test "))  {  return  filename  +  module$test;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.startsWith( "module$test "))  {  return  filename  +  module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.startsWith( "module$test "))  {  return  filename  +  module$test;  }	  if(filename.startsWith(   "module$test   "))    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
575	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.lastIndexOf('.')-  1));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filename.lastIndexOf('.')-  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.lastIndexOf('.')-  1));	  result.append(filename.substring(0,    filename.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
576	[BUG]  [BUGGY]  result.append(filename.substring(0,  filenamePrefix.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filenamePrefix.length()  -  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filenamePrefix.length()  -  1));	  result.append(filename.substring(0,    filename.length()    -    1));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
577	[BUG]  [BUGGY]  if(filename.indexOf('$')  >=  0)  {  return  filename  +  1;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  >=  0)  {  return  filename  +  1;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  >=  0)  {  return  filename  +  1;  }	  if(filename.indexOf('$')    >=    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
578	[BUG]  [BUGGY]  if(filename.indexOf('$')  >=  0)  {  return  filename  +   "$module$test ";  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  >=  0)  {  return  filename  +   "$module$test ";  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  >=  0)  {  return  filename  +   "$module$test ";  }	  if(filename.indexOf('$')    >=    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
579	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.indexOf( "module$test ")  ==  0))  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||(filename!=  null  &&  filename.indexOf( "module$test ")  ==  0))  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||(filename!=  null  &&  filename.indexOf( "module$test ")  ==  0))  {  return  normalizeSourceName(filename);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
580	[BUG]  [BUGGY]  ||(filename!=  null  &&  filename.indexOf( "module$test ")  >=  0))  {  return  normalizeSourceName(filename);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||(filename!=  null  &&  filename.indexOf( "module$test ")  >=  0))  {  return  normalizeSourceName(filename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||(filename!=  null  &&  filename.indexOf( "module$test ")  >=  0))  {  return  normalizeSourceName(filename);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
581	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.lastIndexOf( "$test ")));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filename.lastIndexOf( "$test ")));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.lastIndexOf( "$test ")));	  result.append(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
582	[BUG]  [BUGGY]  result.append(filename.substring(0,  filename.indexOf( "module$test ")));  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result.append(filename.substring(0,  filename.indexOf( "module$test ")));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	result.append(filename.substring(0,  filename.indexOf( "module$test ")));	  result.append(filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
583	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault())+  1;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault())+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.getDefault())+  1;	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
584	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault()).trim();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault()).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase(Locale.getDefault()).trim();	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
585	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf('/')  ==  0)  {  return  DEFAULT_FILENAME_PREFIX;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf('/')  ==  0)  {  return  DEFAULT_FILENAME_PREFIX;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf('/')  ==  0)  {  return  DEFAULT_FILENAME_PREFIX;  }	  if(filename    ==    null)    {    return    DEFAULT_FILENAME_PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
586	[BUG]  [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "filename ")  ==  0)  {  return  DEFAULT_FILENAME_PREFIX;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null  ||  filename.indexOf( "filename ")  ==  0)  {  return  DEFAULT_FILENAME_PREFIX;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null  ||  filename.indexOf( "filename ")  ==  0)  {  return  DEFAULT_FILENAME_PREFIX;  }	  if(filename    ==    null)    {    return    DEFAULT_FILENAME_PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
587	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename  +  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename  +  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  normalizeSourceName(filename  +  a$$module$test);  }	  if(filename!=    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
588	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  filename  +  a$$module$test);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  filename  +  a$$module$test);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  normalizeSourceName(filename,  filename  +  a$$module$test);  }	  if(filename!=    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
589	[BUG]  [BUGGY]  if(filename!=  null)  {  return  module  +  a$$module$test;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  module  +  a$$module$test;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  module  +  a$$module$test;  }	  if(filename!=    null)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
590	[BUG]  [BUGGY]  if(module$test  ==  0)  {  String  currentFilename  =  filename.substring(0,  module$test.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  0)  {  String  currentFilename  =  filename.substring(0,  module$test.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  0)  {  String  currentFilename  =  filename.substring(0,  module$test.length()  -  1);  return  currentFilename;  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
591	[BUG]  [BUGGY]  if(module$test  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  0)  {  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  return  currentFilename;  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
592	[BUG]  [BUGGY]  if(module$test  ==  null)  {  String  currentFilename  =  filename.substring(0,  module$test.length()  -  1);  return  currentFilename;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module$test  ==  null)  {  String  currentFilename  =  filename.substring(0,  module$test.length()  -  1);  return  currentFilename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module$test  ==  null)  {  String  currentFilename  =  filename.substring(0,  module$test.length()  -  1);  return  currentFilename;  }	  if(filename.indexOf(   "module$test   ")    ==    0)    {    String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    return    currentFilename;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
593	[BUG]  [BUGGY]  if(module!=  null  &&  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module!=  null  &&  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module!=  null  &&  filename.indexOf( "module$test   ")  ==  0)  {  return  filename;  }	  if(filename!=    null    ||    filename.indexOf(   "module$test   ")    ==    0)    {    return    filename;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
594	[BUG]  [BUGGY]  if(filename!=  null)  {  return  sourceName.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  sourceName.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  sourceName.toLowerCase();  }	  if(filename!=    null)    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
595	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename.toLowerCase()  +  1;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  filename.toLowerCase()  +  1;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename.toLowerCase()  +  1;  }	  if(filename!=    null)    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
596	[BUG]  [BUGGY]  if(filename.indexOf('$')  >=  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  >=  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  >=  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
597	[BUG]  [BUGGY]  if(filename.indexOf('$')  <  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  <  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  <  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
598	[BUG]  [BUGGY]  if(module!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
599	[BUG]  [BUGGY]  if(module!=  null)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module!=  null)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module!=  null)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange();  }	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
600	[BUG]  [BUGGY]  if(module!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(module!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(module!=  null)  {  if(filename.indexOf('$')  ==  0)  {  int  scriptNodeCount  =  filename.length();  for(int  i  =  0;  i  <  scriptNodeCount;  i++)  {  compiler.reportCodeChange	  if(filename.indexOf('$')    ==    0)    {    int    scriptNodeCount    =    filename.length();    for(int    i    =    0;    i    <    scriptNodeCount;    i++)    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
601	[BUG]  [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  sourceName);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  normalizeSourceName(filename,  sourceName);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  normalizeSourceName(filename,  sourceName);  }	  if(filename!=    null)    {    return    sourceName;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
602	[BUG]  [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  MODULE_NAME_SEPARATOR;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  MODULE_NAME_SEPARATOR;  }	  if(filename!=    null)    {    return    DEFAULT_FILENAME_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
603	[BUG]  [BUGGY]  if(filename!=  null)  {  return  deFAULT_FILENAME_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  deFAULT_FILENAME_SEPARATOR;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  deFAULT_FILENAME_SEPARATOR;  }	  if(filename!=    null)    {    return    DEFAULT_FILENAME_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
604	[BUG]  [BUGGY]  if(!filename.endsWith( ".java "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(!filename.endsWith( ".java "))  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(!filename.endsWith( ".java "))  {  return  filename.toLowerCase();  }	  if(filename.endsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
605	[BUG]  [BUGGY]  if(filename.endsWith( "java/lang/Object "))  {  return  filename.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.endsWith( "java/lang/Object "))  {  return  filename.toLowerCase();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.endsWith( "java/lang/Object "))  {  return  filename.toLowerCase();  }	  if(filename.endsWith(   ".java   "))    {    return    filename.toLowerCase();    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
606	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  1);	  return    filename.substring(0,    filename.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
607	[BUG]  [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  ||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	||  filename.endsWith( ".java "))  {  filename  =  filename.substring(0,  filename.length()  -  1);  }	  if(filename.endsWith(   ".java   "))    {    filename    =    filename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
608	[BUG]  [BUGGY]  if(filename!=  null)  {  return  REQUIRE_FILENAME_PREFIX;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  return  REQUIRE_FILENAME_PREFIX;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  REQUIRE_FILENAME_PREFIX;  }	  if(filename!=    null)    {    return    DEFAULT_FILENAME_PREFIX;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
609	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()).trim();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	String  currentFilename  =  filename.substring(0,  filename.length()).trim();	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
610	[BUG]  [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.'))  +  1;  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.lastIndexOf('.'))  +  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.lastIndexOf('.'))  +  1;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
611	[BUG]  [BUGGY]  Result.append(filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Result.append(filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	Result.append(filename.substring(0,  filename.length());	  result.append(filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
612	[BUG]  [BUGGY]  results.append(filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  results.append(filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	results.append(filename.substring(0,  filename.length());	  result.append(filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
613	[BUG]  [BUGGY]  return  filename  +  module$test,  a$$module$test;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename  +  module$test,  a$$module$test;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  module$test,  a$$module$test;	  return    filename    +    module$test;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
614	[BUG]  [BUGGY]  if(filename  >=  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  >=  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  >=  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
615	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX,  requiredFilename);  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX,  requiredFilename);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX,  requiredFilename);  }	  if(filename    ==    null)    {    return    normalizeSourceName(filename,    DEFAULT_FILENAME_PREFIX);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
616	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  return  filename  +  1;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  ==  0)  {  return  filename  +  1;  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  return  filename  +  1;  }	  if(filename.indexOf('$')    ==    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
617	[BUG]  [BUGGY]  if(filename.indexOf('$')  ==  0)  {  return  filename  +   "$module$test ";  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide(     "module$test     ");var  module$test={};var  a$$module$test=1      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename.indexOf('$')  ==  0)  {  return  filename  +   "$module$test ";  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename.indexOf('$')  ==  0)  {  return  filename  +   "$module$test ";  }	  if(filename.indexOf('$')    ==    0)    {    return    filename    +    a$$module$test;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
