bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }  [BUGGY]  return  filename.substring(0,  filename.length()  -  1);  [BUGGY]  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  1);	return  filename;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
2	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }  [BUGGY]  return  filename.substring(0,  filename.length()  -  2);  [BUGGY]  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  2);	return  filename;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
3	[BUG]  [BUGGY]  return  filename.toLowerCase();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }  [BUGGY]  return  filename.toLowerCase();  [BUGGY]  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.toLowerCase();	return  filename;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
4	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }  [BUGGY]  return  filename.substring(0,  filename.length()  -  3);  [BUGGY]  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  3);	return  filename;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
5	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }  [BUGGY]  return  filename.substring(0,  filename.length()  -  4);  [BUGGY]  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(0,  filename.length()  -  4);	return  filename;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
6	[BUG]  [BUGGY]  if(filename!=  null)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }  [BUGGY]  if(filename!=  null)  {  return  filename;  }  [BUGGY]  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename!=  null)  {  return  filename;  }	return  filename;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
7	[BUG]  [BUGGY]  if(filename  ==  null)  {  return  filename;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }  [BUGGY]  if(filename  ==  null)  {  return  filename;  }  [BUGGY]  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	if(filename  ==  null)  {  return  filename;  }	return  filename;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }  [BUGGY]    [BUGGY]  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	  	return  filename;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
9	[BUG]  [BUGGY]  return  filename.trim();  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }  [BUGGY]  return  filename.trim();  [BUGGY]  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.trim();	return  filename;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
10	[BUG]  [BUGGY]  return  filename  +  a$$module$test;  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }  [BUGGY]  return  filename  +  a$$module$test;  [BUGGY]  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename  +  a$$module$test;	return  filename;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
11	[BUG]  [BUGGY]  return  filename.substring(1);  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected:  goog.provide( "module$test ");var  module$test={};var  a$$module$test=1  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {  if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }  [BUGGY]  return  filename.substring(1);  [BUGGY]  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  JSModule  module  AbstractCompiler  compiler  boolean  reportDependencies  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure26/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.9128709291752769	118	118	5	replace	return  filename.substring(1);	return  filename;  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
